/*
░██████╗░██╗░░░██╗███████╗███████╗███╗░░██╗
██╔═══██╗██║░░░██║██╔════╝██╔════╝████╗░██║
██║██╗██║██║░░░██║█████╗░░█████╗░░██╔██╗██║
╚██████╔╝██║░░░██║██╔══╝░░██╔══╝░░██║╚████║
░╚═██╔═╝░╚██████╔╝███████╗███████╗██║░╚███║
░░░╚═╝░░░░╚═════╝░╚══════╝╚══════╝╚═╝░░╚══╝
░█████╗░███╗░░░███╗██████╗░██╗
██╔══██╗████╗░████║██╔══██╗██║
███████║██╔████╔██║██║░░██║██║
██╔══██║██║╚██╔╝██║██║░░██║██║ █▀█ █▀▀█ █▀█ ▄█─ 
██║░░██║██║░╚═╝░██║██████╔╝██║ ─▄▀ █▄▀█ ─▄▀ ─█─ 
╚═╝░░╚═╝╚═╝░░░░░╚═╝╚═════╝░╚═╝ █▄▄ █▄▄█ █▄▄ ▄█▄
Copyright (C) 2021 Black Amda.
Licensed under the  GPL-3.0 License;
you may not use this file except in compliance with the License.
*/

const QueenAmdi = require('queenamdi-public');
const Amdi = QueenAmdi.events
const Build = QueenAmdi.build

const {MessageType,Mimetype} = require('@blackamda/queenamdi-web-api');
const fs = require('fs');
const ffmpeg = require('fluent-ffmpeg');
let LOL = Build.WORKTYPE == 'public' ? false : true

function _0x2610(_0x26104e,_0x2dde56){const _0x5f1b9f=_0x49f8();return _0x2610=function(_0x1c4247,_0x40657a){_0x1c4247=_0x1c4247-(0x1a8f+0x5*0x6c8+0x1da5*-0x2);let _0x4fa5d2=_0x5f1b9f[_0x1c4247];return _0x4fa5d2;},_0x2610(_0x26104e,_0x2dde56);}function _0x57dd3e(_0x4e990c,_0x294887,_0x1e21e0,_0x43a677,_0x16e474){return _0x2610(_0x16e474-0x340,_0x1e21e0);}function _0xe32ea2(_0x5ec0ad,_0x34652e,_0x2c022a,_0x490ba4,_0x5a01cc){return _0x2610(_0x5ec0ad-0x253,_0x5a01cc);}(function(_0x5e2e60,_0x4dc3ef){function _0x4d2575(_0xce4b7f,_0x7dc9fc,_0x560b98,_0x8ae216,_0x5a9060){return _0x2610(_0x8ae216- -0x1cf,_0xce4b7f);}const _0x24b164=_0x5e2e60();function _0xa5ca6a(_0x18b111,_0x1eb0e3,_0x821d2f,_0x304521,_0x2800e){return _0x2610(_0x1eb0e3-0xa5,_0x821d2f);}function _0x3c4004(_0x44e65d,_0x2699e0,_0x5b0627,_0x41d134,_0x5492d8){return _0x2610(_0x44e65d- -0x18e,_0x41d134);}function _0x3c7522(_0x84bd1a,_0x2871d3,_0x2d8882,_0x2434e7,_0xd0b8e2){return _0x2610(_0x2d8882-0x352,_0x2871d3);}function _0x20e023(_0x229b6c,_0x2933e3,_0x3ec96e,_0x54bc65,_0x27d520){return _0x2610(_0x229b6c-0x286,_0x54bc65);}while(!![]){try{const _0x10274e=-parseInt(_0x20e023(0x548,0x5a3,0x5da,0x5e2,0x5b3))/(0x191c+-0x20fd+-0x7e2*-0x1)*(parseInt(_0x20e023(0x540,0x52d,0x3f9,0x508,0x454))/(-0x1e7d+-0x1be1+-0x2*-0x1d30))+parseInt(_0xa5ca6a(0x368,0x3b5,0x4cd,0x430,0x2a5))/(0x1*0x5c9+-0x184e+0x1288)+parseInt(_0x3c4004(0x48,0xd7,0x131,-0x106,-0x16))/(-0xa*0x5+-0xe7b+-0xeb1*-0x1)*(parseInt(_0x4d2575(0x17d,0x58,0x247,0x155,0x105))/(0x6*-0x3a3+-0x12ea+0x28c1))+-parseInt(_0x3c7522(0x67f,0x5e7,0x5d0,0x6b1,0x46d))/(-0x1343*-0x1+-0x1974+0x637*0x1)+parseInt(_0x20e023(0x648,0x5fd,0x6a7,0x5fc,0x613))/(0xb0a+-0x6b*-0x8+-0x31*0x4b)+-parseInt(_0x20e023(0x611,0x6cb,0x5d8,0x4dd,0x5cf))/(0x23d2+0x134*-0x10+-0x1*0x108a)*(parseInt(_0xa5ca6a(0x338,0x29b,0x391,0x3d6,0x1fa))/(-0x807+0xbf4+-0xf9*0x4))+parseInt(_0x3c7522(0x471,0x591,0x4dd,0x5e3,0x564))/(-0x1*-0x892+-0x99+-0x7ef)*(-parseInt(_0x20e023(0x450,0x4c6,0x3cf,0x571,0x3aa))/(-0xb04+0x1e5f+-0x1350));if(_0x10274e===_0x4dc3ef)break;else _0x24b164['push'](_0x24b164['shift']());}catch(_0x2f9b5b){_0x24b164['push'](_0x24b164['shift']());}}}(_0x49f8,0x16933+0x1165*-0x1a+-0x115*-0x655));const _0x344ba9=(function(){function _0x22d3c5(_0x284464,_0x10e0d4,_0x55f17c,_0xebce9b,_0x47f02c){return _0x2610(_0x55f17c-0x282,_0x10e0d4);}function _0x458244(_0x28d93d,_0x18d4d4,_0x43289a,_0x157c97,_0x29ae9a){return _0x2610(_0x28d93d- -0x33e,_0x29ae9a);}function _0x24dd6d(_0x5ec0cc,_0x1c3bb8,_0x5bcf4e,_0x19af9e,_0x56bcc4){return _0x2610(_0x5ec0cc- -0x1c3,_0x5bcf4e);}function _0x456048(_0x1a920b,_0x4f90f0,_0x5adcdf,_0x16fb31,_0x76f597){return _0x2610(_0x4f90f0-0x90,_0x76f597);}const _0x4b7db1={'XKXaq':function(_0x16b4d7,_0x276925){return _0x16b4d7(_0x276925);},'uuHns':function(_0x242083,_0x595065){return _0x242083!==_0x595065;},'WBBpI':_0x458244(-0x96,-0x198,-0x13d,-0xdf,-0x15e),'VoqgC':_0x458244(-0x173,-0x21a,-0x1dd,-0x19d,-0x116),'cFryd':function(_0xc9af7f,_0x5509f5){return _0xc9af7f===_0x5509f5;},'EqWpy':_0x22d3c5(0x6a1,0x598,0x636,0x66c,0x612),'ibkud':_0x22d3c5(0x544,0x4f4,0x449,0x55f,0x3d8),'fCpPA':function(_0x3376de,_0x99b182){return _0x3376de+_0x99b182;},'vcipY':_0x458244(0x6b,0x17b,0xa3,0x141,-0x72),'wrANA':_0x458244(-0x98,0x56,0x7e,-0x5e,-0x8a),'gwNlD':_0x456048(0x2f1,0x2e5,0x3fb,0x3a4,0x381)+'n','tduan':_0x22d3c5(0x3f5,0x597,0x4d5,0x54a,0x4b0)};let _0x5aadcc=!![];function _0x14d0af(_0x27c220,_0x1ee4dd,_0x1cc785,_0x5a0eb2,_0x126d97){return _0x2610(_0x126d97- -0xa4,_0x1cc785);}return function(_0x244952,_0x171159){function _0x574d50(_0x49b2d6,_0x2c7a3b,_0x2e7acb,_0x4d7960,_0x333659){return _0x456048(_0x49b2d6-0x59,_0x2c7a3b-0x21b,_0x2e7acb-0x1ee,_0x4d7960-0x95,_0x2e7acb);}function _0x4aef01(_0x12311d,_0x263ea4,_0x148405,_0x4745b1,_0x2eca58){return _0x14d0af(_0x12311d-0x5c,_0x263ea4-0xab,_0x148405,_0x4745b1-0x1ad,_0x4745b1- -0x1ff);}function _0x2fd484(_0x24cf5a,_0x28d350,_0x206523,_0x4781b4,_0x58b36a){return _0x22d3c5(_0x24cf5a-0xe3,_0x28d350,_0x24cf5a-0xcb,_0x4781b4-0x7c,_0x58b36a-0x1d6);}const _0x21337b={'vyAvz':function(_0x49fa7d,_0x5ba349){function _0x31e14c(_0x10ec62,_0x15c572,_0xbfaaa8,_0x2f54ec,_0x11f966){return _0x2610(_0x10ec62-0x3ab,_0x2f54ec);}return _0x4b7db1[_0x31e14c(0x62d,0x50d,0x503,0x6eb,0x68d)](_0x49fa7d,_0x5ba349);},'XbVGz':_0x4b7db1[_0x56cd29(0x519,0x445,0x522,0x596,0x4d9)],'snziL':_0x4b7db1[_0x2fd484(0x61e,0x537,0x722,0x6f6,0x6aa)],'fRWlD':_0x4b7db1[_0x4aef01(-0x1fa,-0x206,-0x2c0,-0x172,-0x11e)]};function _0x2dfa9f(_0x4b7523,_0x2f9f5e,_0x11bb4a,_0x51eb96,_0x4f0734){return _0x22d3c5(_0x4b7523-0x1c4,_0x51eb96,_0x4b7523- -0x4e4,_0x51eb96-0x2a,_0x4f0734-0x1ef);}function _0x56cd29(_0x6c9fef,_0xe56c9d,_0x2143d8,_0x272195,_0x4dc35a){return _0x24dd6d(_0x4dc35a-0x3eb,_0xe56c9d-0x1ca,_0x6c9fef,_0x272195-0x119,_0x4dc35a-0x13);}if(_0x4b7db1[_0x2fd484(0x5f2,0x754,0x544,0x561,0x5d8)](_0x4b7db1[_0x56cd29(0x425,0x4a2,0x45d,0x4d9,0x4ca)],_0x4b7db1[_0x2fd484(0x5ef,0x5ff,0x606,0x654,0x513)]))_0x4b7db1[_0x574d50(0x51a,0x593,0x6cf,0x5f1,0x65e)](_0x26ff8c,'0');else{const _0x251563=_0x5aadcc?function(){function _0xbb11d(_0x1ed165,_0x5f6065,_0x2c45bf,_0x4433a9,_0x16d313){return _0x2fd484(_0x1ed165- -0x4b3,_0x16d313,_0x2c45bf-0x187,_0x4433a9-0xfc,_0x16d313-0x1d6);}const _0x3bb2c2={'WRNvS':function(_0x2cfa8c,_0x228338){function _0x58d973(_0x2c850b,_0x1df89f,_0x26a8c9,_0x36e739,_0x2622f3){return _0x2610(_0x1df89f-0x1fd,_0x2c850b);}return _0x4b7db1[_0x58d973(0x4c0,0x4e5,0x636,0x400,0x52c)](_0x2cfa8c,_0x228338);}};function _0xf83ccc(_0xbad1bd,_0x41c071,_0x399286,_0x328df4,_0x5b7f99){return _0x2fd484(_0x328df4- -0x65f,_0xbad1bd,_0x399286-0xfa,_0x328df4-0x57,_0x5b7f99-0x163);}function _0x4d9081(_0xadb63d,_0xd7c6b8,_0x101c34,_0x4e78ec,_0x3d6677){return _0x2dfa9f(_0x3d6677-0xdc,_0xd7c6b8-0x1e7,_0x101c34-0x185,_0x4e78ec,_0x3d6677-0x59);}function _0x28708e(_0x3244ff,_0x323c95,_0xeecf04,_0x1bba62,_0x168814){return _0x4aef01(_0x3244ff-0x14d,_0x323c95-0xfa,_0x1bba62,_0x323c95-0x489,_0x168814-0x47);}function _0x14fabd(_0x104cee,_0x468249,_0x5d5ba1,_0x4d630e,_0xb271b4){return _0x4aef01(_0x104cee-0x94,_0x468249-0x4f,_0x5d5ba1,_0xb271b4-0x50c,_0xb271b4-0x161);}if(_0x4b7db1[_0xbb11d(0x13f,0x1f5,0xc8,0x277,0xc8)](_0x4b7db1[_0xf83ccc(-0x181,-0x141,-0x1e0,-0x15a,-0x1f1)],_0x4b7db1[_0xbb11d(0xf7,0x4c,0x24c,0x1ae,0x1a2)])){if(_0x171159){if(_0x4b7db1[_0xbb11d(0xa3,0x1e6,-0xb,0xfc,0x16e)](_0x4b7db1[_0xbb11d(0x44,0x40,0x7a,0x34,-0x81)],_0x4b7db1[_0x14fabd(0x59e,0x4a9,0x48a,0x592,0x5e3)]))(function(){return!![];}[_0x28708e(0x55d,0x478,0x5d8,0x3d5,0x5bc)+_0x4d9081(-0x3f,0xb1,-0xc0,-0x82,-0x4c)+'r'](_0x21337b[_0xf83ccc(-0x5,-0x2,-0x17a,-0x82,0xa8)](_0x21337b[_0x4d9081(0x14c,0x260,0x21c,0x328,0x1e6)],_0x21337b[_0xf83ccc(-0x69,-0xa8,-0x2,-0xff,-0xac)]))[_0x4d9081(-0x3e,-0x173,0x49,-0x1d,-0x12)](_0x21337b[_0x14fabd(0x6ba,0x488,0x55a,0x509,0x589)]));else{const _0xf4e7fd=_0x171159[_0xbb11d(0x102,0x251,0x1f1,0x26,0x42)](_0x244952,arguments);return _0x171159=null,_0xf4e7fd;}}}else{if(_0x257750)return _0x38c4ee;else _0x3bb2c2[_0xf83ccc(-0x14,0x210,0x9e,0xc4,0x14c)](_0x1e64a3,-0x2056*-0x1+-0x1de7+-0x59*0x7);}}:function(){};return _0x5aadcc=![],_0x251563;}};}());function _0x4a0a42(_0x27fe64,_0x46f24f,_0x1aba98,_0x100c7a,_0x545013){return _0x2610(_0x545013-0xc8,_0x1aba98);}function _0x330810(_0x1f36b4,_0x59e900,_0x24d2bd,_0xe29728,_0x175b53){return _0x2610(_0x24d2bd- -0x187,_0x59e900);}(function(){function _0x1c5603(_0x22eb28,_0x1d3fe7,_0x35cee8,_0x1d092e,_0x472f46){return _0x2610(_0x35cee8- -0x257,_0x1d3fe7);}function _0x1d258a(_0x4d1406,_0x2121c6,_0x46a475,_0x58dcd3,_0xa83365){return _0x2610(_0x46a475-0x1b3,_0x2121c6);}function _0x336b07(_0x5309cd,_0xbc5f81,_0x1f4bcc,_0x232adb,_0xa2d12e){return _0x2610(_0x5309cd- -0x316,_0xa2d12e);}function _0x375275(_0x50f076,_0xd97e59,_0xf91abf,_0x16f07b,_0x41eb05){return _0x2610(_0x50f076- -0x35b,_0xf91abf);}const _0x23108e={'uOxJq':function(_0x419c61){return _0x419c61();},'YznTr':function(_0x35008d,_0x2efa64){return _0x35008d!==_0x2efa64;},'HGAGd':_0x1c5603(0x9,0x17,0x3,0xd6,-0x137),'RxRVY':_0x1c5603(-0xbb,-0x195,-0x35,-0xbd,0x9c),'mMJhF':_0x1c5603(-0x6d,0xe5,-0x32,0xe7,-0xe9)+_0x1c5603(0xe5,0x118,0x3f,0x134,-0xa2)+_0x14c3b3(0x53d,0x5e4,0x639,0x59a,0x606)+')','DsEls':_0x336b07(-0xd2,-0xf3,0x4a,0x9,-0x1f5)+_0x1c5603(0x176,0xd4,0xe8,0x227,0x15b)+_0x375275(-0xc8,-0xcd,-0xa8,-0x83,-0xed)+_0x1d258a(0x2e0,0x340,0x36a,0x307,0x369)+_0x14c3b3(0x511,0x494,0x53a,0x55d,0x421)+_0x1c5603(-0x65,-0xbb,-0x73,-0xbb,-0x164)+_0x375275(0x32,0xbe,0x12,-0x58,-0x76),'YdTEw':function(_0x51db5c,_0x3e4bdd){return _0x51db5c(_0x3e4bdd);},'UuBcN':_0x375275(-0x1f9,-0x183,-0x335,-0x2de,-0x1a5),'tnJUJ':function(_0x3338bb,_0x1f991b){return _0x3338bb+_0x1f991b;},'WafjY':_0x336b07(-0x1a7,-0x162,-0x6e,-0xfe,-0x151),'kSJcO':_0x1d258a(0x289,0x411,0x348,0x2e7,0x369),'QZfqL':_0x14c3b3(0x5b3,0x4d8,0x38d,0x50e,0x3be),'tgUwV':_0x336b07(0xae,0xdf,0x5a,-0x2b,0x18),'lTAUA':function(_0x5aba07,_0x490441){return _0x5aba07===_0x490441;},'ckplH':_0x1c5603(-0x8a,0x83,0x6d,0xc8,0x17e),'ZeHwq':function(_0x4dc339,_0xafb4b4,_0x2c1e4a){return _0x4dc339(_0xafb4b4,_0x2c1e4a);}};function _0x14c3b3(_0x47177c,_0x23cad2,_0x5d2770,_0x3d2c74,_0x4196ae){return _0x2610(_0x23cad2-0x31f,_0x3d2c74);}_0x23108e[_0x336b07(-0x1a6,-0x1fa,-0x194,-0x244,-0x160)](_0x344ba9,this,function(){const _0xd2c39c={'nFZfH':function(_0x44a182){function _0x142a79(_0x3fd83e,_0x177f89,_0x38ca8b,_0xb4c855,_0x119ebd){return _0x2610(_0xb4c855-0x2ab,_0x177f89);}return _0x23108e[_0x142a79(0x544,0x5db,0x343,0x47d,0x484)](_0x44a182);}};function _0x8e0e28(_0x252bef,_0x3f828d,_0x42001a,_0x53e067,_0x4a3882){return _0x336b07(_0x42001a-0x6,_0x3f828d-0x1e1,_0x42001a-0xc,_0x53e067-0x1b3,_0x252bef);}function _0xc090f0(_0x37b844,_0x2903be,_0x797e9d,_0x577de7,_0x4928e4){return _0x375275(_0x37b844-0x16f,_0x2903be-0x130,_0x797e9d,_0x577de7-0x1e2,_0x4928e4-0x1ab);}function _0x193c94(_0x1b9922,_0x339d9c,_0x170f35,_0x222846,_0x8250ab){return _0x375275(_0x339d9c-0x473,_0x339d9c-0x14c,_0x1b9922,_0x222846-0xae,_0x8250ab-0xd0);}function _0x33c56c(_0x30fb7f,_0x4d4d3a,_0x468e8a,_0x1d2403,_0x518697){return _0x1c5603(_0x30fb7f-0xe9,_0x30fb7f,_0x4d4d3a-0x1b8,_0x1d2403-0xf4,_0x518697-0x154);}function _0x239e3f(_0x39aa36,_0xe04250,_0x4fa646,_0x4426e9,_0x367546){return _0x336b07(_0x4fa646- -0x3d,_0xe04250-0x1d3,_0x4fa646-0xe5,_0x4426e9-0x194,_0x4426e9);}if(_0x23108e[_0x8e0e28(-0x146,0x59,-0xe4,-0x24,-0xe7)](_0x23108e[_0x8e0e28(-0xd2,-0x217,-0xc6,-0x43,-0x1a2)],_0x23108e[_0x193c94(0x41c,0x4cd,0x43e,0x521,0x5ad)])){const _0x57978a=new RegExp(_0x23108e[_0x8e0e28(-0x7d,-0x7c,-0x171,-0x135,-0x287)]),_0x565f1a=new RegExp(_0x23108e[_0x33c56c(0x1dc,0x2b1,0x319,0x3d9,0x15a)],'i'),_0x3823c8=_0x23108e[_0x8e0e28(0x143,-0xa1,0x74,0x17e,-0xc6)](_0x3203ab,_0x23108e[_0xc090f0(-0x60,0x3d,-0x1b2,-0xf5,-0x9c)]);if(!_0x57978a[_0x193c94(0x261,0x25c,0x1d3,0x2b3,0x245)](_0x23108e[_0x239e3f(-0x1f4,-0x243,-0x1c2,-0x1ca,-0xa9)](_0x3823c8,_0x23108e[_0x193c94(0x2b5,0x24f,0x2ac,0x1cf,0x2c8)]))||!_0x565f1a[_0x193c94(0x3ad,0x25c,0x13d,0x31d,0x1cc)](_0x23108e[_0x239e3f(-0x1a6,-0x205,-0x1c2,-0x12b,-0xeb)](_0x3823c8,_0x23108e[_0x193c94(0x4f0,0x4f7,0x535,0x642,0x556)]))){if(_0x23108e[_0x33c56c(0x95,0x18d,0x23b,0x50,0x1cd)](_0x23108e[_0x239e3f(0xfb,0xa1,-0x8,0x114,0x116)],_0x23108e[_0x239e3f(-0x1ff,-0x216,-0x128,-0x13e,-0x1ce)]))_0x23108e[_0x239e3f(0x1f,0x106,0x31,-0x29,0x14)](_0x3823c8,'0');else return _0x588b54;}else _0x23108e[_0x193c94(0x4af,0x3c3,0x340,0x518,0x2b1)](_0x23108e[_0x193c94(0x33e,0x27b,0x2e4,0x372,0x133)],_0x23108e[_0x193c94(0x3a1,0x27b,0x247,0x136,0x37d)])?_0x23108e[_0x193c94(0x3cc,0x2ea,0x2b1,0x42e,0x23d)](_0x3203ab):_0xd2c39c[_0x193c94(0x3a4,0x3b8,0x47c,0x2b1,0x389)](_0x439a3b);}else _0x23108e[_0x239e3f(-0x20e,-0xfa,-0x181,-0x212,-0x2c6)](_0x563c18);})();}());var EDITOR_DESC='';if(Build[_0xe32ea2(0x50f,0x66d,0x509,0x4e5,0x5a4)]=='SI')EDITOR_DESC=_0x4a0a42(0x387,0x338,0x149,0x271,0x275)+_0xe32ea2(0x51f,0x607,0x62d,0x521,0x5d7)+_0x57dd3e(0x3f5,0x580,0x518,0x5a6,0x4bc)+_0xe32ea2(0x39f,0x2ef,0x479,0x4cc,0x33e)+_0xe32ea2(0x552,0x5ca,0x4e2,0x528,0x545)+_0xe32ea2(0x546,0x44e,0x47b,0x686,0x4e5)+_0x4a0a42(0x1ff,0x33d,0x140,0x333,0x26d)+_0x4a0a42(0x32d,0x44d,0x507,0x569,0x425)+_0x57dd3e(0x5b0,0x648,0x663,0x7c9,0x68c)+'ි.';if(Build[_0x330810(0x40,-0x2d,0x135,-0x15,0x10b)]=='EN')EDITOR_DESC=_0xe32ea2(0x413,0x442,0x2f1,0x2fc,0x560)+_0x35ca08(0x155,0x80,0xa7,0x153,0x92)+_0xe32ea2(0x3b8,0x2e4,0x36f,0x3bb,0x32a)+_0xe32ea2(0x589,0x5d9,0x6e7,0x5fb,0x64b)+_0x57dd3e(0x5f7,0x5ed,0x4ee,0x4ef,0x630)+_0x4a0a42(0x38a,0x265,0x2ae,0x2c9,0x3be)+_0x330810(-0xa6,0x128,-0xb,-0xf0,-0x15a)+_0x57dd3e(0x70b,0x4ea,0x763,0x779,0x61e)+'s.';setInterval(function(){function _0x1a0793(_0x493dda,_0x5fe8a2,_0x273a5a,_0x2f6f23,_0x45b7e7){return _0xe32ea2(_0x2f6f23- -0x35a,_0x5fe8a2-0x17f,_0x273a5a-0x1d4,_0x2f6f23-0xdf,_0x273a5a);}const _0x50a418={'EbxPL':function(_0x19d676){return _0x19d676();}};_0x50a418[_0x1a0793(0x1a8,0x128,0x330,0x27b,0x334)](_0x3203ab);},-0xaab*-0x1+0x1aa+0x34b*0x1);const eng=_0x35ca08(0x4d,-0x3b,0x75,0x58,-0x38)+_0x35ca08(-0x16d,-0x20,-0x213,-0x124,-0x10a)+_0xe32ea2(0x54f,0x58c,0x470,0x57a,0x408)+_0x330810(0x1ac,0x331,0x1df,0x291,0x1fb)+_0xe32ea2(0x60c,0x61f,0x682,0x6c8,0x662)+(_0x35ca08(-0x71,-0x24d,-0x17d,-0x249,-0x11d)+_0x57dd3e(0x42c,0x4d5,0x47f,0x493,0x511)+_0x35ca08(0xe9,0x54,-0x2,-0x66,-0x46)+_0x330810(-0x27,-0x4f,0x54,0x121,0x1b1)+_0x4a0a42(0x117,0x144,0x139,0x1fa,0x1fb)+'\x0a')+(_0x330810(-0x14,-0x5f,0x9d,-0x67,0x1e4)+_0x35ca08(-0x325,-0xd6,-0xfc,-0x1d2,-0x1cc)+_0x330810(0x6,0x1d,0x92,0x19f,0x6b)+_0x57dd3e(0x4f5,0x708,0x4d6,0x566,0x5af)+_0xe32ea2(0x52f,0x451,0x58c,0x5bb,0x5b8)+_0x35ca08(-0xb9,-0x2a0,-0xa,-0x118,-0x14e)+_0x35ca08(-0x33,-0x62,0x25,-0x4c,-0x115)+_0x330810(0x172,0x30,0x24,-0x35,-0x66)+'\x0a\x0a')+(_0x57dd3e(0x556,0x517,0x4be,0x4da,0x561)+_0x4a0a42(0x3cd,0x30b,0x145,0x146,0x299)+_0x330810(-0xd9,-0xe4,-0x10,-0x10a,0x115)+_0x330810(0x1c3,0x2c4,0x1ee,0x1e0,0x2a0)+'*\x0a')+(_0x4a0a42(0x407,0x271,0x339,0x2fb,0x2ec)+_0x57dd3e(0x47a,0x41f,0x52c,0x54a,0x4b2)+_0x35ca08(-0x128,0x17,-0x133,-0x27b,-0x125)+_0x57dd3e(0x70b,0x543,0x665,0x50c,0x66c)+_0x330810(0x8f,0xe0,0xde,0x92,0x115)+_0x4a0a42(0x231,0x251,0x4be,0x436,0x360)+_0x4a0a42(0x3f3,0x44e,0x4ce,0x3bf,0x4a1)+_0x35ca08(-0x25d,-0x70,-0xb8,-0xc,-0x106)+_0x4a0a42(0x293,0x24a,0x32a,0x1ea,0x344)+_0xe32ea2(0x3b1,0x412,0x2c4,0x2cf,0x377))+(_0x57dd3e(0x4a3,0x581,0x405,0x515,0x561)+_0x57dd3e(0x424,0x3c4,0x3bc,0x601,0x511)+_0x330810(0x61,0x259,0x171,0x135,0x279)+_0x57dd3e(0x40c,0x58f,0x49d,0x45e,0x4fe)+_0x4a0a42(0x240,0x281,0x2d1,0x43c,0x397))+(_0xe32ea2(0x477,0x3f9,0x556,0x585,0x399)+_0xe32ea2(0x3c5,0x334,0x2be,0x40d,0x3d4)+_0x35ca08(-0x205,-0x22b,-0x17c,0xd,-0x125)+_0x4a0a42(0x301,0x219,0x224,0x26d,0x20a)+_0x4a0a42(0x185,0xe1,0xb1,0x161,0x208)+_0x57dd3e(0x760,0x6a9,0x855,0x61b,0x71e)+_0x57dd3e(0x5ae,0x607,0x66f,0x585,0x54c)+_0x4a0a42(0x3a0,0x2c8,0x2b0,0x3cc,0x3bf)+_0x35ca08(-0xf0,-0x2ce,-0x10f,-0x2ef,-0x1e1)+_0x330810(-0xc,-0x7d,0x16,-0x12,0xf5)+_0x330810(0x71,-0x34,0xf1,0x245,0xac)+_0xe32ea2(0x5d1,0x53f,0x6ee,0x5bb,0x600)+_0x330810(0xe2,0xdc,0x1f,-0x94,0x13b))+(_0x57dd3e(0x616,0x645,0x50a,0x434,0x561)+_0x4a0a42(0x25f,0x1a1,0x285,0x180,0x299)+_0xe32ea2(0x619,0x57a,0x52f,0x5c0,0x57d)+_0x4a0a42(0x300,0x3b3,0x28f,0x26b,0x361)+'\x0a')+(_0x35ca08(-0x1ab,-0x111,0x13,-0x140,-0x11a)+_0x330810(0xb3,-0x7,-0x15,-0x97,0x124)+_0x57dd3e(0x597,0x61b,0x57d,0x69c,0x559)+_0x57dd3e(0x508,0x54c,0x413,0x44b,0x4f3)+_0x57dd3e(0x5f3,0x555,0x420,0x5ec,0x4dc)+_0x35ca08(-0xa3,0xf0,-0x4e,0x125,-0x1d)+_0xe32ea2(0x50a,0x4e4,0x47d,0x53f,0x3bb)+_0x4a0a42(0x241,0x18c,0x1ca,0x2d0,0x2e7)+_0x57dd3e(0x5c4,0x57b,0x5f9,0x363,0x4c3)+_0x35ca08(-0x8c,0x60,0xb9,0xc4,0x5b))+(_0x4a0a42(0x32d,0x246,0x2a6,0x2b1,0x2e9)+_0xe32ea2(0x424,0x37c,0x37d,0x4d4,0x3f9)+_0x330810(0x2b8,0x357,0x23f,0x28c,0x29f)+_0x330810(0x181,0x195,0x18f,0xc2,0x1c5)+'\x0a')+(_0x330810(-0x65,0xfe,0x9d,0x12d,0x1f9)+_0x330810(-0xc1,-0x56,-0x15,0xcd,-0x10f)+_0x35ca08(-0x49,-0x1,-0x1a8,-0x159,-0x125)+_0x57dd3e(0x610,0x4ed,0x5bc,0x447,0x4f3)+_0xe32ea2(0x3ef,0x2a1,0x4f0,0x411,0x390)+_0xe32ea2(0x574,0x45a,0x6d4,0x6d2,0x557)+_0x35ca08(-0x153,-0x1d4,-0x13,0xb0,-0x87)+_0x4a0a42(0x1aa,0x39c,0x1ba,0x3c7,0x2e7)+_0xe32ea2(0x586,0x487,0x460,0x42c,0x5ab)+_0x330810(0x361,0x2dd,0x212,0x323,0x2a3))+(_0x4a0a42(0x32a,0x210,0x3be,0x36e,0x2e9)+_0x330810(-0x92,-0xba,0x4a,0x144,0x9)+_0x330810(-0xd,0xe7,0xa1,0x131,0x50)+_0x4a0a42(0x394,0x407,0x2ea,0x3e1,0x3db))+(_0x57dd3e(0x49c,0x523,0x597,0x431,0x564)+_0x330810(0xb7,-0x108,-0x15,-0x106,-0x147)+_0xe32ea2(0x46c,0x3b2,0x39b,0x46a,0x3fc)+_0xe32ea2(0x63f,0x5a9,0x549,0x571,0x74a)+_0x35ca08(0x5d,-0xe3,0x20,-0x86,0x30)+_0x4a0a42(0x46f,0x426,0x51b,0x41c,0x446)+_0x330810(0xdd,0x2ff,0x1d7,0x241,0x273)+_0x57dd3e(0x4d0,0x510,0x53c,0x71e,0x624))+(_0x57dd3e(0x5cf,0x503,0x57b,0x5a7,0x561)+_0x57dd3e(0x40c,0x40f,0x611,0x66a,0x511)+_0x330810(0x145,0x300,0x261,0x227,0x25a)+_0x57dd3e(0x491,0x4aa,0x4c2,0x671,0x5dd))+(_0x330810(0xea,0x1ec,0x9d,-0xe,0x10f)+_0x330810(0xde,-0xed,-0x15,-0x16c,-0x115)+_0x57dd3e(0x5cc,0x4b2,0x55a,0x618,0x559)+_0x57dd3e(0x75b,0x724,0x731,0x847,0x72c)+_0x35ca08(0x150,-0xd5,0x7b,0x87,0x30)+_0x57dd3e(0x6b4,0x6a0,0x7e8,0x781,0x6be)+_0x57dd3e(0x59c,0x491,0x5ae,0x47e,0x590)+_0x4a0a42(0x2cc,0x4ff,0x36b,0x31c,0x3f9)+_0x35ca08(-0x87,-0x9,0x50,-0x13a,-0x5b)+'\x0a\x0a')+(_0x330810(0x7a,0xd9,0x9a,0x1e0,0x1c5)+_0xe32ea2(0x424,0x550,0x549,0x369,0x2df)+_0x35ca08(-0x37,-0x5,-0x8b,-0x17,-0x46)+_0xe32ea2(0x4d7,0x576,0x3a2,0x5d0,0x3db)+_0x57dd3e(0x527,0x4a6,0x55c,0x64f,0x606))+(_0x330810(0xba,0x95,0x9d,0x169,-0x75)+_0xe32ea2(0x3c5,0x484,0x3d3,0x48f,0x375)+_0x330810(0x91,0x164,0x92,-0x7,-0x93)+_0x35ca08(-0x98,-0x65,-0x77,-0xc2,-0xcc)+_0x35ca08(0x12f,0x151,-0x13a,-0x9,0x16)+_0x330810(0x1fd,-0x95,0xa9,0xb6,0xec)+_0xe32ea2(0x624,0x4e6,0x573,0x662,0x65a)+_0x35ca08(0x43,-0x214,-0x261,-0x1a9,-0x114)+_0x57dd3e(0x533,0x5f8,0x592,0x448,0x56f)+_0x57dd3e(0x508,0x4c8,0x6aa,0x4d2,0x56d)+'\x0a\x0a')+(_0xe32ea2(0x474,0x35e,0x3d0,0x4ab,0x444)+_0xe32ea2(0x424,0x45f,0x55e,0x555,0x314)+_0x4a0a42(0x495,0x270,0x45c,0x26a,0x3c0)+_0x57dd3e(0x607,0x45f,0x594,0x4ed,0x4d7)+_0x35ca08(-0x1e5,0x6d,0x2d,-0xe6,-0x83))+(_0x35ca08(-0xd9,-0x85,-0x221,-0x264,-0x11a)+_0x35ca08(-0x140,-0x11c,-0x24c,-0x32f,-0x1cc)+_0x4a0a42(0x217,0x33b,0x299,0x3cb,0x2e1)+_0xe32ea2(0x49b,0x4de,0x44f,0x5fc,0x5cb)+_0x57dd3e(0x45d,0x55e,0x4a5,0x5f1,0x5a5)+_0x4a0a42(0x3eb,0x392,0x45d,0x4bb,0x360)+_0x330810(-0x6d,0xe9,0x28,-0xd9,0xb)+_0x57dd3e(0x5b8,0x4fc,0x60d,0x54a,0x5b8)+_0x4a0a42(0x358,0x3c9,0x1ab,0x3b6,0x287)+_0x35ca08(-0x13,-0x152,-0x290,-0x86,-0x166)+_0x57dd3e(0x54e,0x53d,0x6cc,0x53e,0x65f))+(_0xe32ea2(0x474,0x518,0x3cf,0x4d7,0x551)+_0x4a0a42(0x2ac,0x2c4,0x296,0x2dd,0x299)+_0x330810(0x21f,0x271,0x171,0x2d4,0x9f)+_0x330810(-0x84,0x87,0x76,-0x44,0x1d8)+_0x4a0a42(0x101,0x267,0x2a2,0x28b,0x228)+'\x0a')+(_0xe32ea2(0x477,0x445,0x535,0x552,0x5d2)+_0x330810(0xf5,0x10c,-0x15,-0x118,-0x21)+_0x35ca08(-0x3a,-0x272,-0x21f,-0x37,-0x125)+_0xe32ea2(0x395,0x358,0x4a9,0x374,0x3f9)+_0x57dd3e(0x6d1,0x50f,0x683,0x5d1,0x640)+_0x330810(0xf4,-0x5e,-0x20,0x2d,-0xc0)+_0x330810(0x277,0x24c,0x1ae,0xed,0xaf)+_0x330810(0x123,0x9d,0xf9,0x24,0x1f2)+_0x35ca08(-0x8,-0xab,0x6e,-0x110,-0xee)+_0x4a0a42(0x362,0x300,0x1ab,0x28e,0x2f5)+'\x0a\x0a')+(_0x57dd3e(0x4dd,0x47d,0x614,0x486,0x561)+_0x4a0a42(0x1ed,0x35f,0x382,0x280,0x299)+_0x57dd3e(0x5a0,0x5d6,0x51f,0x743,0x638)+_0xe32ea2(0x3e1,0x3c8,0x33d,0x2c3,0x36f)+_0xe32ea2(0x5aa,0x5bd,0x681,0x550,0x51e))+(_0x35ca08(-0x83,-0x248,-0xd0,-0x1fe,-0x11a)+_0xe32ea2(0x3c5,0x342,0x4ea,0x427,0x334)+_0x57dd3e(0x500,0x565,0x452,0x48a,0x559)+_0x57dd3e(0x385,0x390,0x5e8,0x521,0x4c2)+_0x57dd3e(0x64f,0x686,0x7d5,0x727,0x694)+_0x4a0a42(0x2c2,0x257,0x300,0x358,0x295)+_0x35ca08(-0x13a,-0x114,-0xdb,-0x157,-0xe8)+_0x35ca08(-0x9,0xaa,0xa0,-0x1ec,-0xa6)+_0xe32ea2(0x5d1,0x4c1,0x64c,0x63c,0x58f)+_0x4a0a42(0x1d0,0x1e6,0x382,0x3cb,0x2cf)+_0x330810(0x234,0x94,0x151,0x147,0x1f1)+_0x57dd3e(0x570,0x4ab,0x4b8,0x53b,0x5db)+_0x57dd3e(0x63a,0x669,0x69c,0x4f0,0x55e)+_0xe32ea2(0x5fb,0x611,0x5ab,0x61b,0x69d)+_0x4a0a42(0x43d,0x599,0x3f4,0x530,0x461))+(_0x330810(-0x72,-0x8d,0x9a,0x1eb,0x74)+_0x330810(-0xcd,0x192,0x4a,0x6,-0x117)+_0x4a0a42(0x378,0x2c1,0x4dd,0x350,0x3c0)+_0x4a0a42(0x2c6,0x486,0x35d,0x2d3,0x400)+'*\x0a')+(_0xe32ea2(0x477,0x5d2,0x3fb,0x513,0x4b0)+_0x35ca08(-0x2a0,-0x6d,-0xa5,-0x321,-0x1cc)+_0x57dd3e(0x4dc,0x43d,0x557,0x468,0x559)+_0x330810(-0x10e,-0xa9,-0x45,-0xc3,-0x6b)+_0xe32ea2(0x553,0x43c,0x462,0x5c3,0x580)+_0x35ca08(-0x36,0x110,0x115,0xed,0x67)+_0xe32ea2(0x48d,0x46a,0x37d,0x4f2,0x551)+_0x57dd3e(0x53c,0x4d0,0x43b,0x518,0x55b)+_0xe32ea2(0x482,0x40b,0x485,0x40c,0x48f)+_0x35ca08(-0x5e,-0xe5,-0x83,-0xfe,-0x111)+'\x0a\x0a')+(_0x57dd3e(0x4a3,0x64f,0x56d,0x461,0x561)+_0xe32ea2(0x424,0x57d,0x453,0x532,0x435)+_0x4a0a42(0x4a5,0x3ff,0x398,0x32e,0x3c0)+_0x4a0a42(0x4f0,0x48c,0x327,0x348,0x444)+_0x330810(0x1fd,0x51,0x18a,0x159,0xca)+'*\x0a')+(_0x4a0a42(0x3ce,0x3c5,0x2db,0x2c9,0x2ec)+_0x4a0a42(0x22f,0x2be,0x25b,0x2f5,0x23a)+_0x330810(0x8f,0x1c3,0x92,0x48,0x11)+_0xe32ea2(0x395,0x40a,0x377,0x255,0x413)+_0x35ca08(0x8c,0xe9,-0x113,0x90,-0x3e)+_0xe32ea2(0x4c0,0x44b,0x364,0x539,0x48a)+_0x330810(0x158,0x22e,0x16b,0x248,0x142)+_0x35ca08(-0x24e,-0xd1,-0xb8,-0x207,-0x1bd)+_0x4a0a42(0x2ca,0x26b,0x3c6,0x160,0x2b5)+_0x4a0a42(0x333,0x170,0x246,0x25b,0x21b)+_0x330810(-0x40,0xf4,0x111,0x26a,0x140)+_0x35ca08(0x116,-0x65,0x176,0x17f,0x40)+_0xe32ea2(0x5ec,0x6e1,0x4c9,0x50c,0x4d7))+(_0x35ca08(-0x186,-0x46,-0xdd,0xc,-0x11d)+_0x4a0a42(0x338,0x235,0x20a,0x17a,0x299)+_0xe32ea2(0x54b,0x5c4,0x638,0x428,0x674)+_0x330810(0x205,0x1a,0x160,0x292,0x1d7)+_0xe32ea2(0x514,0x543,0x62d,0x4a0,0x3e3)+'\x0a')+(_0x35ca08(-0x1dc,-0x172,0x22,-0x88,-0x11a)+_0xe32ea2(0x3c5,0x2cc,0x343,0x347,0x39c)+_0xe32ea2(0x46c,0x568,0x520,0x3bc,0x3dc)+_0x57dd3e(0x456,0x4cb,0x36c,0x5d6,0x482)+_0x35ca08(0x10c,-0x118,0xe,0x37,-0x3e)+_0xe32ea2(0x634,0x6c0,0x69d,0x57f,0x65e)+_0x35ca08(-0x1c5,-0x2c3,-0x14d,-0x1ef,-0x1b6)+_0x4a0a42(0x5a6,0x414,0x448,0x597,0x464)+_0x35ca08(0xb0,-0x73,0xd1,-0x64,0xa)+_0x4a0a42(0x366,0x3ea,0x285,0x3d0,0x344)+_0xe32ea2(0x3b1,0x4b8,0x43b,0x3c3,0x2e9))+(_0xe32ea2(0x474,0x31a,0x577,0x543,0x57f)+_0x35ca08(-0x27e,-0x297,-0x186,-0x18b,-0x16d)+_0x4a0a42(0x41f,0x367,0x27e,0x3af,0x3c0)+_0xe32ea2(0x51c,0x5a7,0x4b9,0x524,0x517)+'\x0a')+(_0x35ca08(-0x2b,-0x99,-0x189,-0xa8,-0x11a)+_0x4a0a42(0x398,0x380,0x31a,0x2dd,0x23a)+_0x330810(0xbe,-0x60,0x92,0x100,-0x43)+_0x4a0a42(0x35b,0x262,0x199,0x268,0x20a)+_0x35ca08(0x6e,-0x103,0xd6,0xaf,-0x3e)+_0xe32ea2(0x3b9,0x468,0x319,0x339,0x4cc)+_0xe32ea2(0x4e2,0x468,0x3bf,0x4aa,0x52b)+_0x4a0a42(0x545,0x3cf,0x3f1,0x526,0x4ad)+_0x57dd3e(0x532,0x62c,0x5fd,0x58f,0x5b9)+_0x4a0a42(0x3ce,0x411,0x18e,0x2bc,0x2b7)+_0xe32ea2(0x572,0x4d9,0x42f,0x6b5,0x5dd))+(_0x35ca08(-0x1f4,-0x1b7,0x28,-0xf2,-0x11d)+_0x330810(0x61,0x2c,0x4a,0xa6,-0x71)+_0x57dd3e(0x759,0x727,0x709,0x4e4,0x638)+_0x4a0a42(0x105,0x242,0x2a6,0x23f,0x20d)+_0x330810(0x11a,0x85,0x5b,0xdd,-0xdd)+'\x0a')+(_0x57dd3e(0x66e,0x52a,0x571,0x632,0x564)+_0x35ca08(-0x2a5,-0x16d,-0x1f7,-0x271,-0x1cc)+_0xe32ea2(0x46c,0x575,0x3b9,0x3e4,0x43b)+_0x330810(0x12d,0x91,0x89,0x28,0x1eb)+_0xe32ea2(0x5a7,0x521,0x63b,0x448,0x51b)+_0x57dd3e(0x568,0x55a,0x552,0x5b1,0x5bc)+_0x4a0a42(0x3a6,0x455,0x36d,0x4cf,0x3f1)+_0xe32ea2(0x5e8,0x514,0x5d4,0x67b,0x538)+_0x330810(0x1fc,0xe6,0x226,0x274,0x227))+(_0x57dd3e(0x665,0x64e,0x665,0x628,0x561)+_0xe32ea2(0x424,0x576,0x35c,0x31d,0x3de)+_0x35ca08(0x78,-0xb5,-0x65,0xc2,-0x46)+_0x57dd3e(0x5b2,0x5bf,0x58e,0x5ed,0x6c7)+_0x4a0a42(0x49b,0x3b9,0x441,0x2d6,0x404))+(_0xe32ea2(0x477,0x55b,0x49d,0x3d6,0x51b)+_0xe32ea2(0x3c5,0x4aa,0x2a3,0x2c6,0x2b5)+_0xe32ea2(0x46c,0x344,0x470,0x459,0x3d1)+_0xe32ea2(0x395,0x390,0x281,0x47f,0x4b2)+_0x330810(0x291,0x2d4,0x179,0xdf,0x221)+_0x57dd3e(0x7b9,0x763,0x6bb,0x596,0x659)+_0x330810(0x17b,0x34f,0x215,0xff,0x217)+_0x330810(0x186,0x2d9,0x1c1,0x1b5,0x205)+_0x35ca08(0xbb,-0x1fb,-0x3f,-0x162,-0xa6)+_0x57dd3e(0x5cb,0x72e,0x6c1,0x627,0x6be)+_0x4a0a42(0x314,0x472,0x4cd,0x362,0x461))+(_0x35ca08(-0x1dc,0x43,-0x106,0x20,-0x11d)+_0x35ca08(-0x129,-0x2a,-0x200,-0x173,-0x16d)+_0x57dd3e(0x555,0x5be,0x72d,0x631,0x638)+_0x330810(-0x11e,-0xac,-0x19,-0x132,0x30)+_0x57dd3e(0x552,0x681,0x527,0x569,0x64c))+(_0x35ca08(-0x96,-0x1,-0x1ed,-0x19d,-0x11a)+_0x4a0a42(0x346,0x164,0x1ae,0x242,0x23a)+_0x330810(-0x7d,0x69,0x92,0xf3,0x58)+_0x57dd3e(0x623,0x5e5,0x6c5,0x87d,0x72c)+_0x57dd3e(0x62b,0x5ca,0x71d,0x685,0x6ae)+_0x35ca08(0x119,-0x7d,0x87,-0xcd,-0xf)+_0x330810(0x1f3,0x1b2,0x162,0x1ef,0x194)+_0x35ca08(-0x114,0x4f,-0xdb,-0x1e5,-0xe0)+_0x57dd3e(0x5ba,0x6f9,0x72b,0x815,0x6be)+_0x4a0a42(0x2ff,0x46f,0x42a,0x376,0x461))+(_0x4a0a42(0x39f,0x3ab,0x43a,0x38e,0x2e9)+_0x330810(-0x55,-0x101,0x4a,0x3,-0x44)+_0x330810(0x234,0x98,0x181,0x2b9,0x261)+_0x4a0a42(0x410,0x3a1,0x441,0x3e5,0x490)+_0x330810(-0xe8,0x4f,0x74,0x125,-0xe4))+(_0x4a0a42(0x214,0x24e,0x2af,0x3ab,0x2ec)+_0x35ca08(-0x1dd,-0x149,-0x1da,-0x223,-0x1cc)+_0x57dd3e(0x5eb,0x41b,0x554,0x68f,0x559)+_0x57dd3e(0x730,0x774,0x7ed,0x679,0x72c)+_0x330810(0x21c,0xb1,0x1e7,0x30d,0xc0)+_0x57dd3e(0x3a4,0x52d,0x574,0x4f1,0x4f1)+_0x57dd3e(0x6de,0x5bd,0x5f4,0x708,0x708)+_0xe32ea2(0x618,0x74e,0x68f,0x751,0x62f)+_0x4a0a42(0x398,0x5a6,0x51a,0x4f9,0x449)+_0x4a0a42(0x12f,0x176,0x14d,0x1af,0x221)+_0xe32ea2(0x442,0x33f,0x2e5,0x452,0x308)+_0xe32ea2(0x572,0x5cd,0x693,0x569,0x527))+(_0x330810(-0xbc,0x9,0x9a,0x161,0x156)+_0x4a0a42(0x2ac,0x379,0x27c,0x23b,0x299)+_0x4a0a42(0x252,0x4ea,0x325,0x2fc,0x39f)+_0x35ca08(-0x135,-0xc,0xcc,0x70,-0x68)+'\x0a')+(_0x330810(0x23,-0xe,0x9d,0x17,0xea)+_0x4a0a42(0x2a9,0x2a2,0x351,0x1cc,0x23a)+_0x330810(-0x86,-0xe,0x92,-0x1,-0x55)+_0x35ca08(0x17d,0xc6,0x105,0x1c7,0xae)+_0x35ca08(-0x34,0x81,0xc9,-0xbd,0x30)+_0x4a0a42(0x4a7,0x35d,0x200,0x27e,0x35f)+_0xe32ea2(0x3f6,0x42d,0x3d1,0x4cc,0x313)+_0x4a0a42(0x367,0x4e8,0x322,0x4ea,0x432)+_0x57dd3e(0x5e7,0x7f3,0x817,0x5c5,0x6ee)+_0x4a0a42(0x219,0x22d,0x2e2,0x39e,0x2e4)+_0x57dd3e(0x5f7,0x593,0x43a,0x4d9,0x52f)+_0x330810(0x287,0xcf,0x198,0x1af,0x1aa))+(_0x57dd3e(0x4e0,0x435,0x426,0x54f,0x561)+_0x57dd3e(0x52e,0x428,0x5b5,0x5aa,0x511)+_0x57dd3e(0x4e1,0x5f8,0x668,0x689,0x5d1)+_0xe32ea2(0x4b2,0x488,0x4a6,0x451,0x5dc)+_0xe32ea2(0x56b,0x63f,0x462,0x6ce,0x641))+(_0x57dd3e(0x4f8,0x5d4,0x605,0x5d6,0x564)+_0x4a0a42(0x197,0x32e,0x247,0x20d,0x23a)+_0x4a0a42(0x3ad,0x1d8,0x2e6,0x346,0x2e1)+_0x4a0a42(0x5b4,0x38e,0x426,0x57c,0x4b4)+_0x35ca08(0x2c,-0x101,-0xee,-0x29,0x30)+_0xe32ea2(0x511,0x50c,0x483,0x57e,0x51b)+_0x4a0a42(0x3fb,0x3f2,0x331,0x229,0x327)+_0x57dd3e(0x5c0,0x626,0x665,0x76d,0x66a)+_0x57dd3e(0x651,0x7c4,0x78c,0x629,0x6aa)+_0x57dd3e(0x686,0x6ad,0x7e4,0x6a4,0x6ee)+_0x35ca08(-0x237,0x2a,0x37,-0x227,-0x122)+_0xe32ea2(0x442,0x534,0x43e,0x39c,0x4e6)+_0xe32ea2(0x572,0x4e5,0x512,0x478,0x614))+(_0x57dd3e(0x49f,0x66e,0x512,0x5ad,0x561)+_0xe32ea2(0x424,0x509,0x525,0x469,0x3f0)+_0xe32ea2(0x63b,0x516,0x61f,0x718,0x756)+_0x35ca08(-0x1db,-0xe3,-0x19a,-0x2aa,-0x1c0))+(_0x35ca08(-0x119,-0x1ae,-0x1f8,-0xec,-0x11a)+_0x57dd3e(0x440,0x47a,0x354,0x43a,0x4b2)+_0x330810(-0xc7,0xbd,0x92,0x63,0x1b6)+_0x57dd3e(0x73c,0x7de,0x7d9,0x80f,0x72c)+_0x4a0a42(0x300,0x43b,0x502,0x3fe,0x436)+_0x330810(-0xa6,0x121,0x2,0x76,-0xc)+_0x330810(0x11c,0xc7,0x15e,0x29d,0x222)+_0x330810(-0x62,0xca,-0x39,-0x97,-0x105)+_0x57dd3e(0x5be,0x59f,0x535,0x54c,0x5ab)+_0xe32ea2(0x4c4,0x3f2,0x377,0x395,0x478)+_0x330810(0x170,0x21c,0xf5,0x28,0x23f)+_0x35ca08(-0x2e8,-0x83,-0x236,-0x199,-0x1e0))+(_0x35ca08(-0xbf,-0x127,-0x1e6,-0x1ba,-0x11d)+_0x35ca08(-0x206,-0x2ce,-0x138,-0x2e,-0x16d)+_0x35ca08(-0x15,0x1,-0x193,-0x1fd,-0x150)+_0x35ca08(-0xc3,-0x1c1,-0xd0,-0x241,-0x210)+_0x4a0a42(0x34c,0x1e6,0x263,0x3bb,0x2b9)+'*\x0a')+(_0x330810(-0x53,-0x5b,0x9d,0x12b,-0x79)+_0x35ca08(-0x17c,-0xb5,-0x19c,-0x2de,-0x1cc)+_0xe32ea2(0x46c,0x338,0x587,0x335,0x364)+_0x57dd3e(0x73c,0x641,0x63f,0x80f,0x72c)+_0xe32ea2(0x5c1,0x4a1,0x724,0x509,0x720)+_0x35ca08(0x88,0x13e,0x59,-0xde,0x41)+_0x57dd3e(0x71d,0x6bb,0x7ac,0x558,0x66e)+_0x4a0a42(0x3e7,0x20f,0x43e,0x271,0x2ff)+_0x330810(0x1b5,0x1cb,0xe5,-0x4b,-0x59)+_0x57dd3e(0x4bc,0x4fb,0x666,0x5d9,0x5d8)+_0x35ca08(-0x112,0x1,-0xb1,0xea,0x5)+_0x35ca08(-0x23,-0xca,-0x1d6,0x5,-0xdd)+_0xe32ea2(0x4cf,0x487,0x5ef,0x5ef,0x580)+_0x4a0a42(0x2a3,0xd8,0x2d5,0x187,0x226))+(_0xe32ea2(0x474,0x37e,0x5d4,0x50b,0x4dd)+_0x57dd3e(0x422,0x4b4,0x40b,0x4ab,0x511)+_0x4a0a42(0x1c2,0x1f6,0x276,0x45c,0x313)+_0x330810(-0xc1,0x32,0x3e,0x109,-0x14)+_0xe32ea2(0x428,0x420,0x3ba,0x432,0x516))+(_0xe32ea2(0x477,0x31d,0x4c1,0x414,0x371)+_0x35ca08(-0x1b0,-0xec,-0x1ea,-0x1ae,-0x1cc)+_0xe32ea2(0x46c,0x4e6,0x4b4,0x352,0x44e)+_0xe32ea2(0x63f,0x6d0,0x760,0x544,0x7a0)+_0x4a0a42(0x523,0x505,0x43a,0x35d,0x436)+_0x330810(0xe9,0xae,0x167,0x17b,0x144)+_0x4a0a42(0x36d,0x3e7,0x47b,0x1e7,0x31f)+_0x4a0a42(0x208,0x304,0x2bb,0x2c4,0x200)+_0x330810(-0x114,0x118,0x9,-0xae,-0x5d)+_0x57dd3e(0x698,0x570,0x60d,0x503,0x554)+_0x35ca08(-0x1ad,-0x200,0x99,0x1f,-0xc2)+_0x330810(0xa7,-0x9c,-0x29,-0x182,-0xd1))+(_0x330810(-0x97,0x1bd,0x9a,0xb8,0x47)+_0xe32ea2(0x424,0x47c,0x38b,0x319,0x35a)+_0x4a0a42(0x2a6,0x298,0x312,0x507,0x3c0)+_0x57dd3e(0x4b3,0x4d9,0x42f,0x45c,0x52a)+'\x0a')+(_0x57dd3e(0x450,0x48a,0x58b,0x65f,0x564)+_0x35ca08(-0xa9,-0x1e9,-0x2a8,-0xdd,-0x1cc)+_0x330810(0x5f,0xc4,0x92,-0x3d,0x190)+_0x330810(0x3,0x160,0x91,0x10a,0x147)+_0x330810(0x215,0x21f,0x218,0x223,0x211)+_0x330810(-0x36,-0x140,-0x57,0xe0,-0x5b)+_0x330810(0xa7,-0x95,0x95,0x1f5,-0xc)+_0x4a0a42(0x2c0,0x1b3,0x2bd,0x1a5,0x222)+_0xe32ea2(0x626,0x674,0x572,0x5c9,0x6d4)+_0x35ca08(-0x235,-0xd4,-0x1ec,-0x96,-0x15e)+_0x57dd3e(0x77c,0x560,0x6d1,0x53a,0x681)+_0x35ca08(-0xcf,-0x13f,-0x2e4,-0x1a1,-0x1cb)+'\x0a')+(_0x57dd3e(0x56c,0x61c,0x685,0x5ec,0x561)+_0xe32ea2(0x424,0x582,0x585,0x35f,0x2f4)+_0x35ca08(0xb8,-0xdb,-0xa0,-0x127,-0x46)+_0x330810(0x296,0xd7,0x147,0x125,0x1c2)+_0xe32ea2(0x4d4,0x62f,0x3c3,0x42d,0x544)+'\x0a')+(_0x4a0a42(0x1f1,0x382,0x30a,0x2f8,0x2ec)+_0xe32ea2(0x3c5,0x30b,0x4a1,0x2de,0x4e1)+_0x35ca08(-0x102,-0x222,-0x15c,-0x4b,-0x125)+_0xe32ea2(0x452,0x335,0x303,0x397,0x546)+_0xe32ea2(0x579,0x547,0x4e3,0x641,0x4ad)+_0x57dd3e(0x512,0x5cb,0x5a4,0x5be,0x4f1)+_0xe32ea2(0x4ae,0x59c,0x3a9,0x395,0x5f0)+_0x57dd3e(0x6d4,0x473,0x62b,0x4f5,0x58d)+_0x4a0a42(0x3fa,0x4e1,0x423,0x4e8,0x46a)+_0x4a0a42(0x3ed,0x52c,0x570,0x474,0x468)+_0x57dd3e(0x5d2,0x56c,0x520,0x376,0x4aa))+(_0x35ca08(-0xf0,-0x72,0x14,-0x26a,-0x11d)+_0x57dd3e(0x4b9,0x5e1,0x3f1,0x672,0x511)+_0x330810(0xb1,0x212,0x171,0x2b7,0x1c5)+_0x35ca08(-0x1bd,-0x17e,-0x11c,-0x276,-0x117)+_0x330810(0x60,0xc8,0x5b,0x149,0x190)+'\x0a')+(_0xe32ea2(0x477,0x5af,0x37e,0x346,0x5bb)+_0x330810(-0x148,-0xf2,-0x15,0x30,0x91)+_0x330810(0xdf,0x1f3,0x92,0x8,-0x92)+_0x4a0a42(0x275,0x35f,0x191,0x253,0x2d8)+_0x35ca08(0xc1,0x73,0x119,0xc0,0x16)+_0x35ca08(0x3e,0xaf,0x108,0x66,0x43)+_0x330810(-0x181,-0x7d,-0x26,-0x66,-0x8f)+_0x35ca08(-0xa9,0x110,0xee,0x19c,0x57)+_0x57dd3e(0x605,0x748,0x837,0x81a,0x6ed))+(_0x57dd3e(0x4f6,0x469,0x520,0x60d,0x561)+_0x57dd3e(0x64d,0x619,0x4f0,0x63a,0x511)+_0x35ca08(-0x116,-0x11c,-0x92,0xdc,-0x46)+_0x57dd3e(0x72b,0x4fe,0x514,0x5d5,0x5c9)+_0x35ca08(-0x16e,-0x16a,-0x74,-0x14f,-0x74))+(_0x330810(0x169,-0xac,0x9d,-0xab,0x189)+_0x4a0a42(0x35c,0x25d,0x302,0x29f,0x23a)+_0x57dd3e(0x477,0x69a,0x65b,0x666,0x559)+_0xe32ea2(0x3d5,0x362,0x3cf,0x3ea,0x449)+_0x57dd3e(0x641,0x5cd,0x6cc,0x79b,0x694)+_0xe32ea2(0x5d4,0x497,0x69a,0x6a1,0x59d)+_0x330810(0x2fb,0x282,0x203,0x337,0x341)+_0xe32ea2(0x4ce,0x488,0x384,0x5a8,0x5fd)+_0x35ca08(0x91,-0x4f,-0x106,0x18d,0x54)+_0x4a0a42(0x3e6,0x29c,0x3c9,0x2b8,0x3df)+_0x330810(0x298,0x172,0x212,0x123,0x203))+(_0x4a0a42(0x334,0x3c3,0x202,0x3fd,0x2e9)+_0x4a0a42(0x147,0x1b3,0x237,0x350,0x299)+_0x4a0a42(0x367,0x2e4,0x41e,0x4b2,0x387)+_0x330810(0x17b,0x2f2,0x213,0x376,0x1c4)+'\x0a')+(_0x35ca08(-0x127,-0x90,-0x227,-0x16e,-0x11a)+_0x35ca08(-0x13f,-0x2b6,-0x2a7,-0x221,-0x1cc)+_0x35ca08(-0x194,-0xa5,-0x5b,-0x46,-0x125)+_0x330810(0x66,0xb7,-0x5,0xbf,-0x14d)+_0xe32ea2(0x5a7,0x5ad,0x4d1,0x5f2,0x70a)+_0x35ca08(-0x9f,0xca,-0xb9,-0x8e,0x43)+_0xe32ea2(0x590,0x603,0x5c5,0x5b9,0x667)+_0x57dd3e(0x44d,0x4e2,0x3de,0x4f1,0x4bb)+_0x330810(0xeb,0x12a,0x1d,-0x98,-0x120)+_0x330810(0xf5,0x39,0xdb,0xb9,0x20c))+(_0xe32ea2(0x474,0x5b8,0x5a5,0x475,0x548)+_0xe32ea2(0x424,0x30e,0x565,0x4c6,0x301)+_0x4a0a42(0x416,0x3ee,0x3d3,0x58f,0x48e)+_0x4a0a42(0x26f,0x249,0x3e3,0x3d0,0x2a5)+'\x0a')+(_0x330810(0x2e,0x1ca,0x9d,0xaf,-0x4)+_0x4a0a42(0x12c,0x331,0x111,0x207,0x23a)+_0x330810(0xb6,0x7f,0x92,0xef,-0x86)+_0x57dd3e(0x613,0x52a,0x5c3,0x617,0x4c2)+_0x35ca08(-0x22,-0xec,0x10a,0x25,0x16)+_0x330810(0x15f,0x147,0x1fa,0x1f0,0xe1)+_0x4a0a42(0x279,0x2dc,0x2fe,0x152,0x29f)+_0x4a0a42(0x4bc,0x433,0x54d,0x5cd,0x496)+_0xe32ea2(0x550,0x4fc,0x68f,0x431,0x4b3)+_0x57dd3e(0x7f0,0x774,0x825,0x70f,0x6d9))+(_0x35ca08(-0xa3,-0x1ed,-0xc7,-0xe1,-0x11d)+_0xe32ea2(0x424,0x4d0,0x4c9,0x3e5,0x336)+_0x57dd3e(0x6e8,0x60e,0x55f,0x792,0x638)+_0xe32ea2(0x50c,0x417,0x496,0x476,0x63d)+_0x330810(0x1a4,0x27e,0x240,0x13a,0x371))+(_0x330810(0x1e3,-0x41,0x9d,-0x7f,0x1ef)+_0x57dd3e(0x5f4,0x355,0x4c9,0x40d,0x4b2)+_0x57dd3e(0x649,0x4b7,0x3fe,0x460,0x559)+_0x57dd3e(0x7a5,0x586,0x54c,0x6c5,0x66c)+_0x57dd3e(0x56b,0x547,0x50c,0x5af,0x5d4)+_0x35ca08(-0x38,0xb0,-0x96,0xd1,0x5)+_0x4a0a42(0x50d,0x544,0x4ba,0x4ad,0x3f8)+_0x35ca08(-0x27,-0x7,-0x1b5,-0x1c5,-0xe6)+_0x35ca08(-0x291,0x1e,-0x258,-0x11a,-0x144)+'\x0a\x0a')+(_0x57dd3e(0x40f,0x47d,0x52c,0x563,0x561)+_0x57dd3e(0x62b,0x4a9,0x4be,0x57b,0x511)+_0x4a0a42(0x30c,0x29c,0x29d,0x169,0x210)+_0x57dd3e(0x53f,0x542,0x634,0x7c0,0x682)+_0x57dd3e(0x757,0x585,0x725,0x726,0x67c))+(_0x4a0a42(0x432,0x1c3,0x2d5,0x337,0x2ec)+_0x4a0a42(0x373,0x23d,0x201,0x112,0x23a)+_0x35ca08(-0x150,-0x2e,0x5,-0xc8,-0x125)+_0x57dd3e(0x437,0x396,0x4c1,0x3ed,0x482)+_0x330810(0x4d,0x26e,0x179,0x241,0x1f1)+_0x4a0a42(0x144,0x201,0x156,0x33e,0x22e)+_0x4a0a42(0x2a2,0x282,0x45a,0x28d,0x357)+_0xe32ea2(0x638,0x597,0x78d,0x6f3,0x4f4)+_0x4a0a42(0x3b3,0x3fd,0x244,0x1f2,0x341)+_0x4a0a42(0x1e9,0x3ad,0x2a3,0x2ca,0x2ad)+_0x330810(0x133,0x10d,0x24b,0x182,0x2c3))+(_0x4a0a42(0x32f,0x36f,0x2c2,0x27e,0x2e9)+_0x330810(0x1a0,-0x47,0x4a,-0x73,0x11f)+_0x35ca08(-0x12e,-0x15e,-0xd5,-0x1c0,-0x150)+_0xe32ea2(0x4e8,0x49d,0x4f9,0x3ab,0x576)+_0xe32ea2(0x548,0x555,0x66d,0x547,0x4b6)+_0x57dd3e(0x6de,0x536,0x796,0x75f,0x67c))+(_0x4a0a42(0x383,0x38e,0x35b,0x383,0x2ec)+_0x57dd3e(0x60f,0x449,0x541,0x3d6,0x4b2)+_0x57dd3e(0x6a3,0x433,0x4c2,0x4b7,0x559)+_0x35ca08(-0x2d0,-0x233,-0x12d,-0x226,-0x1fc)+_0x330810(0xe0,0x137,0x179,0x256,0x24)+_0xe32ea2(0x507,0x518,0x458,0x585,0x4f1)+_0x57dd3e(0x6ef,0x535,0x4b3,0x478,0x5c6)+_0x57dd3e(0x717,0x4ae,0x714,0x651,0x5c0)+_0x4a0a42(0x44d,0x3ad,0x432,0x1df,0x318)+_0xe32ea2(0x480,0x5d8,0x4f8,0x523,0x4c7)+'\x0a\x0a')+(_0x4a0a42(0x326,0x1be,0x382,0x34f,0x2e9)+_0xe32ea2(0x424,0x48a,0x53f,0x2fa,0x2d8)+_0x35ca08(-0x6c,-0x239,0xb,-0x1db,-0x153)+_0xe32ea2(0x609,0x5be,0x676,0x74b,0x4c4)+_0x35ca08(-0x223,-0xc3,-0x323,-0xf9,-0x1fd))+(_0xe32ea2(0x477,0x35c,0x416,0x47b,0x431)+_0x330810(0x75,-0xc0,-0x15,0xc9,-0x15a)+_0x4a0a42(0x199,0x2dd,0x28c,0x3d0,0x2e1)+_0x35ca08(-0xca,-0x339,-0x277,-0xb6,-0x1fc)+_0xe32ea2(0x553,0x46a,0x5f4,0x3f0,0x654)+_0x57dd3e(0x69f,0x6fe,0x627,0x66b,0x659)+_0x35ca08(0x1bd,0x194,-0x99,0x9d,0x5e)+_0x4a0a42(0x47e,0x4f0,0x38d,0x2e2,0x410)+_0x330810(-0xb,0x1cb,0x111,0x266,0x152)+_0x4a0a42(0x29e,0x2a1,0x3dc,0x3f8,0x3f7)+_0x330810(0x32b,0x35c,0x212,0x2a8,0x253))+(_0xe32ea2(0x474,0x563,0x518,0x532,0x5a3)+_0x330810(0x1a0,0x10f,0x4a,0x113,0x164)+_0x57dd3e(0x5ec,0x49f,0x4fc,0x660,0x52b)+_0x4a0a42(0x263,0x287,0x353,0x101,0x261)+_0x330810(0x13,0x265,0x16e,0x10f,0x2b3)+_0xe32ea2(0x58f,0x4ad,0x4c5,0x4c5,0x653))+(_0xe32ea2(0x477,0x493,0x3e1,0x5b8,0x37a)+_0xe32ea2(0x3c5,0x41c,0x4c6,0x428,0x354)+_0x35ca08(-0xf6,-0x2a,-0x5a,-0xed,-0x125)+_0xe32ea2(0x3d5,0x38d,0x300,0x36a,0x3a2)+_0x57dd3e(0x741,0x556,0x703,0x57a,0x694)+_0x35ca08(-0x11b,-0x18b,-0x200,-0x219,-0x211)+_0x330810(0x8e,0x1e,0x15a,0x107,0x1c)+_0x330810(0x226,0x196,0x201,0x1e0,0xa1)+'\x0a\x0a')+(_0xe32ea2(0x474,0x5af,0x540,0x457,0x5ce)+_0xe32ea2(0x424,0x3f1,0x56a,0x342,0x507)+_0x35ca08(-0x16d,-0x2c3,-0x325,-0x1d9,-0x1f6)+_0xe32ea2(0x4de,0x3c3,0x4e4,0x46b,0x495)+_0x330810(0x62,0x11,-0x46,-0x131,-0x92))+(_0x330810(0x1ee,0xa2,0x9d,0xed,0x1de)+_0x330810(-0x151,-0x120,-0x15,-0x2c,-0x13d)+_0x35ca08(0x9,-0xbd,-0x198,-0x5e,-0x125)+_0xe32ea2(0x4c5,0x3bc,0x60c,0x45e,0x594)+_0xe32ea2(0x5a7,0x45b,0x54f,0x510,0x4e5)+_0x35ca08(-0xcf,-0x13b,-0xb8,-0x1bd,-0x10e)+_0x330810(0x241,0x230,0x24a,0x25e,0x341)+_0x4a0a42(0x2e4,0x384,0x42f,0x288,0x2f2)+_0x4a0a42(0x269,0x323,0x3c4,0x209,0x296)+_0x4a0a42(0x131,0x12e,0x36c,0x398,0x257)+'\x0a\x0a')+(_0x57dd3e(0x628,0x55c,0x48f,0x4e6,0x561)+_0x35ca08(-0x78,-0x29,-0x16d,-0x12e,-0x16d)+_0x4a0a42(0x19e,0x331,0x301,0x3b5,0x2f0)+_0xe32ea2(0x5a9,0x5cc,0x580,0x4ba,0x561)+_0x57dd3e(0x3f0,0x521,0x45b,0x51d,0x481))+(_0x35ca08(-0xc6,-0x207,-0x24,-0x130,-0x11a)+_0x35ca08(-0x19e,-0x18c,-0x17b,-0x307,-0x1cc)+_0x330810(-0x99,0xa9,0x92,0x19d,0x113)+_0x35ca08(-0x231,-0x295,-0x111,-0x305,-0x1fc)+_0x35ca08(-0x18d,0xb8,-0x107,-0x18,-0x91)+_0xe32ea2(0x4c9,0x4da,0x36f,0x367,0x4d6)+_0x57dd3e(0x51a,0x55c,0x5a0,0x464,0x57a)+_0x330810(0x13,-0x32,0x94,0x54,0x3f)+_0x57dd3e(0x5c8,0x5c4,0x457,0x62b,0x50e)+_0x4a0a42(0x1ae,0x2d8,0x190,0x274,0x257)+'\x0a\x0a')+(_0x330810(0x12d,0x19,0x9a,0x6b,0x60)+_0xe32ea2(0x424,0x303,0x492,0x555,0x49e)+_0xe32ea2(0x602,0x58d,0x690,0x665,0x5ee)+_0x330810(-0x3a,0x12e,0xe2,0x112,0x118)+_0xe32ea2(0x547,0x57d,0x54d,0x5f3,0x45f)+_0x35ca08(0x2,-0x148,-0xb1,0x4b,-0x32))+(_0x330810(0x1db,0x198,0x9d,0xb4,0x108)+_0x35ca08(-0x2c4,-0xa6,-0xcd,-0x30c,-0x1cc)+_0x330810(-0x24,0xa0,0x92,0x19f,-0x7d)+_0x35ca08(-0x170,-0x180,-0x335,-0xa6,-0x1fc)+_0x330810(0xf9,0x39,0x179,0x212,0x43)+_0x57dd3e(0x549,0x646,0x51e,0x67e,0x5ad)+_0xe32ea2(0x545,0x59c,0x48c,0x401,0x457)+_0x330810(-0x78,0xa4,-0x6,-0x15e,0xe6)+_0x35ca08(-0xfc,-0x155,-0x277,-0x223,-0x151)+_0x57dd3e(0x55d,0x450,0x5ca,0x39e,0x493)+_0x35ca08(-0x55,0x99,0x24,-0x166,-0xa6)+_0x4a0a42(0x348,0x304,0x353,0x41e,0x3f7)+_0x57dd3e(0x669,0x72a,0x634,0x741,0x6d9))+(_0x4a0a42(0x1d1,0x1f2,0x18a,0x218,0x2e9)+_0x4a0a42(0x27c,0x1e1,0x328,0x229,0x299)+_0xe32ea2(0x3eb,0x3f9,0x4dd,0x412,0x3e7)+_0x57dd3e(0x5a5,0x50e,0x516,0x52b,0x57b)+_0x35ca08(-0x132,0xa9,0x1c,-0x158,0x4)+_0x330810(0x207,0x306,0x1b5,0x1c0,0xf1))+(_0xe32ea2(0x477,0x515,0x476,0x4ec,0x463)+_0x4a0a42(0x1d0,0x154,0x20e,0x363,0x23a)+_0x330810(-0x23,-0x44,0x92,-0x96,0xbe)+_0x4a0a42(0x19a,0xc5,0x331,0x17d,0x20a)+_0xe32ea2(0x3a3,0x343,0x288,0x310,0x39b)+_0x330810(0x203,0x14e,0xb4,0x1ee,-0x82)+_0x35ca08(-0x16f,-0x88,-0x22b,-0x237,-0x136)+_0x4a0a42(0x39a,0x387,0x395,0x233,0x341)+_0xe32ea2(0x509,0x528,0x42e,0x405,0x3d2)+_0x57dd3e(0x368,0x4a6,0x411,0x511,0x46d)+_0x330810(0x2a,-0xa4,-0x29,0x118,-0x143))+(_0x35ca08(-0x1b9,-0x247,-0xa3,-0x1e9,-0x11d)+_0x330810(0x146,0xd5,0x4a,-0x31,0x17b)+_0x57dd3e(0x4b6,0x4fe,0x69f,0x43a,0x58b)+_0xe32ea2(0x44f,0x3d6,0x337,0x4cc,0x55e)+_0x35ca08(-0x140,0x27,-0x43,-0x48,0x14)+'\x0a')+(_0x35ca08(-0x17,-0x17d,-0xef,-0x208,-0x11a)+_0x330810(-0xaf,0x146,-0x15,0xf9,-0xb7)+_0x57dd3e(0x5a5,0x695,0x543,0x485,0x559)+_0x57dd3e(0x74d,0x849,0x699,0x7b7,0x6ff)+_0xe32ea2(0x4fd,0x3cd,0x5de,0x5a4,0x3c0)+_0x4a0a42(0x328,0x542,0x376,0x531,0x41b)+_0x35ca08(-0x277,-0x297,-0x26b,-0x26d,-0x1a3)+_0x57dd3e(0x5ed,0x44c,0x35d,0x4f5,0x4bd)+_0x57dd3e(0x5b9,0x596,0x488,0x573,0x591)+_0x4a0a42(0x2df,0x480,0x380,0x4d0,0x437)+_0x4a0a42(0x372,0x3f9,0x259,0x471,0x38b)+_0xe32ea2(0x54e,0x5c1,0x50a,0x445,0x634)+_0xe32ea2(0x3a7,0x48b,0x301,0x4cb,0x4fa)+_0xe32ea2(0x5c6,0x5d7,0x644,0x6d4,0x4e3)+_0x330810(0x2a,0x106,0x17b,0x22c,0x235)+'\x0a\x0a')+(_0x35ca08(-0x5e,0x1b,-0x1b3,0x25,-0x11d)+_0x4a0a42(0x361,0x1f4,0x238,0x1b5,0x299)+_0x57dd3e(0x858,0x63f,0x792,0x627,0x728)+_0xe32ea2(0x51e,0x4a3,0x47f,0x5d2,0x660)+_0x4a0a42(0x2a3,0x2ce,0x44c,0x4ab,0x3d4))+(_0x4a0a42(0x44c,0x388,0x2eb,0x1a4,0x2ec)+_0x330810(0x8f,-0x104,-0x15,0x5c,0xc4)+_0x330810(0x11e,-0x2d,0x92,0x140,-0x3a)+_0xe32ea2(0x395,0x425,0x4cc,0x32e,0x424)+_0x330810(0x146,0x1d4,0x179,0x72,0x1a9)+_0xe32ea2(0x5f8,0x568,0x667,0x728,0x5db)+_0x35ca08(-0x54,-0x56,-0xba,-0x14c,-0x104)+_0x330810(0xac,0x3,0x94,0x1cf,0x1d4)+_0x35ca08(-0xdd,-0x161,-0x1f,-0x22c,-0x170)+_0x57dd3e(0x494,0x3e2,0x5f9,0x3a0,0x4cf)+'\x0a\x0a')+(_0x57dd3e(0x78c,0x6c7,0x7a9,0x6cd,0x674)+_0xe32ea2(0x639,0x707,0x639,0x4f8,0x648)+_0x330810(0x13c,0x187,0x187,0x272,0x157)+_0x4a0a42(0xfc,0x2ab,0x2ad,0x2ff,0x1fd)+_0x35ca08(0x135,-0x80,0x63,0x21,0x21)+_0x57dd3e(0x49f,0x61f,0x601,0x504,0x4c6)+_0x4a0a42(0x3b9,0x5a7,0x3d2,0x50d,0x456)+_0x4a0a42(0x29f,0x386,0x146,0x3bd,0x291)+_0x35ca08(-0x2a,0x1c8,0x1b1,0x140,0x74)+_0x4a0a42(0x1ae,0x18f,0x2d6,0x2a6,0x248));function _0x35ca08(_0x3fddfc,_0x3ae49b,_0x2533fb,_0x236256,_0x57ea07){return _0x2610(_0x57ea07- -0x33e,_0x3ae49b);}function _0x49f8(){const _0x1c8c63=['4slow','y\x2050%','Check','bow\x20e','ave\x202','ectru','p4art','්ණ\x20වඩ','NRpJf','🔮\x20විධ','e*\x0a','d\x20dee','ක\x20බලප','*(?:[','kLsDp','ar\x20le','wimag','sound','GxHGB','්න\x20fi','\x20බවට\x20','RyHtl','ct\x20to','වාදනය','3volu','QZfqL','ගිනයක','ානය\x20:','tBUHN','\x20*.bl','DsEls','ow-mo','mage*','the\x20c','s\x20the','4blur','renim','or*\x0a','\x20🔮💠\x0a\x0a','\x20රූපය','h*\x0a','AmYSI','\x20CQT\x20','ි\x20ප්ල','\x20to\x20g','te\x20:\x20','zLHaF','යෝවට\x20','CTitN','JnQYU','uTHrg','\x20*.in','rs*\x20🔮','jWjWO','යාරූප','taudi','ange\x20','ඳහා\x20ක','XbVGz','rse*\x0a','erts\x20','oto\x20m','\x20*.av','ck\x20an','ියෝ\x20බ','ttrac','\x20*.x4','nterp','nd\x20wh','ී\x20හා\x20','mp3*\x0a','tisFv','ibkud','ට\x20පරි','p4neg','\x20උපදව','video','the\x20d','බවට\x20ප','\x20soun','EbxPL','නය\x20කර','YdTEw','hance','රිවර්','p4edg','arer.','යෝවේ\x20','d\x20thi','8ZUQoNX','terp*','$]*)','://am','යෝ\x20ගු','රූපය\x20','\x20යොදය','and\x20f','4edge','ය\x20තුන','rever','ය\x20වීඩ','කම්පන','d\x20whi','.\x0a\x0a','3low*','යේ\x20හි','\x20effe','m*\x0a','\x20මට්ට','sts\x20t','iculo','LvvLG','s\x20rid','යෝ\x20සඳ','දිලි\x20','\x20art\x20','wHtOB','FPS\x20ව','tiful','debu','ත්\x20කර','urima','fmSSd','se.\x0a\x0a','of\x20so',':\x20*.n','ේ.\x0a\x0a','💠🔮\x20*ම','asa.c','ට\x20bla','jsZju','RxRVY','dgeim','ුරු\x20හ','ය\x20ගැඹ','💠\x0a\x0a','ය\x20rev','ite\x20e','්\x20බවට','ලිය\x20ව','ණීය\x20ක','\x20It\x20m','්\x20දෙග','\x20පටයක','2853193gHTRax','\x20පරිව','cDWLv','um\x20of',':\x20*.x','ume*\x0a','pectr','\x20යොදන','mrjSY','syocT','\x20*.fr','හි\x20ed','ce\x20as','4enha','gin\x20t','groun','ge.\x0a\x0a','rysta','ානය\x20\x20','lter\x20','WRNvS','\x2075%ක','සන්න.','FPS\x20o','puWhH','if\x20බව','ා\x20මන්','ලාත්ම','rue-s','kSJcO','\x20*.vo','\x20nost','SoxTu','ඳ\x20කරය','timag','e\x20eff','\x20offi','3eq*\x0a',':\x20*.a','QdBaq','jyFpg','o*\x0a','\x20Conv','\x20*.vi','XeHvn','මාධ්ය','ම\x20එතර','වර්තන','YuoTx','\x20phot','olume','යේ\x20ඩෙ','he\x20so','gwNlD','සෘණ\x20ව','ance*','යෝ\x20බව','websi','TkGyd','WafjY','lue\x20o','මට්ටම','ructo','ඩි\x20කර','රන්න.','gativ','fcgXk','්\x20යෙද','ies\x20t','age*\x0a','\x20Appl','\x20*.ar','test','p4rev','DojoF','nce*\x0a',':\x20*.b','\x20*.wa','tive*','\x20අගය\x20','\x20මෙවල','lumea','ram\x20o','ැඟීමක','ies\x20r','ඛ්යාත','bow*\x0a','er\x20to','and\x20a','ves*\x0a','කට\x20සක','cFYDC','\x20පැහැ','d\x20int','o\x20a\x20c','ෑමක්\x20','while','on-sl','o.\x0a\x0a','්\x20කරය','nbow*','d\x20in\x20','init','ckplH','4imag','hat\x20h','\x20mono','\x20rain','හා\x20bl','dvxde','us.\x0a\x0a','ා\x20ලස්','පරිවර','\x20(tru','p4ima','chain','ZeHwq','grain','cript','vel.\x0a','call','0-9a-','iNpwg',':\x20*.i','DWCKg','වඩාත්','eydGO','p\x20and','iting','\x20of\x20t','vec*\x0a','්න.\x0a\x0a','om/','color','\x20Make','y\x2075%','4reve','sndel','https','කරයි.','algic','the\x20h','\x20*.gi','150Wyxcqe','UuBcN','te\x20ef','p4col','hoto.','f\x20aud','tnJUJ','බොඳ\x20ක','low*\x0a','\x20සංස්','input','cy*\x0a','p4sta',':\x20*.r','nhanc','ack\x20a','olors','ce\x20vi','ow\x20mo','HMQUg','mMJhF','සාදනු','ෝවක්\x20','\x20ශබ්ද','ave\x20r','\x20slow','ඩා\x20ඇත','s.\x0a\x0a','ct\x20යො','ංග\x20පර','her*\x0a','EqWpy','lity.','කාර\x20හ','එය\x20මා','\x20*.x2','vibra','යෝ\x20පට','the\x20s','ohTbR','\x20Redu','තනය\x20ක','ාධ්‍ය\x20ස','count','Z_$][','WBBpI','KIOip','ාසය\x20ව','LhlDg','ilter','්තනය\x20','p4slo','of\x20th','A\x20plu','📄\x20විස','ec*\x0a','4nega','ුණයක්','qtaud','යට\x20vi','JtkEr','\x20වේගව','daniw','13673IxDXNA','KCyGQ','mNidD','\x20colo','the\x20p','TkbLb','ntage','mand\x20','uOxJq','ය\x20කරය','lorim','io*\x0a','2789068InxkhI','d\x20twi','e\x20vid','ම්\x20වැ','වේගවත','p4enh','💠🔮\x20*\x20','2mp3*','ඩු\x20කර','යේ\x20තර','l\x20cle','JYmqP','erse*','f*\x0a','zA-Z_','o\x20ima','රූපයේ','ැදිලි','ිම\x20බො','යෝව\x20g','p3eq*',':\x20*.e','ණු\x20කර','\x20filt',':\x20*.v','o\x20vid','ideo’','audio','CYrei','සන\x20කර','TVRFi','යට\x20යො','2073321mSdVuu','ැඩි\x20ක','xtdfD','3crus','much.','um*\x0a','olori','p4rai','*.mp3','\x20Dist','යට\x20ed','ය\x20මෙන','ත්ර\x20හ','\x20*.ag','\x20*.gr','4stab','දගාමී','\x20more','w\x20eff','cFryd','\x20*.co','qwDho','lowmo','හාස්ය','mQzcj','image','\x20Play','3reve','කාරක*','snziL','io\x20to','DdNmJ','e)\x20{}','FtmoK','\x20Adju','ion\x20:','\x20පරාස','t\x20to\x20','und\x20t','\x20*.sp','\x20beau','ity\x20b','රක*\x20🔮','🔮\x20Com','RPIqj','kqHRP','📄\x20Des','funct','erse\x20','p3rev',':\x20*.g','s\x20qua','d\x20of\x20','tgUwV','YznTr','ideo.','හා\x20sl','the\x20v','\x20back','KxjXW','\x20පසුබ','ZYgkM','edia\x20','ය\x20අඩු','්තර\x20:','l\x20val','f\x20the','hnYRf','effec','ainbo','වීඩිය','Objec','dAwMf','equen','oRFdh','QeAGY','ර\x20හා\x20','3pitc','\x5c+\x5c+\x20','වට\x20පර','ෝ\x20බවට','ය\x20වික','\x20Decr','යට\x20වි','HGAGd',':\x20*.c','4colo','\x20make','SwynA','4art*','\x20to\x20v','he\x20ph','vElSe','PtgsY','inbow','actio','rs\x20of','QT\x20va','l\x20so\x20','න්න.\x0a','rOgZx','ound,','\x2050%ක','VoqgC','\x20sec\x20','reque','e\x20කරන','\x20into','er.\x0a\x0a','udio*','4bw*\x0a','eases','\x20විචි','අගය\x20ව','apply','egati','ර්ණ\x20f','f\x20sou','ue\x20of','\x20nega','\x20ඡායා','\x20Enha','යේ\x20වර','nd\x20to','\x20Blur','\x20*.bw','කභාවය','\x205\x20ක\x20','rain\x20','න්\x20ඡා','tion\x20','ect\x20t','ය\x20පැහ','nner\x20','\x20vide','ආකර්ෂ','2696808kLPPYc','\x20වැඩි','ffect','sher*','fCpPA','bECCp','p4blu','rMvNM','tge\x20e','qYAVV','rXqLJ','p3pit','\x20ඇත.\x0a','lurim','රයි,\x20','ි.\x0a\x0a','රයි.\x0a','chrom','vyAvz',':\x20*.f','const','a-zA-','ease\x20','intag','ion\x20*','the\x20w','\x20the\x20','4mp4*','\x20*.ed','d\x20and','art\x20e','gif*\x0a','ීඩියෝ','fect\x20','nFZfH','දේදුන','tduan','mqCpy','\x20එමඟි','uuHns','gger','නු\x20බල','pGjqR','තත්පර','akes\x20','lTAUA','OjfIL','ies\x20g','ුබිම\x20','වර්ණ\x20','යෝව\x20ස','vcipY','state','vkxeA','\x20vina','4rain','o\x20the','\x20qual','4vint','p3vol','2kBblLp','b*\x0a','LANG','gkcjU','the\x20f','\x20*.mp','XbLWo','tage*','622018TYIjWK','ore\x20v','WheqM','\x5c(\x20*\x5c','r*\x0a','mp4*\x0a','ර්තනය','p4bw*','ch*\x0a','rtima','ධ්‍ය\x20ed','යෝව\x20r','p3cru','wmo*\x0a','පෑමක්','wrANA','ිවර්ත','lengt','දයි.\x0a','\x20gif\x20','aves*',':\x20*.w','\x20vivi','රූපයෙ','ිචිත්','DFhIz','nce\x20v','PeRed','\x20tool','\x20දියු','ණාත්ම','o\x20cle','යේ\x20පස','\x20gif.','if.\x0a\x0a','istog','xaFrG','p4vin','XKXaq','\x20to\x205','ාත්\x20ව','me*\x0a','යෝව\x20v','\x20දේදු','the\x20C','\x20*.ra','5\x20med','ර්ණාව','tive\x20','\x20කට\x20ව','veima','eimag','ia\x20ed','\x20to\x20n',':\x20*.m','ge\x20ef','්රෑම්','ivid\x20','Edito','\x20fast','qzNly','ම්\x2025','ies\x20a','mo*\x0a','tive.','ෘති\x20ක','\x20*.en','geima','💠🔮\x20*M','Sabqt',':\x20*.s','යොදයි','ංස්කා','oOjdx','ge*\x0a','ස්ටෝග','cial\x20','සඳහා\x20','1924020GlhJiB','ative','YSPmJ','if*\x0a','යේ\x20සං','සිබල්','2mp4*','aster','ncy*\x0a','\x20edge','යි.\x0a\x0a','\x20වීඩි','strin','jvOJY','\x20*.ne','eo.\x0a\x0a','fRWlD','deo’s','evers','ින්\x20අ','5gwvIRg','KANiT','orts\x20','\x20කරයි','enima','o\x20in\x20','ncy\x20r','\x20වල\x20ව','\x20Incr','\x20*.cq','ecibe','photo','\x20leve','oiced'];_0x49f8=function(){return _0x1c8c63;};return _0x49f8();}const sin=_0xe32ea2(0x604,0x742,0x6d3,0x5e1,0x57c)+_0xe32ea2(0x408,0x466,0x4e8,0x446,0x447)+_0x330810(0xd1,0x278,0x183,0x176,0x278)+_0x35ca08(-0x148,-0xaf,-0x9f,-0x94,-0x11e)+_0x35ca08(-0x99,0x9b,0x1b,0x10b,0x7b)+(_0x330810(0xc1,0x2ca,0x1b4,0x239,0xbd)+_0xe32ea2(0x5a0,0x477,0x56b,0x44a,0x5ee)+_0x35ca08(0xe4,-0x84,-0x21,-0x2d,-0x7f)+_0x330810(0x2a4,0x30f,0x248,0x281,0x2c3)+_0x57dd3e(0x50b,0x37a,0x5be,0x585,0x487))+(_0x57dd3e(0x4fa,0x4c5,0x551,0x540,0x51c)+_0x57dd3e(0x874,0x7af,0x61e,0x7dc,0x72f)+_0x330810(-0x117,-0x81,0xd,0xa9,0x45)+_0xe32ea2(0x465,0x49b,0x593,0x3d7,0x4c2)+_0x330810(0xc6,0x99,0x1d1,0x2e5,0x115))+(_0x35ca08(-0x21,-0x57,0x85,-0x10e,-0x3)+_0x57dd3e(0x553,0x6e1,0x72e,0x761,0x68d)+_0x330810(0x21a,0x27f,0x138,0x207,0x149)+_0x35ca08(0x62,0xca,0x91,0x1ae,0x91)+_0x35ca08(-0x29e,-0x21b,-0x10c,-0xec,-0x1f7))+(_0xe32ea2(0x414,0x3f6,0x428,0x4cb,0x412)+_0xe32ea2(0x489,0x50c,0x477,0x4a3,0x3c9)+_0x330810(0x1d5,0x127,0x194,0x204,0x1d6)+_0x35ca08(-0x61,-0x7d,-0xb0,-0x2a,0x51)+_0xe32ea2(0x533,0x532,0x680,0x3dd,0x502)+_0x35ca08(-0x1,-0x17d,-0xed,-0x13d,-0xca)+_0xe32ea2(0x4d2,0x523,0x46b,0x59d,0x550)+_0x4a0a42(0x418,0x292,0x372,0x25e,0x3a7)+_0x35ca08(-0x25a,-0xb6,-0x191,-0x62,-0x152)+_0xe32ea2(0x4ac,0x49e,0x571,0x433,0x396)+'\x0a')+(_0x57dd3e(0x786,0x7c9,0x55d,0x62b,0x67b)+_0x35ca08(0x27,-0x10b,0x80,-0x48,0xf)+_0x57dd3e(0x765,0x67a,0x766,0x62e,0x6a5)+_0x330810(0x1df,0x1df,0x205,0xcc,0x20c)+'\x0a')+(_0x4a0a42(0x337,0x18c,0x313,0x399,0x289)+_0xe32ea2(0x489,0x38a,0x39f,0x5c8,0x577)+_0x4a0a42(0x2f3,0x524,0x4d4,0x299,0x3e3)+_0x35ca08(-0x3e,0x192,0x165,0xe8,0x4b)+_0x330810(0x359,0x130,0x220,0x1d6,0x1fc)+_0x4a0a42(0x2fc,0x36b,0x304,0x2bf,0x2bf)+_0x57dd3e(0x63b,0x5ee,0x6fc,0x621,0x5ce)+'\x0a')+(_0xe32ea2(0x58e,0x4d4,0x5bc,0x62c,0x6ba)+_0x4a0a42(0x2f2,0x39e,0x525,0x340,0x415)+_0x4a0a42(0x44e,0x276,0x3f0,0x44d,0x387)+_0x4a0a42(0x2d7,0x33f,0x409,0x341,0x3fa)+_0x4a0a42(0x313,0x3e5,0x315,0x358,0x3c9))+(_0xe32ea2(0x414,0x317,0x4cf,0x365,0x39a)+_0x4a0a42(0x265,0x296,0x1cd,0x351,0x2fe)+_0x57dd3e(0x66d,0x71a,0x6f4,0x746,0x65b)+_0xe32ea2(0x5f6,0x4d5,0x629,0x5e3,0x670)+_0xe32ea2(0x481,0x5b5,0x406,0x557,0x3a5)+_0xe32ea2(0x5a4,0x61b,0x50a,0x564,0x6d6)+_0x4a0a42(0x41b,0x39b,0x2f5,0x37f,0x340)+_0x57dd3e(0x5db,0x3be,0x582,0x395,0x4e0)+_0xe32ea2(0x4dd,0x3ad,0x464,0x553,0x49b)+'\x0a')+(_0x330810(0x133,0x2c2,0x1b4,0x1dc,0xfb)+_0x35ca08(0x14a,-0x43,-0x5c,-0x3f,0xf)+_0x35ca08(0x7b,0xdc,0x9a,-0x14,0x36)+_0x57dd3e(0x5cf,0x5c1,0x764,0x6aa,0x607))+(_0x35ca08(-0x1b0,-0xd4,-0x266,-0x84,-0x17d)+_0x35ca08(-0x9f,-0x1e1,0x16,-0x45,-0x108)+_0x4a0a42(0x4ff,0x3cb,0x36e,0x2d2,0x3e3)+_0xe32ea2(0x5e2,0x729,0x495,0x5a3,0x496)+_0xe32ea2(0x533,0x4b3,0x532,0x4b8,0x477)+_0x57dd3e(0x4d1,0x4df,0x633,0x570,0x5b4)+_0x330810(0x19b,0x266,0x250,0x36b,0x1c0)+_0x35ca08(0x56,-0x179,0x11a,0x16,-0x1b)+_0xe32ea2(0x431,0x560,0x531,0x375,0x409)+_0xe32ea2(0x4ac,0x560,0x3eb,0x517,0x3e6)+'\x0a')+(_0x4a0a42(0x2aa,0x3e9,0x2c2,0x3ad,0x403)+_0x4a0a42(0x415,0x3fa,0x513,0x3e8,0x415)+_0x35ca08(-0x1d8,-0x295,-0x75,-0x24f,-0x190)+_0xe32ea2(0x51a,0x4c6,0x4ad,0x5fa,0x55c))+(_0x330810(0x184,-0xd4,0x3a,0x100,0x32)+_0xe32ea2(0x489,0x5b6,0x4bf,0x492,0x512)+_0x57dd3e(0x597,0x6be,0x5e0,0x7bb,0x65b)+_0x4a0a42(0x4a8,0x434,0x3f7,0x3d7,0x457)+_0x330810(0x12,0x1f7,0x159,0x11e,-0xa)+_0x4a0a42(0x244,0x2e1,0x28e,0x472,0x33c)+_0xe32ea2(0x4af,0x3a0,0x588,0x355,0x3ff)+_0x57dd3e(0x6e3,0x667,0x709,0x7b7,0x663)+_0x57dd3e(0x5cc,0x544,0x40f,0x4e1,0x51e)+_0xe32ea2(0x4ac,0x390,0x387,0x579,0x497)+'\x0a')+(_0x4a0a42(0x4fb,0x53d,0x446,0x4ce,0x403)+_0x4a0a42(0x441,0x392,0x31a,0x408,0x415)+_0xe32ea2(0x3dd,0x408,0x4e3,0x3dc,0x3ac)+_0x4a0a42(0x172,0x227,0x232,0x25d,0x2ab))+(_0x4a0a42(0x309,0x38a,0x158,0x3ac,0x289)+_0x35ca08(-0x77,-0x185,-0x20d,-0x64,-0x108)+_0x35ca08(0x69,0x16,-0x96,0x1a,-0x23)+_0x57dd3e(0x4fc,0x446,0x626,0x66f,0x529)+_0x4a0a42(0x5e3,0x43a,0x58f,0x55c,0x4a3)+_0x35ca08(-0xbd,0x177,-0x3,-0x10,0x3d)+_0x57dd3e(0x644,0x71f,0x76e,0x722,0x731)+_0x4a0a42(0x229,0x3ec,0x28c,0x1d4,0x29b)+_0x35ca08(-0x139,0x64,0x67,-0x1a7,-0xb1))+(_0x4a0a42(0x346,0x4f3,0x4ce,0x2d8,0x403)+_0x330810(0x246,0x18a,0x1c6,0x30b,0x180)+_0x57dd3e(0x482,0x637,0x611,0x506,0x543)+_0x4a0a42(0x50b,0x2cb,0x48f,0x500,0x3db))+(_0xe32ea2(0x414,0x479,0x424,0x564,0x2c9)+_0xe32ea2(0x489,0x5eb,0x401,0x59f,0x3a5)+_0x330810(0x27f,0x132,0x194,0x31,0x235)+_0x35ca08(-0x4c,-0x154,0x90,0x41,-0x52)+_0x57dd3e(0x64b,0x7d4,0x6d7,0x7ce,0x671)+_0x35ca08(-0x113,-0x84,-0x52,-0x10d,-0x69)+_0x57dd3e(0x7d9,0x61b,0x7b8,0x797,0x6c0)+_0x35ca08(-0x101,-0x108,-0x5b,-0x35,0x48)+_0x57dd3e(0x449,0x4b8,0x584,0x646,0x4f4)+_0x57dd3e(0x5bc,0x470,0x4a2,0x635,0x5ce)+'\x0a')+(_0x330810(0x18b,0x172,0x1b4,0x1d4,0x190)+_0x57dd3e(0x67d,0x535,0x6c0,0x59b,0x68d)+_0x35ca08(-0xb8,-0x129,-0x197,-0x120,-0x7f)+_0x57dd3e(0x5ad,0x78c,0x7bc,0x74b,0x695)+'*\x0a')+(_0x57dd3e(0x454,0x429,0x50f,0x462,0x501)+_0x4a0a42(0x1ff,0x3b8,0x3c2,0x32a,0x2fe)+_0x4a0a42(0x4a5,0x37b,0x50b,0x31e,0x3e3)+_0xe32ea2(0x403,0x51d,0x342,0x3a3,0x30e)+_0x57dd3e(0x643,0x65a,0x669,0x6e5,0x622)+_0xe32ea2(0x501,0x494,0x50d,0x5a2,0x648)+_0x35ca08(-0xd1,-0x240,-0x170,-0x14a,-0x1ac)+_0x35ca08(-0x1a1,-0x199,-0x156,-0x14a,-0xb0)+'\x0a')+(_0x4a0a42(0x532,0x2dd,0x420,0x4c9,0x403)+_0x4a0a42(0x3da,0x4c8,0x3ba,0x37f,0x415)+_0x35ca08(0xc8,-0x49,-0x16c,-0x19d,-0x7f)+_0x4a0a42(0x2d0,0x42c,0x21b,0x186,0x2cd)+'*\x0a')+(_0x35ca08(-0x144,-0x1af,-0x5d,-0x268,-0x17d)+_0x35ca08(-0x164,-0x267,-0x163,0x17,-0x108)+_0x4a0a42(0x2ab,0x53b,0x415,0x449,0x3e3)+_0x35ca08(0xb8,0x18c,0x18a,-0xf3,0x4b)+_0x57dd3e(0x653,0x62a,0x68c,0x7a9,0x6d7)+_0x35ca08(-0x96,-0x199,0xc,-0x27,-0x109)+_0x35ca08(-0x82,-0xd,-0xda,-0xb8,-0x17)+_0x57dd3e(0x625,0x704,0x743,0x770,0x6d9))+(_0x57dd3e(0x663,0x63a,0x7b0,0x62c,0x67b)+_0x57dd3e(0x5ba,0x74a,0x636,0x6df,0x68d)+_0x4a0a42(0x385,0x386,0x236,0x2bd,0x387)+_0x330810(0x15b,0x1ee,0x12e,0x146,0x35)+_0x4a0a42(0x162,0x236,0x25d,0x2b1,0x21a))+(_0xe32ea2(0x414,0x3ce,0x4f9,0x313,0x35b)+_0x57dd3e(0x66f,0x495,0x442,0x557,0x576)+_0x330810(0xc8,0x1cb,0x166,0x1fa,0x135)+_0x330810(0xbf,0x90,0x120,0x23c,0x17a)+_0x330810(0x1a1,0x275,0x149,0x149,0xba)+_0x35ca08(0xca,-0x162,0x46,-0xfa,-0x23)+_0xe32ea2(0x403,0x4b1,0x3d9,0x409,0x419)+_0xe32ea2(0x448,0x4b2,0x412,0x40b,0x2f2)+_0x35ca08(-0xcf,0x38,-0x6e,-0x98,-0x6a)+'\x0a')+(_0xe32ea2(0x58e,0x4dd,0x6a2,0x4ab,0x62d)+_0x330810(0x234,0xca,0x1c6,0x1d5,0x302)+_0x4a0a42(0x261,0x481,0x485,0x37e,0x387)+_0x57dd3e(0x640,0x458,0x6a4,0x651,0x58c)+_0x35ca08(0x59,-0x11e,-0xd2,0x92,-0x78))+(_0xe32ea2(0x414,0x302,0x4ed,0x49f,0x3d1)+_0xe32ea2(0x489,0x4fb,0x3b8,0x350,0x38f)+_0x4a0a42(0x2ec,0x2bf,0x384,0x2e0,0x3e3)+_0x35ca08(0x1ad,0x5,-0x27,0x6d,0x4b)+_0x330810(0x25f,0x14e,0x128,0x140,0x71)+_0x4a0a42(0x3a1,0x24a,0x236,0x296,0x241)+_0xe32ea2(0x4b9,0x48f,0x60e,0x58c,0x5d2)+_0x35ca08(-0x73,-0x1b2,-0x92,-0x4,-0x13c)+_0x4a0a42(0x1b2,0x25c,0x1b4,0x133,0x233)+_0x57dd3e(0x3f1,0x589,0x594,0x3df,0x533)+_0x4a0a42(0x36e,0x3ad,0x432,0x348,0x3e2))+(_0x35ca08(-0x70,-0xc1,-0x13,-0x76,-0x3)+_0xe32ea2(0x5a0,0x665,0x6da,0x60f,0x66d)+_0x330810(0x105,0x190,0x138,0x296,-0x10)+_0x35ca08(-0x136,-0x1f8,-0x1e9,-0x22a,-0xef)+'\x0a')+(_0xe32ea2(0x414,0x378,0x2c3,0x542,0x462)+_0x330810(0x115,-0x7a,0xaf,-0x24,-0x3f)+_0x330810(0x2df,0x20b,0x194,0x269,0x2d5)+_0x35ca08(-0x1ee,-0x16b,-0x15d,-0xad,-0x8e)+_0x35ca08(0x85,-0xe,0x12,-0x11b,0x2d)+_0x4a0a42(0x51b,0x42b,0x4f1,0x430,0x4a5)+_0x4a0a42(0x4e3,0x3f7,0x2b0,0x451,0x406)+_0x35ca08(-0x234,-0x19f,-0x125,-0x95,-0x1e3)+_0xe32ea2(0x55c,0x619,0x48f,0x473,0x407)+_0x4a0a42(0x3cd,0x32b,0x312,0x363,0x461))+(_0x35ca08(-0x30,0xa,0x5d,-0xe2,-0x3)+_0x330810(0x326,0x17d,0x1c6,0xed,0xf8)+_0x330810(0xb7,0x19d,0x138,-0x1c,0x216)+_0xe32ea2(0x416,0x41d,0x48e,0x2ba,0x2ff)+_0x4a0a42(0x176,0x113,0x12e,0x202,0x212)+'\x0a')+(_0x330810(0x52,0x12a,0x3a,0xbc,0x182)+_0x4a0a42(0x3fc,0x28e,0x31e,0x33a,0x2fe)+_0x57dd3e(0x689,0x54c,0x670,0x71d,0x65b)+_0x35ca08(-0x4b,0x36,-0x19,0xa1,0x23)+_0x330810(-0xc0,0xda,-0x55,-0x132,-0x78)+_0x4a0a42(0x2e8,0x308,0x398,0x277,0x332)+_0x35ca08(-0x215,-0x170,-0xd1,-0x11f,-0x182)+_0x35ca08(-0x102,0xc,-0x100,0x15c,0x53)+_0x57dd3e(0x714,0x609,0x4d3,0x72a,0x5cd))+(_0x57dd3e(0x688,0x653,0x5cf,0x5d9,0x67b)+_0x330810(0x250,0x127,0x1c6,0x2b9,0x27f)+_0x4a0a42(0x2dc,0x253,0x309,0x3ec,0x387)+_0x57dd3e(0x675,0x498,0x4e4,0x6b8,0x5f8)+_0x35ca08(-0x33a,-0x218,-0x20c,-0x1f6,-0x1fd))+(_0xe32ea2(0x414,0x54a,0x322,0x48a,0x53f)+_0x330810(0x90,-0x76,0xaf,-0x7c,-0x62)+_0xe32ea2(0x56e,0x49f,0x684,0x648,0x578)+_0x330810(0x14f,-0x93,0x29,0x102,0x26)+_0x57dd3e(0x5ff,0x486,0x6bd,0x618,0x589)+_0x330810(0xcc,0xf6,0x25,0xcc,0x15d)+_0xe32ea2(0x3a2,0x442,0x35a,0x3a7,0x406)+_0x57dd3e(0x5c2,0x3b9,0x404,0x4ac,0x47f)+_0x330810(0x1f6,0x277,0x229,0x30d,0x341))+(_0x4a0a42(0x545,0x383,0x2b7,0x4c0,0x403)+_0x330810(0x2ad,0x31a,0x1c6,0x1ed,0x21b)+_0x4a0a42(0x3dd,0x247,0x487,0x257,0x387)+_0x4a0a42(0x48d,0x3a6,0x304,0x392,0x32c))+(_0x4a0a42(0x23d,0x382,0x2c2,0x179,0x289)+_0xe32ea2(0x489,0x34c,0x370,0x3cf,0x557)+_0x330810(0x4c,0x18d,0x194,0x17a,0x91)+_0x4a0a42(0x34c,0x30c,0x37d,0x381,0x46b)+_0xe32ea2(0x3bb,0x400,0x4ea,0x37d,0x3e1)+_0x35ca08(-0x280,-0x2a5,-0x163,-0x126,-0x1a4)+_0x57dd3e(0x7f1,0x585,0x69d,0x7fc,0x6b6)+_0xe32ea2(0x60e,0x6de,0x75e,0x692,0x4f3)+_0x4a0a42(0x2a6,0x2e7,0x44c,0x227,0x348)+_0x35ca08(0x4d,0x2f,-0x11,0x6c,0x53)+_0xe32ea2(0x4e0,0x45c,0x381,0x3b9,0x5f6))+(_0xe32ea2(0x58e,0x69f,0x692,0x65f,0x5fe)+_0x57dd3e(0x72a,0x606,0x53b,0x769,0x68d)+_0x35ca08(-0x1f,0x4e,0xc2,-0xb,-0x7f)+_0x4a0a42(0x1ad,0x322,0x262,0x34d,0x24c)+_0x35ca08(0x175,-0xb7,-0x114,0xd5,0x2f))+(_0x330810(-0xaf,0x179,0x3a,-0x106,-0x5f)+_0x330810(0xf2,0x177,0xaf,0x45,-0x65)+_0x57dd3e(0x6d9,0x70f,0x54d,0x624,0x65b)+_0x35ca08(-0x125,-0xa1,0xc9,-0x16e,-0x71)+_0x57dd3e(0x52b,0x62f,0x518,0x556,0x662)+_0x57dd3e(0x4fa,0x658,0x57d,0x6e4,0x5a0)+_0x4a0a42(0x10a,0x364,0x140,0x18c,0x247))+(_0x57dd3e(0x704,0x73b,0x7ca,0x7bb,0x67b)+_0x57dd3e(0x7b7,0x5a2,0x779,0x64e,0x68d)+_0x330810(0x1ba,0xb2,0x138,0xf2,0x1f9)+_0x4a0a42(0x310,0x3cc,0x3a4,0x5b3,0x45b)+'*\x0a')+(_0x330810(-0x84,0x2f,0x3a,0x67,-0x11e)+_0x330810(0x104,0x1bc,0xaf,0x51,0x5a)+_0x35ca08(0xe1,-0xd5,-0xbc,-0xf9,-0x23)+_0x57dd3e(0x5d9,0x420,0x4d1,0x477,0x4f0)+_0x35ca08(-0x239,-0x4b,-0x13b,-0x18,-0x13e)+_0x57dd3e(0x63a,0x785,0x70c,0x721,0x639)+_0x330810(0xbf,0xf5,0x118,0xde,0x1c9)+_0x35ca08(0x116,-0x1e,0x115,-0x4e,-0x35)+_0x4a0a42(0x46c,0x31f,0x440,0x4c2,0x461))+(_0xe32ea2(0x58e,0x65e,0x43f,0x66c,0x4c2)+_0xe32ea2(0x5a0,0x62d,0x693,0x5e1,0x4e9)+_0xe32ea2(0x512,0x5f9,0x3fc,0x5c7,0x434)+_0x4a0a42(0x31d,0x135,0x1bd,0x337,0x22c)+_0x57dd3e(0x6ab,0x5d0,0x635,0x7af,0x67c))+(_0x4a0a42(0x3d5,0x350,0x399,0x380,0x289)+_0x57dd3e(0x4b4,0x664,0x461,0x532,0x576)+_0x35ca08(-0x57,0x61,-0x22,-0xa,-0xd0)+_0x57dd3e(0x7eb,0x6b1,0x80f,0x7ce,0x6d0)+_0xe32ea2(0x4fc,0x484,0x617,0x53c,0x565)+_0xe32ea2(0x4c8,0x4b6,0x5ca,0x3f2,0x400)+_0x4a0a42(0x30b,0x312,0x1e8,0x331,0x304)+_0x35ca08(-0x3d,-0x233,-0xd8,-0x74,-0x19d)+_0xe32ea2(0x5d3,0x51f,0x629,0x47c,0x62b)+_0x4a0a42(0x53d,0x54e,0x2fb,0x573,0x44e)+_0x35ca08(-0x98,-0x224,-0x2de,-0x14b,-0x18a)+_0x35ca08(-0x30c,-0x266,-0xd6,-0x30b,-0x202)+'\x0a\x0a')+(_0x330810(0xdf,0x22e,0x1b4,0x2fc,0xa6)+_0x330810(0x1dc,0x124,0x1c6,0xc2,0x262)+_0x35ca08(-0x15a,-0xe,-0x171,-0x1d8,-0x121)+_0x57dd3e(0x77c,0x7a8,0x6b3,0x6f1,0x677)+_0x35ca08(0x2b,0xfc,0xef,-0xdf,0x5f))+(_0xe32ea2(0x414,0x2d6,0x543,0x546,0x350)+_0xe32ea2(0x489,0x37d,0x442,0x577,0x4ab)+_0xe32ea2(0x3f5,0x4f2,0x2c4,0x321,0x51b)+_0x35ca08(0xc9,-0xa6,0x12,0x102,-0x13)+_0x4a0a42(0x2a6,0x33d,0x3df,0x2d6,0x3b9)+_0xe32ea2(0x610,0x622,0x63f,0x717,0x6e9)+_0xe32ea2(0x4f1,0x3a5,0x3b7,0x437,0x502)+_0xe32ea2(0x599,0x4f5,0x61b,0x5f3,0x5a6)+_0x57dd3e(0x4c8,0x400,0x4ad,0x49f,0x4ac)+_0x35ca08(-0x6c,-0xb6,-0x4e,-0x9c,-0x181)+_0x57dd3e(0x40e,0x621,0x601,0x502,0x4c7)+'\x0a\x0a')+(_0x330810(0x1d3,0xb1,0x1b4,0x156,0x59)+_0x35ca08(-0x11f,-0x96,0x44,-0x69,0xf)+_0x57dd3e(0x41d,0x53e,0x428,0x537,0x489)+_0xe32ea2(0x3a8,0x265,0x4cd,0x3bc,0x2ae))+(_0x4a0a42(0x253,0x358,0x284,0x3ab,0x289)+_0x57dd3e(0x5c2,0x589,0x6d0,0x62c,0x576)+_0xe32ea2(0x3f5,0x2f5,0x4b8,0x50e,0x46e)+_0x57dd3e(0x498,0x463,0x3cc,0x424,0x51f)+_0x35ca08(-0x1be,-0x8e,-0x1f2,-0xf9,-0x196)+_0x4a0a42(0x2c5,0x1b2,0x2fc,0x37d,0x282)+_0x35ca08(-0x1a4,-0x119,-0x196,-0xf5,-0xa0)+_0x330810(0x2d2,0x87,0x1bf,0x253,0x2f9)+_0x330810(-0x81,-0x170,-0x1b,-0x11b,0x68)+_0xe32ea2(0x410,0x541,0x54c,0x3ab,0x413)+_0x4a0a42(0x251,0x37d,0x273,0x274,0x24f)+'\x0a\x0a')+(_0x57dd3e(0x6e7,0x64a,0x75a,0x56f,0x67b)+_0x4a0a42(0x4c7,0x56b,0x36a,0x3f5,0x415)+_0x35ca08(0x188,0x19c,0x14f,0xb6,0x8e)+_0x330810(0x87,-0x8e,0xb8,0x206,-0x9b)+_0x35ca08(-0x1d0,-0x21f,-0x2ee,-0x67,-0x1a8))+(_0x57dd3e(0x546,0x4f3,0x5d6,0x471,0x501)+_0xe32ea2(0x489,0x596,0x432,0x473,0x433)+_0x330810(0xb9,-0x2f,0x1b,0x3f,0x9d)+_0xe32ea2(0x567,0x5d4,0x5fb,0x4fd,0x630)+_0x330810(-0xd8,-0xbb,-0x36,0xcd,-0xc4)+_0x35ca08(-0x161,-0x16f,-0xd3,0x16,-0x124)+_0x330810(0x1d7,0x365,0x20f,0x347,0x219)+_0x35ca08(-0xe5,0x89,0x120,0x55,0x34)+_0xe32ea2(0x498,0x599,0x34b,0x390,0x3d6)+_0x4a0a42(0x416,0x4a0,0x252,0x470,0x39a)+_0xe32ea2(0x5d6,0x528,0x59e,0x5c5,0x6e4)+_0x4a0a42(0x492,0x49f,0x330,0x3e7,0x3e2))+(_0x57dd3e(0x760,0x7a2,0x522,0x6f2,0x67b)+_0x330810(0x1ed,0x24e,0x1c6,0x2ca,0x1f8)+_0x57dd3e(0x6f9,0x709,0x59a,0x7c8,0x6b0)+_0x35ca08(-0x175,-0x279,-0x44,-0x1b1,-0x17c))+(_0xe32ea2(0x414,0x46b,0x537,0x449,0x2bd)+_0x57dd3e(0x45e,0x5dc,0x589,0x41c,0x576)+_0x57dd3e(0x3ef,0x583,0x4cd,0x4da,0x4e2)+_0x4a0a42(0x3b4,0x328,0x3cc,0x59a,0x463)+_0x4a0a42(0x3e2,0x525,0x3a4,0x29c,0x3d5)+_0x35ca08(0xc8,-0x197,-0xb8,-0x170,-0x44)+_0x57dd3e(0x542,0x6e8,0x529,0x57f,0x65b)+_0x57dd3e(0x509,0x447,0x3aa,0x33d,0x474)+_0xe32ea2(0x5ce,0x6e3,0x49a,0x583,0x623)+_0xe32ea2(0x644,0x611,0x627,0x5d4,0x768)+_0x35ca08(-0xb9,-0x80,-0x32,-0x22d,-0x16b)+_0x4a0a42(0x420,0x2a7,0x48e,0x2e0,0x355))+(_0xe32ea2(0x58e,0x58c,0x5e4,0x56b,0x53b)+_0xe32ea2(0x5a0,0x51f,0x4dd,0x4d1,0x519)+_0x57dd3e(0x61d,0x5d3,0x84c,0x7b5,0x720)+_0x4a0a42(0x31d,0xfd,0x1a9,0x335,0x215)+_0xe32ea2(0x4b6,0x5a2,0x401,0x589,0x473)+'\x0a')+(_0x57dd3e(0x3b2,0x58c,0x3b6,0x3cd,0x501)+_0x330810(0x1f0,0x176,0xaf,0x7d,-0x90)+_0xe32ea2(0x3f5,0x45b,0x40f,0x41d,0x554)+_0x4a0a42(0x1ea,0x334,0x14c,0x1c6,0x1f7)+_0x4a0a42(0x27d,0x4fd,0x468,0x38c,0x3dd)+_0x330810(-0x177,-0x126,-0x3c,-0x71,0xda)+_0x35ca08(-0x13e,-0x1a1,-0x106,-0x92,-0x102)+_0x57dd3e(0x658,0x505,0x587,0x56f,0x586)+_0x330810(0x1b0,0x17b,0x23c,0x31c,0x25f)+_0x57dd3e(0x67c,0x6b3,0x4bf,0x575,0x608)+_0x57dd3e(0x5ab,0x613,0x594,0x679,0x667)+_0x4a0a42(0x492,0x533,0x33f,0x425,0x461))+(_0x57dd3e(0x631,0x6c6,0x728,0x656,0x67b)+_0x330810(0x246,0x15d,0x1c6,0x263,0x108)+_0x330810(0x308,0x88,0x1a6,0x294,0x103)+_0x4a0a42(0x494,0x57f,0x43a,0x508,0x431)+_0x57dd3e(0x5cf,0x764,0x637,0x6b4,0x72b))+(_0x330810(-0xea,0xe1,0x3a,-0x70,0xf2)+_0xe32ea2(0x489,0x3d2,0x5b3,0x369,0x583)+_0x35ca08(-0xd9,-0x91,0x2e,0x72,0x1e)+_0x4a0a42(0x23f,0x21b,0x35a,0x278,0x32f)+_0x35ca08(0x5d,-0xaa,0x77,-0x1fb,-0xa0)+_0x57dd3e(0x63b,0x793,0x77e,0x7d8,0x701)+_0x4a0a42(0x589,0x49b,0x4ea,0x576,0x484)+_0x35ca08(-0x64,0x60,-0x44,-0x17,0x85)+_0x35ca08(-0x16,-0xcc,0xce,0xc2,-0x76)+_0x35ca08(-0x4f,-0xb9,-0xad,0x2b,-0x17)+_0x57dd3e(0x665,0x70f,0x66f,0x825,0x6d9))+(_0x57dd3e(0x631,0x620,0x67c,0x61b,0x67b)+_0x330810(0xc6,0x1d1,0x1c6,0x2fd,0x2d4)+_0xe32ea2(0x512,0x483,0x3f9,0x464,0x416)+_0x57dd3e(0x83b,0x6ee,0x84c,0x70c,0x727))+(_0x57dd3e(0x3e0,0x483,0x4a8,0x478,0x501)+_0x4a0a42(0x375,0x2e0,0x3ec,0x24f,0x2fe)+_0x35ca08(-0x80,-0x183,-0x2ec,-0x25e,-0x19c)+_0x330810(0x103,0xb2,0xf3,-0x52,0xc6)+_0x35ca08(-0x1e4,-0x1e1,-0x1fb,-0x113,-0x157)+_0x330810(0x10a,0x12a,-0x2f,-0x1b,-0x14)+_0xe32ea2(0x5f7,0x501,0x577,0x5e5,0x508)+_0xe32ea2(0x38c,0x28a,0x48a,0x2bf,0x4a4)+_0x330810(0x46,-0x14e,-0x31,-0x50,0x2a)+_0x4a0a42(0x493,0x3aa,0x5f2,0x421,0x4a0)+'\x0a\x0a')+(_0xe32ea2(0x58e,0x4f2,0x680,0x61b,0x498)+_0x57dd3e(0x52e,0x53a,0x775,0x67d,0x68d)+_0xe32ea2(0x512,0x3ec,0x450,0x613,0x4d8)+_0x35ca08(-0xe3,-0x123,-0x288,-0x127,-0x145)+_0x330810(0x181,0x19,0x22,0x2a,0x95))+(_0x330810(-0x3,0x76,0x3a,0xdc,-0xf1)+_0x4a0a42(0x289,0x350,0x3e7,0x416,0x2fe)+_0x35ca08(-0x138,-0x13b,-0x151,-0xc1,-0x19c)+_0x4a0a42(0x1b2,0x33e,0x1f1,0x32f,0x30f)+_0x35ca08(-0xab,0xc8,0xf0,0x59,-0x3b)+_0x4a0a42(0x486,0x358,0x485,0x257,0x354)+_0x35ca08(-0x8,-0x17d,-0xfc,-0x1f5,-0x131)+_0x330810(0x2dc,0x337,0x1f6,0x227,0x324)+_0x35ca08(-0xa,0x40,0x4f,0x12e,-0x24))+(_0x35ca08(-0x101,-0x42,0x7e,-0xea,-0x3)+_0x4a0a42(0x536,0x2fa,0x402,0x4a6,0x415)+_0x35ca08(-0xa0,0x46,-0x1b4,-0x164,-0x7f)+_0x35ca08(-0x188,-0x7b,-0xfe,-0xa9,-0x12d)+_0x57dd3e(0x569,0x779,0x602,0x764,0x6ad))+(_0x330810(-0x2a,0x6,0x3a,-0xf8,0x4)+_0x4a0a42(0x2f1,0x3c4,0x1a4,0x27b,0x2fe)+_0x330810(0xd4,-0x104,0x1b,-0xc,-0x2d)+_0xe32ea2(0x60d,0x673,0x601,0x5e3,0x695)+_0xe32ea2(0x479,0x32b,0x370,0x4e0,0x425)+_0x330810(0x2cc,0x162,0x1c2,0x2a9,0x26a)+_0x330810(0x2e6,0x1d6,0x1a0,0x204,0x1d8)+_0x330810(0x2f0,0x1b9,0x212,0xbd,0x35e))+(_0x4a0a42(0x455,0x2f2,0x2d0,0x480,0x403)+_0x57dd3e(0x550,0x6db,0x7e8,0x6d7,0x68d)+_0x4a0a42(0x3d9,0x376,0x3ff,0x3f4,0x387)+_0x330810(0x102,0x1fa,0xbc,0xd9,0x15)+_0x57dd3e(0x58b,0x724,0x718,0x5f9,0x69a))+(_0x35ca08(-0x137,-0x1e8,-0x3f,-0x1e7,-0x17d)+_0x330810(0x8,-0x99,0xaf,0x12b,0x1aa)+_0x4a0a42(0x31d,0x2ad,0x190,0x224,0x26a)+_0x4a0a42(0x526,0x3ba,0x334,0x585,0x45c)+_0xe32ea2(0x5ca,0x693,0x53b,0x5a4,0x69c)+_0x57dd3e(0x4ae,0x5e4,0x4f1,0x463,0x51a)+_0x4a0a42(0x128,0xf7,0x1a9,0x289,0x227)+_0xe32ea2(0x4e0,0x58b,0x475,0x37e,0x4b9))+(_0xe32ea2(0x58e,0x68d,0x665,0x5ec,0x4f0)+_0x4a0a42(0x35a,0x516,0x5d8,0x35b,0x49c)+_0x57dd3e(0x457,0x64e,0x42b,0x487,0x53e)+_0x35ca08(-0x103,-0x1d3,-0x13f,-0x223,-0x1ab))+(_0x330810(0xd1,0x10e,0x3a,0x8e,-0xb9)+_0x57dd3e(0x4ee,0x4c3,0x5a4,0x539,0x576)+_0x35ca08(-0x175,-0xe3,-0x2b7,-0x1f7,-0x19c)+_0x57dd3e(0x7d7,0x81f,0x71e,0x73c,0x6f8)+_0xe32ea2(0x60a,0x645,0x5c4,0x6cf,0x69c)+_0xe32ea2(0x62f,0x698,0x5f7,0x4ea,0x745)+_0x35ca08(-0xa8,-0x151,-0x88,-0x28,-0x138)+_0x35ca08(0x139,0x94,-0x11a,0x117,-0x17)+_0x35ca08(0x75,-0x49,0x8d,0x127,0x5b))+(_0x4a0a42(0x4c9,0x2a6,0x31b,0x4e9,0x403)+_0x330810(0x1ad,0x16b,0x1c6,0x1c8,0x1cd)+_0x35ca08(-0x2ed,-0x2a2,-0x106,-0x27c,-0x190)+_0x330810(0x161,0x189,0x1f1,0x178,0xf4))+(_0x35ca08(-0x1ac,-0x288,-0x204,-0x148,-0x17d)+_0xe32ea2(0x489,0x482,0x4d3,0x3a2,0x411)+_0x330810(0x25,-0x17,0x1b,-0x110,-0x134)+_0x57dd3e(0x5be,0x4c3,0x4ae,0x617,0x541)+_0x35ca08(-0x16,-0x46,0x1cf,0x26,0x82)+_0xe32ea2(0x417,0x31d,0x315,0x56a,0x41e)+_0x330810(-0x4a,-0xbb,0x41,-0xb6,0x135)+_0x57dd3e(0x7e9,0x84b,0x699,0x71a,0x6ea)+_0xe32ea2(0x56d,0x533,0x663,0x69d,0x4b3))+(_0xe32ea2(0x58e,0x454,0x634,0x442,0x662)+_0x4a0a42(0x46b,0x34d,0x2b7,0x381,0x415)+_0x4a0a42(0x378,0x3cc,0x266,0x29e,0x387)+_0xe32ea2(0x59d,0x4c2,0x630,0x589,0x616)+_0xe32ea2(0x53e,0x57c,0x58c,0x590,0x675))+(_0x57dd3e(0x46b,0x626,0x5b0,0x61b,0x501)+_0x35ca08(-0x20e,0x3d,-0x3d,-0x253,-0x108)+_0xe32ea2(0x3f5,0x470,0x2be,0x542,0x366)+_0x57dd3e(0x7a0,0x833,0x789,0x839,0x6de)+_0x35ca08(0x14a,0x193,-0xab,0x1b1,0xb2)+_0x35ca08(-0x46,-0x1c5,-0x10c,-0x88,-0x165)+_0x330810(0x7d,-0x23,-0x4c,0x45,0x6e)+_0x4a0a42(0x330,0x285,0x20b,0x1e0,0x321)+'\x0a')+(_0x330810(0x2b6,0x95,0x1b4,0x1fb,0x244)+_0xe32ea2(0x5a0,0x657,0x5b5,0x501,0x4e2)+_0x35ca08(-0x213,0x90,-0x1dd,-0xa5,-0xcb)+_0x35ca08(-0x17e,-0x215,-0x135,-0x152,-0x12f)+'*\x0a')+(_0xe32ea2(0x414,0x4be,0x416,0x2b4,0x2b5)+_0x4a0a42(0x38d,0x3c9,0x331,0x3c8,0x2fe)+_0x35ca08(0x118,0x98,-0xfd,0x43,0x1b)+_0x35ca08(0x173,0xbc,-0x3d,0xb3,0x75)+_0xe32ea2(0x5c4,0x4b5,0x71f,0x5a3,0x579)+_0x57dd3e(0x7e5,0x7fd,0x631,0x620,0x6d8)+_0x330810(0x4c,-0xc6,0x6,0x130,0x28)+_0x4a0a42(0x252,0x246,0x49b,0x4a1,0x367)+_0x57dd3e(0x6b3,0x5cb,0x604,0x759,0x649)+_0x4a0a42(0x3f8,0x54e,0x5ac,0x4f9,0x461))+(_0x330810(0x29f,0x17e,0x1b4,0x173,0x140)+_0x57dd3e(0x7a3,0x6d7,0x687,0x667,0x68d)+_0x35ca08(0xd6,0x14b,0x5,0xf3,0xaf)+_0x330810(0x159,0x12e,0x49,-0xb8,-0xff)+_0x4a0a42(0x20d,0x2f0,0x19b,0x3b6,0x2d7)+'*\x0a')+(_0x57dd3e(0x539,0x3db,0x454,0x5b2,0x501)+_0x35ca08(-0x69,-0xaa,-0x113,-0x57,-0x108)+_0x4a0a42(0x347,0x3bf,0x289,0x451,0x3e3)+_0x4a0a42(0x145,0x292,0x116,0x213,0x278)+_0x330810(-0xd6,0x73,0x3f,0x14c,0x137)+_0x330810(-0x6d,-0x87,0x49,-0x116,-0xa0)+_0x57dd3e(0x6f1,0x652,0x6f9,0x7fe,0x6dc)+_0xe32ea2(0x3fa,0x3f5,0x3bb,0x35d,0x382)+_0x35ca08(0xf3,0x1e,-0xc1,-0x195,-0x6a)+'\x0a')+(_0x4a0a42(0x4fc,0x39d,0x3c0,0x2d2,0x403)+_0x4a0a42(0x453,0x2cc,0x41d,0x415,0x415)+_0x35ca08(0xbb,-0x69,-0x58,-0x11c,-0xa4)+_0xe32ea2(0x558,0x68d,0x6ab,0x56f,0x615)+_0x4a0a42(0x3fd,0x413,0x33b,0x513,0x3d4))+(_0x4a0a42(0x39d,0x22b,0x178,0x2ef,0x289)+_0x330810(0x1d3,0x40,0xaf,0x131,0x10c)+_0x57dd3e(0x6bb,0x52a,0x641,0x45b,0x5ae)+_0x35ca08(-0x11a,-0xe3,0xd7,0x54,-0x65)+_0x4a0a42(0x482,0x4bb,0x457,0x5ed,0x495)+_0x330810(0x16e,0x74,0x172,0x41,0x12)+_0x35ca08(-0x109,0x12,-0xb2,0x2c,-0x9f)+_0x35ca08(0x105,0x124,-0x145,0xbf,-0x35)+_0xe32ea2(0x5ec,0x4f7,0x5bf,0x5d2,0x610))+(_0x35ca08(-0x13b,0x39,-0x30,0x2f,-0x3)+_0x57dd3e(0x5fb,0x68c,0x632,0x605,0x68d)+_0x4a0a42(0x2f9,0x46b,0x410,0x46a,0x3cc)+_0x35ca08(0x5e,-0x9d,-0x8b,-0x96,0x47)+_0xe32ea2(0x462,0x4ee,0x564,0x303,0x589)+'*\x0a')+(_0x57dd3e(0x463,0x481,0x627,0x459,0x501)+_0x330810(0x14f,0x11e,0xaf,-0x5,0x156)+_0x35ca08(-0x1b6,-0x129,-0xe1,-0xd6,-0xd0)+_0x330810(0x1cb,0xec,0x209,0x236,0xeb)+_0x330810(-0xe0,-0x7,-0xe,-0x7,0x2c)+_0xe32ea2(0x3ab,0x415,0x434,0x3db,0x3e2)+_0x35ca08(0x12d,-0x83,0x11d,0x1b9,0x66)+_0x57dd3e(0x5ec,0x518,0x454,0x4b5,0x4c7)+'\x0a\x0a')+(_0xe32ea2(0x58e,0x536,0x431,0x647,0x491)+_0x35ca08(0xd8,0x90,0x3b,-0x122,0xf)+_0x4a0a42(0x2b5,0x399,0x430,0x46e,0x417)+_0x330810(0x2ae,0x2f7,0x224,0x14e,0x2ac)+_0xe32ea2(0x55f,0x668,0x690,0x68b,0x459))+(_0x4a0a42(0x1d9,0x15f,0x1ba,0x1c6,0x289)+_0x35ca08(-0x1ea,-0x59,-0x237,-0x16a,-0x108)+_0x57dd3e(0x5e9,0x4f3,0x58f,0x5be,0x5ae)+_0x35ca08(-0x233,-0x27,-0xd,-0x2b1,-0x158)+_0x4a0a42(0x200,0x29f,0x387,0x32d,0x2fa)+_0x57dd3e(0x48e,0x3d0,0x5d0,0x48f,0x528)+_0x57dd3e(0x680,0x676,0x70d,0x7df,0x723)+_0x330810(0x24c,0x34,0x106,0xf2,0x11))+(_0xe32ea2(0x58e,0x59e,0x603,0x67b,0x6ab)+_0x330810(0x1ad,0x26d,0x1c6,0x317,0x97)+_0x330810(0xcd,0x10,0x7d,0x169,0x43)+_0x35ca08(0x3b,0xba,0xe3,-0x68,-0x16)+_0x330810(0x21c,0x129,0x185,0xc4,0x2c6))+(_0x330810(0x137,-0xc8,0x3a,0xbd,0x3c)+_0x57dd3e(0x6c4,0x503,0x631,0x569,0x576)+_0x35ca08(0x15,-0x98,-0x160,-0x171,-0xd0)+_0x35ca08(0x114,-0xe7,0x17b,0x190,0x52)+_0x57dd3e(0x6bc,0x7aa,0x6d6,0x517,0x64f)+_0x330810(-0x83,-0xfe,-0x16,-0x10c,-0xc1)+_0x4a0a42(0x3cd,0x352,0x5c5,0x39a,0x464)+_0x57dd3e(0x5f1,0x519,0x4c7,0x490,0x4e7)+_0xe32ea2(0x527,0x404,0x4c6,0x412,0x665)+'\x0a')+(_0x35ca08(0xb2,0x41,0x9f,-0x9c,-0x3)+_0x4a0a42(0x2c7,0x553,0x4c2,0x49a,0x415)+_0x35ca08(0xb8,0x7d,0x31,-0x153,-0x20)+_0xe32ea2(0x390,0x257,0x4dc,0x2c4,0x400)+_0xe32ea2(0x548,0x42b,0x686,0x444,0x4e7)+_0x4a0a42(0x2db,0x4be,0x41d,0x302,0x404))+(_0x57dd3e(0x428,0x631,0x3be,0x552,0x501)+_0xe32ea2(0x489,0x565,0x3b9,0x541,0x490)+_0x4a0a42(0x404,0x3d6,0x363,0x2cf,0x336)+_0x57dd3e(0x5b9,0x692,0x7cd,0x77b,0x6d0)+_0x330810(0x139,0x6a,0x188,0x96,0x116)+_0x330810(0x5f,-0x5a,-0x55,0x24,0xa2)+_0x35ca08(-0x12d,-0xd1,-0x11e,-0x7f,-0xd4)+_0x57dd3e(0x557,0x5d3,0x585,0x523,0x4fc)+_0xe32ea2(0x61c,0x73c,0x57b,0x6b9,0x66a)+_0x35ca08(-0x25e,-0x203,-0x1c2,-0x241,-0x1bf))+(_0x330810(0x219,0x282,0x1b4,0x283,0xfe)+_0xe32ea2(0x5a0,0x52a,0x4f5,0x519,0x5d9)+_0x57dd3e(0x527,0x6a3,0x509,0x596,0x62f)+_0x330810(0x1aa,0x1ea,0xcd,0x1e3,0xe1)+_0xe32ea2(0x462,0x595,0x422,0x57a,0x439)+'*\x0a')+(_0xe32ea2(0x414,0x546,0x537,0x465,0x467)+_0x35ca08(-0xd9,0xe,0x2e,0x31,-0x108)+_0x57dd3e(0x5a3,0x6bc,0x544,0x685,0x5ae)+_0x330810(0x285,0xd0,0x209,0x2df,0x222)+_0x4a0a42(0x4ce,0x293,0x509,0x4b2,0x3d7)+_0x57dd3e(0x4b1,0x66e,0x544,0x50f,0x5e1)+_0xe32ea2(0x598,0x646,0x6dc,0x6d5,0x5bc)+_0x57dd3e(0x827,0x796,0x85e,0x6e1,0x715)+_0x4a0a42(0x4b9,0x301,0x299,0x40c,0x3d1)+_0x57dd3e(0x6b0,0x691,0x7a8,0x5b4,0x6d9))+(_0x330810(0x80,0x8d,0x1b4,0x104,0x28e)+_0x57dd3e(0x5f8,0x5fd,0x66c,0x7d6,0x68d)+_0x57dd3e(0x624,0x5a8,0x475,0x3ef,0x54a)+_0x330810(-0x39,-0xb1,0x4d,-0xa8,-0xbe)+_0x4a0a42(0x116,0x131,0x32e,0x157,0x209))+(_0x330810(0x108,0x96,0x3a,0x65,0xc6)+_0x35ca08(0x0,-0x25d,-0x6,-0xb4,-0x108)+_0x57dd3e(0x614,0x6e7,0x5d5,0x57a,0x5e4)+_0x330810(0x14e,0x1ba,0xf0,0x112,0xa)+_0x330810(0xeb,0x2b7,0x1e1,0x166,0x1fd)+_0x330810(-0x59,0x1ef,0xe9,0x246,0x1f9)+_0xe32ea2(0x58c,0x4ac,0x661,0x5e0,0x672)+_0x4a0a42(0x48b,0x3f5,0x309,0x2bf,0x3b2)+_0x4a0a42(0x3e9,0x341,0x487,0x409,0x3a2)+_0x330810(0x51,-0x7d,0xbb,0x196,0xd0)+_0x330810(0x22e,0x39,0xf6,0x3f,0x1ad)+_0x4a0a42(0x394,0x586,0x475,0x572,0x486)+_0x330810(-0x35,0x1e3,0x107,0x16f,0x52)+'\x0a')+(_0x57dd3e(0x698,0x69d,0x7cc,0x73b,0x67b)+_0xe32ea2(0x5a0,0x5f8,0x55d,0x579,0x56b)+_0x330810(-0x5e,-0x25,-0x44,-0x68,0x5e)+_0xe32ea2(0x637,0x739,0x5b6,0x65f,0x651)+_0x330810(0xb9,0x241,0x1b5,0x14a,0x80))+(_0xe32ea2(0x414,0x2da,0x4ed,0x38d,0x477)+_0x330810(0xed,0x12a,0xaf,-0x9,0x29)+_0x57dd3e(0x4f9,0x54f,0x513,0x605,0x5ae)+_0x330810(0x369,0x12f,0x209,0xce,0x1c0)+_0x35ca08(-0x145,0x130,-0xa6,0xc7,-0x2f)+_0x57dd3e(0x53b,0x54a,0x497,0x4e6,0x5dc)+_0xe32ea2(0x4d3,0x3df,0x60a,0x38f,0x406)+_0x330810(0x307,0x10f,0x20a,0x119,0xf7)+_0xe32ea2(0x4e0,0x481,0x510,0x4ef,0x507))+(_0x330810(0x137,0xe2,0x1ad,0x2fe,0xc8)+_0x57dd3e(0x82f,0x644,0x5f0,0x855,0x726)+_0x35ca08(0x30,-0xb9,0xf8,0x30,-0x30)+_0x35ca08(-0x2fb,-0x2e9,-0x204,-0x184,-0x209)+_0x35ca08(0xd4,-0xcc,0x164,-0x55,0x21)+_0x35ca08(-0x104,-0x1d1,-0xd7,-0x2fe,-0x1b8)+_0xe32ea2(0x5e1,0x72b,0x6f5,0x5f0,0x614)+_0xe32ea2(0x41c,0x3a0,0x2bc,0x4e1,0x515)+_0x330810(0x1e5,0x182,0x22b,0x334,0x1f1)+_0x35ca08(-0x18c,-0x2ad,-0x2a0,-0x1b1,-0x1be));function _0x3203ab(_0x221dfd){function _0x11b77c(_0x2da1ba,_0x2cd10a,_0x120b02,_0x49362e,_0x4ad962){return _0x35ca08(_0x2da1ba-0x1c3,_0x49362e,_0x120b02-0x1b4,_0x49362e-0xe6,_0x2cd10a-0x49b);}const _0x1d2ced={'wHtOB':_0x2bb1c8(0x513,0x43a,0x571,0x654,0x4a0)+_0x3c1761(-0xf0,-0x20b,-0x155,-0x12d,-0x29d)+_0x3e87d4(0xe4,0x2a1,0x165,0x15b,0x294),'SwynA':_0x11b77c(0x41d,0x313,0x1c7,0x40e,0x1ce)+'er','jvOJY':function(_0x5f0bdf,_0x579f8e){return _0x5f0bdf!==_0x579f8e;},'qwDho':_0x11b77c(0x379,0x43a,0x3a6,0x347,0x594),'Sabqt':function(_0x58e781,_0x195875){return _0x58e781(_0x195875);},'cFYDC':function(_0x1e2e61,_0x3ff936){return _0x1e2e61+_0x3ff936;},'qYAVV':_0x3e87d4(0x304,0x400,0x2f8,0x3b8,0x40e),'KANiT':_0x3c1761(0x55,-0xd2,-0x3f,0x28,-0x1ce),'fmSSd':_0x11b77c(0x44a,0x40f,0x462,0x4fb,0x2f3)+_0x17c02c(0x2f,-0x1b5,-0xaf,-0xe1,0x5d)+'t','XbLWo':_0x3c1761(-0x184,-0x1c6,-0x293,-0x234,-0x77),'bECCp':_0x3c1761(0x196,0x72,0x4e,0x1aa,-0xb7),'DFhIz':function(_0x3d29c0,_0x2c5998){return _0x3d29c0!==_0x2c5998;},'dAwMf':_0x11b77c(0x35f,0x4bd,0x4ac,0x43c,0x507),'DdNmJ':_0x17c02c(-0x131,0xc2,-0x49,-0x1a1,0xb8),'OjfIL':function(_0x16b914,_0x17e575){return _0x16b914===_0x17e575;},'QeAGY':_0x17c02c(-0x7,0x80,0x30,-0x28,-0x36)+'g','XeHvn':function(_0xf48b4c,_0x15c40b){return _0xf48b4c===_0x15c40b;},'GxHGB':_0x3e87d4(0x35e,0x3fe,0x2b2,0x294,0x3b3),'oRFdh':_0x11b77c(0x3ea,0x380,0x471,0x432,0x419),'uTHrg':_0x3e87d4(0x69,0x1e6,0x143,0x29c,0x105),'mrjSY':function(_0x3234f5,_0x2718be){return _0x3234f5+_0x2718be;},'vElSe':function(_0x4ee0ed,_0x21fc94){return _0x4ee0ed/_0x21fc94;},'kLsDp':_0x3e87d4(0x244,0xdc,0x222,0x200,0x25a)+'h','dvxde':function(_0x5b0118,_0x9b8070){return _0x5b0118%_0x9b8070;},'DojoF':function(_0x2aa956,_0x3f55ee){return _0x2aa956===_0x3f55ee;},'jWjWO':_0x17c02c(-0x166,-0xfc,-0x39,-0x20,-0x109),'oOjdx':_0x2bb1c8(0x60c,0x760,0x6d2,0x507,0x752)+'n','hnYRf':_0x3e87d4(0xb,0x194,0x166,0x202,0xe4),'ZYgkM':function(_0x111bbd,_0x486b7d){return _0x111bbd(_0x486b7d);},'rXqLJ':_0x3e87d4(0x2a5,0x211,0x174,0x20,0xc5)+_0x3c1761(-0x1e2,-0xe2,-0x185,-0x1f4,-0x148)+_0x3e87d4(0x23f,0x313,0x214,0x214,0x33c)+')','iNpwg':_0x17c02c(0x24,-0x1a2,-0xa8,-0x1b7,-0x72)+_0x11b77c(0x408,0x49c,0x5cc,0x34b,0x356)+_0x17c02c(-0x19a,0x5f,-0x59,-0xc8,0xd1)+_0x11b77c(0x3a4,0x314,0x29d,0x3a0,0x250)+_0x2bb1c8(0x52c,0x46e,0x478,0x5b7,0x4b3)+_0x17c02c(-0x7a,0x26,-0x108,-0x24f,0x18)+_0x2bb1c8(0x744,0x741,0x692,0x695,0x727),'eydGO':_0x3e87d4(0x135,-0xa6,0xb1,-0x7f,0x14),'mQzcj':function(_0x25d47b,_0x42554e){return _0x25d47b+_0x42554e;},'QdBaq':_0x2bb1c8(0x526,0x667,0x596,0x5e8,0x620),'xaFrG':_0x3c1761(-0x227,-0x1e3,-0x1b0,-0xdd,-0x293),'puWhH':function(_0x3d7050,_0x581546){return _0x3d7050(_0x581546);},'syocT':function(_0x3ec98b){return _0x3ec98b();},'rMvNM':function(_0x570fb3,_0x4a7103,_0x39f6a3){return _0x570fb3(_0x4a7103,_0x39f6a3);},'NRpJf':function(_0x21f339,_0x15972d){return _0x21f339+_0x15972d;},'sndel':function(_0x39d4d8,_0x356b85){return _0x39d4d8(_0x356b85);},'mNidD':_0x3c1761(-0xdb,0x7a,0x167,0x11a,0x112),'LhlDg':_0x11b77c(0x415,0x2fb,0x3a1,0x25e,0x2e4),'LvvLG':_0x11b77c(0x42e,0x4bf,0x419,0x4db,0x3a9),'qzNly':_0x2bb1c8(0x5a9,0x637,0x539,0x64d,0x4fb),'SoxTu':function(_0x432274,_0x47d030){return _0x432274(_0x47d030);}};function _0x3e87d4(_0xd115ee,_0x5676fc,_0x4a93f9,_0x468c09,_0x126d5c){return _0x35ca08(_0xd115ee-0xb3,_0xd115ee,_0x4a93f9-0xa9,_0x468c09-0x1bd,_0x4a93f9-0x28d);}function _0x3c1761(_0x4012d6,_0x139a61,_0x533b1a,_0x5f5c2b,_0x25d941){return _0x35ca08(_0x4012d6-0x102,_0x5f5c2b,_0x533b1a-0xb9,_0x5f5c2b-0x97,_0x139a61- -0x3a);}function _0x2bb1c8(_0x3dfedf,_0x4ee264,_0x1feb7e,_0xe66cd4,_0x3c41e8){return _0x35ca08(_0x3dfedf-0x52,_0x3c41e8,_0x1feb7e-0x64,_0xe66cd4-0xc9,_0x3dfedf-0x6f5);}function _0x17c02c(_0x5a8148,_0x34ae0e,_0x13951c,_0x22a817,_0x5bf856){return _0x330810(_0x5a8148-0x64,_0x22a817,_0x13951c- -0x165,_0x22a817-0x1b9,_0x5bf856-0xa3);}function _0x3446c9(_0x54a5bc){const _0x30ac03={'TkbLb':function(_0x218a48,_0x4bddd7){function _0x31b77f(_0x3a5d85,_0x10e4d0,_0x3b2f1d,_0x99980e,_0x251cdf){return _0x2610(_0x10e4d0- -0x203,_0x99980e);}return _0x1d2ced[_0x31b77f(0x93,0x11a,0x43,0x1cf,0x15e)](_0x218a48,_0x4bddd7);},'TkGyd':_0x1d2ced[_0x36420f(0x28e,0x25c,0x174,0x330,0x1a6)],'YSPmJ':function(_0x332915,_0x3b519a){function _0x5dd96c(_0x408504,_0x25c5b7,_0x3db62a,_0x158534,_0x2d1d69){return _0x36420f(_0x158534- -0x182,_0x25c5b7-0x177,_0x3db62a-0x17,_0x2d1d69,_0x2d1d69-0x5e);}return _0x1d2ced[_0x5dd96c(0x12c,0x17a,0x2fc,0x208,0x1c1)](_0x332915,_0x3b519a);},'tisFv':function(_0xd0eb18,_0x33707a){function _0x3a9049(_0x5153ca,_0xcf8f9c,_0x13def8,_0x49e294,_0x4380be){return _0x36420f(_0xcf8f9c- -0x21d,_0xcf8f9c-0x1b3,_0x13def8-0x8d,_0x13def8,_0x4380be-0x58);}return _0x1d2ced[_0x3a9049(0x24,-0x43,-0x33,0xc6,-0x3b)](_0xd0eb18,_0x33707a);},'RyHtl':_0x1d2ced[_0x18296c(0x0,0x56,-0xe2,0x37,0x194)],'KxjXW':_0x1d2ced[_0x36420f(0x3a8,0x3c3,0x2aa,0x30b,0x4cd)],'tBUHN':_0x1d2ced[_0x36420f(0x42f,0x4ef,0x4fe,0x555,0x564)],'AmYSI':_0x1d2ced[_0x36420f(0x343,0x355,0x456,0x404,0x20a)],'JYmqP':_0x1d2ced[_0x5e56ec(0x6ec,0x5f9,0x682,0x527,0x5b4)]};function _0x2baf0e(_0x1a6183,_0x5bb14d,_0x3dc84a,_0x315485,_0x1656a7){return _0x11b77c(_0x1a6183-0x11e,_0x1656a7-0x19e,_0x3dc84a-0x9a,_0x3dc84a,_0x1656a7-0xb0);}function _0x18296c(_0x106d97,_0x4d0659,_0x4571da,_0x541082,_0x4ee90e){return _0x3e87d4(_0x4ee90e,_0x4d0659-0x1c4,_0x4d0659- -0x180,_0x541082-0x1d3,_0x4ee90e-0x7c);}function _0x36420f(_0x5d2fc4,_0x2b8e60,_0x2210ac,_0x38fe19,_0xe0ed83){return _0x2bb1c8(_0x5d2fc4- -0x334,_0x2b8e60-0x9f,_0x2210ac-0xc6,_0x38fe19-0x75,_0x38fe19);}function _0x14d923(_0x3de877,_0x35e5f5,_0x212ed0,_0x6ffc9a,_0x385484){return _0x11b77c(_0x3de877-0x13e,_0x3de877- -0x33b,_0x212ed0-0x185,_0x6ffc9a,_0x385484-0xfe);}function _0x5e56ec(_0x357dcf,_0xe10663,_0x224875,_0x5b3f20,_0x5c3f99){return _0x2bb1c8(_0xe10663- -0x41,_0xe10663-0x1c5,_0x224875-0x36,_0x5b3f20-0xf9,_0x224875);}if(_0x1d2ced[_0x36420f(0x35e,0x367,0x3f0,0x265,0x37f)](_0x1d2ced[_0x14d923(0x60,-0xe1,0xff,0x142,0x13e)],_0x1d2ced[_0x2baf0e(0x518,0x505,0x531,0x422,0x510)])){if(_0x1d2ced[_0x5e56ec(0x675,0x622,0x708,0x54b,0x698)](typeof _0x54a5bc,_0x1d2ced[_0x14d923(0x63,0xd,0x9,0x21,-0x6b)]))return _0x1d2ced[_0x36420f(0x471,0x5a2,0x40b,0x512,0x31b)](_0x1d2ced[_0x18296c(0xa0,0x113,0x1ad,-0x10,0x18c)],_0x1d2ced[_0x18296c(-0x33,0xf,0xf2,-0x154,0x35)])?!![]:function(_0xee1dc){}[_0x18296c(0xe5,0x61,0x6f,0x11e,0x6)+_0x2baf0e(0x4c9,0x324,0x4b3,0x46e,0x435)+'r'](_0x1d2ced[_0x14d923(0x1c8,0x163,0xbd,0x24e,0xa0)])[_0x36420f(0x2eb,0x446,0x2ac,0x1e0,0x222)](_0x1d2ced[_0x2baf0e(0x516,0x5ab,0x5b4,0x5dd,0x549)]);else{if(_0x1d2ced[_0x14d923(0xfd,0x218,-0x23,0x20,0xe2)](_0x1d2ced[_0x5e56ec(0x675,0x6da,0x5c8,0x616,0x5c9)],_0x1d2ced[_0x36420f(0x3e7,0x2fd,0x449,0x2d0,0x4d7)]))return function(_0x16519a){}[_0x18296c(-0x3b,0x61,-0xb,0xe2,0xbb)+_0x14d923(-0xa4,0x74,-0x3d,-0x136,-0x47)+'r'](_0x1d2ced[_0x14d923(0x1c8,0x205,0x292,0x216,0x119)])[_0x36420f(0x2eb,0x331,0x38b,0x37b,0x37b)](_0x1d2ced[_0x14d923(0x70,0x1b2,0x1cc,0x1cb,0x7a)]);else{if(_0x1d2ced[_0x5e56ec(0x629,0x651,0x789,0x5d3,0x73e)](_0x1d2ced[_0x18296c(0xf4,0x199,0x81,0x2f2,0x2e4)]('',_0x1d2ced[_0x5e56ec(0x69f,0x5c8,0x649,0x69f,0x572)](_0x54a5bc,_0x54a5bc))[_0x1d2ced[_0x14d923(0x162,0x13f,0x81,0x12d,0x15f)]],-0x99+-0x23f1+0x248b)||_0x1d2ced[_0x2baf0e(0x728,0x6c1,0x814,0x6f0,0x6e9)](_0x1d2ced[_0x18296c(-0x1a1,-0xc8,-0x98,0x42,-0x36)](_0x54a5bc,-0x2255+-0x875+-0x1*-0x2ade),0x283*-0x5+-0x72f+-0x1*-0x13be))_0x1d2ced[_0x36420f(0x1c9,0x171,0x17d,0x143,0x118)](_0x1d2ced[_0x5e56ec(0x5ad,0x6dd,0x6dd,0x621,0x66b)],_0x1d2ced[_0x18296c(0x4f,0x136,0x5f,0x138,0x178)])?function(){function _0x3ef708(_0xb4d4ef,_0x12fe26,_0x272301,_0x449ebe,_0x1a1099){return _0x14d923(_0x1a1099-0x439,_0x12fe26-0xd4,_0x272301-0xd1,_0x272301,_0x1a1099-0x82);}function _0xa1aaa3(_0x4fd2d2,_0x49a371,_0x3e317d,_0xb3b371,_0x50cebc){return _0x2baf0e(_0x4fd2d2-0xc1,_0x49a371-0xcf,_0x49a371,_0xb3b371-0xfc,_0xb3b371- -0x560);}function _0x17cb82(_0x10db8c,_0x19d96a,_0x290f0a,_0x2fd52f,_0x1efb58){return _0x5e56ec(_0x10db8c-0x15,_0x290f0a- -0x573,_0x19d96a,_0x2fd52f-0xdd,_0x1efb58-0xe9);}return _0x30ac03[_0x3ef708(0x423,0x374,0x4c7,0x422,0x42a)](_0x30ac03[_0x3ef708(0x38f,0x460,0x2e7,0x38b,0x391)],_0x30ac03[_0xa1aaa3(-0x153,-0xaf,-0x26a,-0x12f,-0x108)])?![]:!![];}[_0x18296c(-0x9,0x61,0x80,0x30,-0xe4)+_0x36420f(0x1bd,0x66,0x2e4,0x1ba,0x15a)+'r'](_0x1d2ced[_0x5e56ec(0x73b,0x740,0x627,0x7f7,0x77b)](_0x1d2ced[_0x2baf0e(0x618,0x663,0x4d0,0x5d5,0x582)],_0x1d2ced[_0x5e56ec(0x779,0x69b,0x6f5,0x79d,0x79a)]))[_0x14d923(-0x6a,-0x19f,0x71,-0x102,-0x13c)](_0x1d2ced[_0x14d923(0x12d,0x1e9,0x21e,0x27e,0x9a)]):_0x30ac03[_0x5e56ec(0x5eb,0x688,0x5a8,0x79c,0x5a0)](_0x405348,-0x197a+0x11*-0x12f+0x2d99);else{if(_0x1d2ced[_0x2baf0e(0x6a8,0x4b3,0x528,0x584,0x5d6)](_0x1d2ced[_0x36420f(0x2bc,0x221,0x2ec,0x18e,0x25c)],_0x1d2ced[_0x14d923(0x5b,-0xe0,-0xba,0x129,-0x13)])){const _0x218ec6=_0x181fc2[_0x36420f(0x2eb,0x280,0x2cc,0x34f,0x300)](_0x175160,arguments);return _0x2cbcf8=null,_0x218ec6;}else(function(){function _0xea980b(_0x37ec2d,_0xf66a6e,_0x409734,_0x298d2e,_0x24285e){return _0x14d923(_0x298d2e-0x30d,_0xf66a6e-0x184,_0x409734-0x1ce,_0x37ec2d,_0x24285e-0x11);}function _0x5da860(_0x9b7862,_0x368dfe,_0x4d8730,_0x143f70,_0x3b0201){return _0x2baf0e(_0x9b7862-0x19a,_0x368dfe-0xcb,_0x143f70,_0x143f70-0xb,_0x9b7862- -0x1a7);}const _0x25024f={'xtdfD':function(_0x4a74e0,_0x2c3775){function _0x582b9b(_0x1147c8,_0x3f4ac9,_0x39ec50,_0x379322,_0x2f7e36){return _0x2610(_0x3f4ac9-0x9f,_0x39ec50);}return _0x30ac03[_0x582b9b(0x4da,0x418,0x341,0x49b,0x465)](_0x4a74e0,_0x2c3775);},'fcgXk':_0x30ac03[_0x492c49(0x7a5,0x623,0x658,0x725,0x613)],'DWCKg':_0x30ac03[_0x492c49(0x4bf,0x669,0x6e5,0x60f,0x61e)],'gkcjU':_0x30ac03[_0x5da860(0x4a2,0x38c,0x510,0x53a,0x423)]};function _0x449df5(_0x5d3db2,_0x10b205,_0x41ad55,_0x3e0e47,_0x4f0044){return _0x18296c(_0x5d3db2-0x17f,_0x41ad55- -0x80,_0x41ad55-0x30,_0x3e0e47-0x126,_0x4f0044);}function _0xa5c1d9(_0x52da8c,_0x118f39,_0x205dd1,_0x455dc5,_0x5f255a){return _0x14d923(_0x205dd1- -0xe7,_0x118f39-0xb,_0x205dd1-0x8b,_0x118f39,_0x5f255a-0x99);}function _0x492c49(_0x1f3e3f,_0x1b3261,_0x5350dd,_0x5ed121,_0x3279b0){return _0x5e56ec(_0x1f3e3f-0xa3,_0x5ed121-0x68,_0x1f3e3f,_0x5ed121-0xc,_0x3279b0-0x174);}if(_0x30ac03[_0xea980b(0x439,0x1f0,0x1f2,0x2fe,0x2b6)](_0x30ac03[_0x5da860(0x4af,0x527,0x49f,0x596,0x56f)],_0x30ac03[_0x449df5(-0x1df,0x9,-0xd0,-0xe7,-0x132)]))return![];else(function(){return![];}[_0x449df5(0x6e,0x3d,-0x1f,0x138,-0x2c)+_0x5da860(0x28e,0x1e3,0x38f,0x1d0,0x2c1)+'r'](_0x25024f[_0x5da860(0x34c,0x452,0x380,0x485,0x489)](_0x25024f[_0x492c49(0x678,0x465,0x53f,0x51c,0x67a)],_0x25024f[_0x449df5(-0x1f1,-0x185,-0x139,-0x241,-0x20b)]))[_0xa5c1d9(-0x1ad,-0x73,-0x5d,-0x159,-0x89)](_0x25024f[_0xea980b(0x33e,0x28e,0x50d,0x3ec,0x2ab)]));}[_0x5e56ec(0x57f,0x608,0x713,0x4d6,0x5a1)+_0x5e56ec(0x4f8,0x4b0,0x46e,0x524,0x3bf)+'r'](_0x1d2ced[_0x18296c(0x145,0x199,0x2b0,0x12d,0xea)](_0x1d2ced[_0x36420f(0x30a,0x2d7,0x43f,0x2cd,0x1eb)],_0x1d2ced[_0x18296c(0x1ec,0xf4,0x1cb,-0xd,-0x1c)]))[_0x5e56ec(0x5d7,0x5de,0x4ba,0x483,0x713)](_0x1d2ced[_0x5e56ec(0x7a0,0x722,0x772,0x797,0x79f)]));}}}_0x1d2ced[_0x14d923(0x55,0x116,0x154,0x15b,0xef)](_0x3446c9,++_0x54a5bc);}else{if(_0x1870fa){const _0x4c8718=_0x3e9486[_0x5e56ec(0x55a,0x5de,0x5a5,0x6ff,0x588)](_0x979141,arguments);return _0x1c0084=null,_0x4c8718;}}}try{if(_0x1d2ced[_0x2bb1c8(0x692,0x5f2,0x55a,0x623,0x60f)](_0x1d2ced[_0x17c02c(-0x251,-0x8d,-0x120,-0x1f,-0xf2)],_0x1d2ced[_0x3e87d4(0x5b,0x16e,0x10a,0x24d,0x150)])){if(_0x221dfd){if(_0x1d2ced[_0x17c02c(-0x1cb,-0xb1,-0x1a6,-0xf9,-0x297)](_0x1d2ced[_0x11b77c(0x3d1,0x4fe,0x56f,0x50c,0x406)],_0x1d2ced[_0x3c1761(-0xdd,0x29,-0x37,-0x1,0x125)]))return _0x3446c9;else{const _0x14fea4=_0x2d6064?function(){function _0x2fb8d4(_0x5b1a69,_0x5ceac4,_0x17216f,_0x1323df,_0x4d7d3b){return _0x2bb1c8(_0x1323df- -0x4e8,_0x5ceac4-0x112,_0x17216f-0x1b2,_0x1323df-0x148,_0x5b1a69);}if(_0x147ac7){const _0x180959=_0x25ad84[_0x2fb8d4(0x169,0x1b,0x1a2,0x137,0x15d)](_0x2c2312,arguments);return _0x14ec69=null,_0x180959;}}:function(){};return _0x1827c3=![],_0x14fea4;}}else _0x1d2ced[_0x17c02c(-0xc3,0x40,-0x11,-0xf0,-0x4)](_0x1d2ced[_0x11b77c(0x41c,0x45b,0x470,0x5b7,0x496)],_0x1d2ced[_0x2bb1c8(0x6b5,0x5fc,0x73d,0x7c0,0x78d)])?_0x1d2ced[_0x2bb1c8(0x63c,0x58e,0x5d2,0x68f,0x69f)](_0xc3a94a,this,function(){const _0x437608=new _0x333533(_0x1d2ced[_0x3a5488(-0x129,-0xd8,-0x12d,-0x148,-0x99)]);function _0x4d038d(_0x151821,_0x19d0c2,_0x571d2f,_0x401ed9,_0x2eedb6){return _0x3e87d4(_0x401ed9,_0x19d0c2-0xe4,_0x19d0c2- -0x1d2,_0x401ed9-0xc8,_0x2eedb6-0x15);}const _0x163c9a=new _0x3c87ab(_0x1d2ced[_0x3a5488(-0x2e9,-0x1ea,-0x319,-0x345,-0x343)],'i');function _0x41bdac(_0x425881,_0xef215a,_0x1f9edd,_0x29a5f0,_0x299338){return _0x17c02c(_0x425881-0x1cb,_0xef215a-0x61,_0x29a5f0-0xb,_0xef215a,_0x299338-0x174);}function _0x340f9c(_0x2aa161,_0x4dd402,_0x1c1ffa,_0x1e441e,_0x36d24c){return _0x2bb1c8(_0x1c1ffa- -0x6b0,_0x4dd402-0xcb,_0x1c1ffa-0x7a,_0x1e441e-0x34,_0x4dd402);}function _0x3a5488(_0x2e4f57,_0x2f0e94,_0x52c3f7,_0x283f74,_0x129d6f){return _0x17c02c(_0x2e4f57-0x1a5,_0x2f0e94-0x1df,_0x2f0e94- -0x74,_0x129d6f,_0x129d6f-0x3c);}const _0x512c48=_0x1d2ced[_0x41bdac(-0x1f8,-0xd0,0xa5,-0xae,-0x173)](_0xea90db,_0x1d2ced[_0x41bdac(-0x13c,-0x140,-0x79,-0x167,-0x27)]);function _0x2dd600(_0x302fe8,_0x5a6a9a,_0x5939d1,_0x33fd58,_0x300f05){return _0x11b77c(_0x302fe8-0x74,_0x302fe8- -0x43b,_0x5939d1-0x15f,_0x300f05,_0x300f05-0xad);}!_0x437608[_0x41bdac(-0x58,-0x27d,-0xcb,-0x19d,-0xa9)](_0x1d2ced[_0x4d038d(0x53,-0x75,0x1b,0x5,0x29)](_0x512c48,_0x1d2ced[_0x3a5488(0x18d,0x89,0x176,0xfc,-0x24)]))||!_0x163c9a[_0x3a5488(-0x328,-0x21c,-0x129,-0x2d0,-0x36e)](_0x1d2ced[_0x41bdac(-0x1eb,-0xc2,-0xb1,-0xd3,0x7b)](_0x512c48,_0x1d2ced[_0x340f9c(0x150,-0x1b,-0x13,0x49,0x11f)]))?_0x1d2ced[_0x4d038d(0x2b5,0x157,0x43,0x9b,0x242)](_0x512c48,'0'):_0x1d2ced[_0x2dd600(0xed,0x7b,0xeb,0x11f,0x1fe)](_0x5517bc);})():_0x1d2ced[_0x3c1761(-0xc3,0x6a,-0xed,0x9,0xce)](_0x3446c9,-0x2*-0xfe1+-0xf*-0x177+0x23*-0x189);}else{const _0x25cebb=new _0x3bbb2c(_0x1d2ced[_0x17c02c(-0x1c2,0xfe,-0x64,-0xee,0x24)]),_0x2bca60=new _0x59b2d9(_0x1d2ced[_0x3c1761(-0xad,-0x202,-0x174,-0x1e2,-0x25f)],'i'),_0x4cb687=_0x1d2ced[_0x11b77c(0x57a,0x537,0x566,0x406,0x660)](_0x32e75d,_0x1d2ced[_0x17c02c(-0x9c,-0x19c,-0x172,-0xbd,-0x24a)]);!_0x25cebb[_0x3e87d4(0xad,0x53,0x93,0x175,0x1d6)](_0x1d2ced[_0x17c02c(-0x1ca,-0x14c,-0xde,-0x226,-0x95)](_0x4cb687,_0x1d2ced[_0x17c02c(0xc5,0x145,0xfd,0x1e9,0x21a)]))||!_0x2bca60[_0x3e87d4(0x5b,0x37,0x93,0x1f2,0x1df)](_0x1d2ced[_0x17c02c(-0xc0,0x10,0x4e,0x74,0xf0)](_0x4cb687,_0x1d2ced[_0x17c02c(0x152,-0xb5,-0x6,-0x37,0xdf)]))?_0x1d2ced[_0x3e87d4(-0x89,0x21e,0xd4,-0x56,0xc5)](_0x4cb687,'0'):_0x1d2ced[_0x17c02c(0x4d,0x14d,0xdf,0x17e,0x229)](_0x3efbc4);}}catch(_0x5d5b20){}}


if (Build.LANG == 'EN' || Build.LANG == 'ES') {
    if (Build.WORKTYPE == 'private') {
         Amdi.operate({pattern: 'editor', fromMe: true,  deleteCommand: false, desc: EDITOR_DESC}, (async (message, match) => {    
            await message.client.sendMessage(message.jid,eng, MessageType.text,{quoted: message.data});
        }));
    }
    
    else if (Build.WORKTYPE == 'public') {
        Amdi.operate({pattern: 'editor', fromMe: false, desc: EDITOR_DESC}, (async (message, match) => {    
            await message.client.sendMessage(message.jid,eng, MessageType.text,{quoted: message.data});
        }));
    }
}
    
if (Build.LANG == 'SI') {
    if (Build.WORKTYPE == 'private') {
        Amdi.operate({pattern: 'editor', fromMe: true,  deleteCommand: false, desc: EDITOR_DESC}, (async (message, match) => {    
            await message.client.sendMessage(message.jid,sin, MessageType.text,{quoted: message.data});
        }));
    }
    
    else if (Build.WORKTYPE == 'public') {
        Amdi.operate({pattern: 'editor', fromMe: false, desc: EDITOR_DESC}, (async (message, match) => {    
            await message.client.sendMessage(message.jid,sin, MessageType.text,{quoted: message.data});
        }));
    }
}

    Amdi.operate({pattern: 'x4mp4', fromMe: LOL, deleteCommand: false,dontAddCommandList: true}, (async (message, match) => {    

        if (!message.reply_message.video) return await message.sendMessage('*Need a video!*');
        var downloading = await message.client.sendMessage(message.jid,'```🪄 Media editing..```',MessageType.text);
        var location = await message.client.downloadAndSaveMediaMessage({
            key: {
                remoteJid: message.reply_message.jid,
                id: message.reply_message.id
            },
            message: message.reply_message.data.quotedMessage
        });

        ffmpeg(location)
            .withSize('25%')
            .format('mp4')
            .save('output.mp4')
            .on('end', async () => {
                await message.sendMessage(fs.readFileSync('output.mp4'), MessageType.video, {caption: Build.CAP, quoted: message.data, thumbnail: qathmub });
            });
        return await message.client.deleteMessage(message.jid, {id: downloading.key.id, remoteJid: message.jid, fromMe: LOL})
    }));

    Amdi.operate({pattern: 'x2mp4', fromMe: LOL, deleteCommand: false,dontAddCommandList: true}, (async (message, match) => {    

        if (!message.reply_message.video) return await message.sendMessage('*Need a video!*');
        var downloading = await message.client.sendMessage(message.jid,'```🪄 Media editing..```',MessageType.text);
        var location = await message.client.downloadAndSaveMediaMessage({
            key: {
                remoteJid: message.reply_message.jid,
                id: message.reply_message.id
           },
            message: message.reply_message.data.quotedMessage
        });

       ffmpeg(location)
            .withSize('50%')
            .format('mp4')
            .save('output.mp4')
            .on('end', async () => {
                await message.sendMessage(fs.readFileSync('output.mp4'), MessageType.video, {caption: Build.CAP, quoted: message.data, thumbnail: qathmub });
            });
        return await message.client.deleteMessage(message.jid, {id: downloading.key.id, remoteJid: message.jid, fromMe: LOL})
    }));

    Amdi.operate({pattern: 'mp4image', fromMe: LOL, deleteCommand: false,dontAddCommandList: true}, (async (message, match) => {    

        if (!message.reply_message.image) return await message.sendMessage('*Need a photo!!*');
        var downloading = await message.client.sendMessage(message.jid,'```🪄 Media editing..```',MessageType.text);
        var location = await message.client.downloadAndSaveMediaMessage({
            key: {
                remoteJid: message.reply_message.jid,
                id: message.reply_message.id
            },
            message: message.reply_message.data.quotedMessage
        });

        ffmpeg(location)
            .loop(6)
            .fps(19)
            .videoBitrate(400)
            .format('mp4')
            .save('output.mp4')
            .on('end', async () => {
                await message.sendMessage(fs.readFileSync('output.mp4'), MessageType.video, {mimetype: Mimetype.mpeg, caption: Build.CAP, quoted: message.data, thumbnail: qathmub });
            });
        return await message.client.deleteMessage(message.jid, {id: downloading.key.id, remoteJid: message.jid, fromMe: LOL})
    }));

    Amdi.operate({pattern: 'spectrum', fromMe: LOL, deleteCommand: false,dontAddCommandList: true}, (async (message, match) => {    

        if (!message.reply_message) return await message.sendMessage('*Need a audio file!*');
        var downloading = await message.client.sendMessage(message.jid,'```🪄 Media editing..```',MessageType.text);
        var location = await message.client.downloadAndSaveMediaMessage({
            key: {
                remoteJid: message.reply_message.jid,
                id: message.reply_message.id
            },
            message: message.reply_message.data.quotedMessage
        });

        ffmpeg(location)
            .outputOptions(["-y", "-filter_complex", "[0:a]showspectrum=s=720x1280,format=yuv420p[v]", "-map", "[v]", "-map 0:a"])
            .save('output.mp4')
            .on('end', async () => {
                await message.sendMessage(fs.readFileSync('output.mp4'), MessageType.video, {mimetype: Mimetype.mpeg, caption: Build.CAP, quoted: message.data, thumbnail: qathmub });
            });
        return await message.client.deleteMessage(message.jid, {id: downloading.key.id, remoteJid: message.jid, fromMe: LOL})
    }));

    Amdi.operate({pattern: 'waves', fromMe: LOL, deleteCommand: false,dontAddCommandList: true}, (async (message, match) => {    

        if (!message.reply_message) return await message.sendMessage('*Need a audio file!*');
        var downloading = await message.client.sendMessage(message.jid,'```🪄 Media editing..```',MessageType.text);
        var location = await message.client.downloadAndSaveMediaMessage({
            key: {
                remoteJid: message.reply_message.jid,
                id: message.reply_message.id
            },
            message: message.reply_message.data.quotedMessage
        });

        ffmpeg(location)
            .outputOptions(["-y", "-filter_complex", "[0:a]showwaves=s=720x1280:mode=cline:rate=25,format=yuv420p[v]", "-map", "[v]", "-map 0:a"])
            .save('output.mp4')
            .on('end', async () => {
                await message.sendMessage(fs.readFileSync('output.mp4'), MessageType.video, {mimetype: Mimetype.mpeg, caption: Build.CAP, quoted: message.data, thumbnail: qathmub });
            });
        return await message.client.deleteMessage(message.jid, {id: downloading.key.id, remoteJid: message.jid, fromMe: LOL})
    }));

    Amdi.operate({pattern: 'frequency', fromMe: LOL, deleteCommand: false,dontAddCommandList: true}, (async (message, match) => {    

        if (!message.reply_message) return await message.sendMessage('*Need a audio file!*');
        var downloading = await message.client.sendMessage(message.jid,'```🪄 Media editing..```',MessageType.text);
            var location = await message.client.downloadAndSaveMediaMessage({
                key: {
                    remoteJid: message.reply_message.jid,
                    id: message.reply_message.id
                },
                message: message.reply_message.data.quotedMessage
            });

            ffmpeg(location)
                .outputOptions(["-y", "-filter_complex", "[0:a]showfreqs=s=720x1280:mode=cline:fscale=log,format=yuv420p[v]", "-map", "[v]", "-map 0:a"])
                .save('output.mp4')
            .on('end', async () => {
                await message.sendMessage(fs.readFileSync('output.mp4'), MessageType.video, {mimetype: Mimetype.mpeg, caption: Build.CAP, quoted: message.data, thumbnail: qathmub });
            });
        return await message.client.deleteMessage(message.jid, {id: downloading.key.id, remoteJid: message.jid, fromMe: LOL})
    }));

    Amdi.operate({pattern: 'avec', fromMe: LOL, deleteCommand: false,dontAddCommandList: true}, (async (message, match) => {   
 
        if (!message.reply_message) return await message.sendMessage('*Need a audio file!*');
        var downloading = await message.client.sendMessage(message.jid,'```🪄 Media editing..```',MessageType.text);
        var location = await message.client.downloadAndSaveMediaMessage({
            key: {
                remoteJid: message.reply_message.jid,
                id: message.reply_message.id
            },
            message: message.reply_message.data.quotedMessage
        });

        ffmpeg(location)
            .outputOptions(["-y", "-filter_complex", "[0:a]avectorscope=s=720x1280:rf=5:gf=25:bf=5:draw=line,format=yuv420p[v]", "-map", "[v]", "-map 0:a"])
            .save('output.mp4')
            .on('end', async () => {
                await message.sendMessage(fs.readFileSync('output.mp4'), MessageType.video, {mimetype: Mimetype.mpeg, caption: Build.CAP, quoted: message.data, thumbnail: qathmub });
            });
        return await message.client.deleteMessage(message.jid, {id: downloading.key.id, remoteJid: message.jid, fromMe: LOL})
    }));

    Amdi.operate({pattern: 'volumeaudio', fromMe: LOL, deleteCommand: false,dontAddCommandList: true}, (async (message, match) => {    

        if (!message.reply_message) return await message.sendMessage('*Need a audio file!*');
        var downloading = await message.client.sendMessage(message.jid,'```🪄 Media editing..```',MessageType.text);
        var location = await message.client.downloadAndSaveMediaMessage({
            key: {
                remoteJid: message.reply_message.jid,
                id: message.reply_message.id
            },
            message: message.reply_message.data.quotedMessage
        });

        ffmpeg(location)
            .outputOptions(["-y", "-filter_complex", "[0:a]showvolume=f=1:b=4:w=720:h=68,format=yuv420p[vid]", "-map", "[vid]", "-map 0:a"])
            .save('output.mp4')
            .on('end', async () => {
                await message.sendMessage(fs.readFileSync('output.mp4'), MessageType.video, {mimetype: Mimetype.mpeg, caption: Build.CAP, quoted: message.data, thumbnail: qathmub });
            });
        return await message.client.deleteMessage(message.jid, {id: downloading.key.id, remoteJid: message.jid, fromMe: LOL})
    }));

    Amdi.operate({pattern: 'cqtaudio', fromMe: LOL, deleteCommand: false,dontAddCommandList: true}, (async (message, match) => {    

        if (!message.reply_message) return await message.sendMessage('*Need a audio file!*');
        var downloading = await message.client.sendMessage(message.jid,'```🪄 Media editing..```',MessageType.text);
        var location = await message.client.downloadAndSaveMediaMessage({
            key: {
                remoteJid: message.reply_message.jid,
                id: message.reply_message.id
            },
            message: message.reply_message.data.quotedMessage
        });
    
        ffmpeg(location)
            .outputOptions(["-y", "-filter_complex", "[0:a]showcqt=s=1280x720,format=yuv420p[v]", "-map", "[v]", "-map 0:a"])
            .save('output.mp4')
            .on('end', async () => {
                await message.sendMessage(fs.readFileSync('output.mp4'), MessageType.video, {mimetype: Mimetype.mpeg, caption: Build.CAP, quoted: message.data, thumbnail: qathmub });
            });
        return await message.client.deleteMessage(message.jid, {id: downloading.key.id, remoteJid: message.jid, fromMe: LOL})
    }));

    Amdi.operate({pattern: 'mp3eq', fromMe: LOL, deleteCommand: false,dontAddCommandList: true}, (async (message, match) => {    

        if (message.reply_message === false) return await message.sendMessage('*Need a audio file!*');
        var downloading = await message.client.sendMessage(message.jid,'```🪄 Media editing..```',MessageType.text);
        var location = await message.client.downloadAndSaveMediaMessage({
            key: {
                remoteJid: message.reply_message.jid,
                id: message.reply_message.id
            },
            message: message.reply_message.data.quotedMessage
        });

        ffmpeg(location)
            .outputOptions(["-y", "-af", "superequalizer=1b=10:2b=10:3b=1:4b=5:5b=7:6b=5:7b=2:8b=3:9b=4:10b=5:11b=6:12b=7:13b=8:14b=8:15b=9:16b=9:17b=10:18b=10[a];[a]loudnorm=I=-16:TP=-1.5:LRA=14", "-ar 48k"])
            .save('output.mp3')
            .on('end', async () => {
                await message.sendMessage(fs.readFileSync('output.mp3'), MessageType.audio, {mimetype: Mimetype.mp4Audio, ptt: false});
            });
        return await message.client.deleteMessage(message.jid, {id: downloading.key.id, remoteJid: message.jid, fromMe: LOL})
    }));

    Amdi.operate({pattern: 'mp3crusher', fromMe: LOL, deleteCommand: false,dontAddCommandList: true}, (async (message, match) => {    

        if (message.reply_message === false) return await message.sendMessage('*Need a audio file!*');
        var downloading = await message.client.sendMessage(message.jid,'```🪄 Media editing..```',MessageType.text);
        var location = await message.client.downloadAndSaveMediaMessage({
            key: {
                remoteJid: message.reply_message.jid,
                id: message.reply_message.id
            },
            message: message.reply_message.data.quotedMessage
        });
    
        ffmpeg(location)
            .outputOptions(["-y", "-filter_complex", "acrusher=level_in=8:level_out=18:bits=8:mode=log:aa=1"])
            .save('output.mp3')
            .on('end', async () => {
                await message.sendMessage(fs.readFileSync('output.mp3'), MessageType.audio, {mimetype: Mimetype.mp4Audio, ptt: false});
            });
        return await message.client.deleteMessage(message.jid, {id: downloading.key.id, remoteJid: message.jid, fromMe: LOL})
    }));

    Amdi.operate({pattern: 'mp3reverse', fromMe: LOL, deleteCommand: false,dontAddCommandList: true}, (async (message, match) => {    

        if (message.reply_message === false) return await message.sendMessage('*Need a audio file!*');
        var downloading = await message.client.sendMessage(message.jid,'```🪄 Media editing..```',MessageType.text);
        var location = await message.client.downloadAndSaveMediaMessage({
            key: {
                remoteJid: message.reply_message.jid,
                id: message.reply_message.id
            },
            message: message.reply_message.data.quotedMessage
        });

        ffmpeg(location)
            .outputOptions(["-y", "-filter_complex", "areverse"])
            .save('output.mp3')
            .on('end', async () => {
                await message.sendMessage(fs.readFileSync('output.mp3'), MessageType.audio, {mimetype: Mimetype.mp4Audio, ptt: false});
            });
        return await message.client.deleteMessage(message.jid, {id: downloading.key.id, remoteJid: message.jid, fromMe: LOL})
    }));

    Amdi.operate({pattern: 'mp4vintage', fromMe: LOL, deleteCommand: false,dontAddCommandList: true}, (async (message, match) => {    

        if (message.reply_message === false) return await message.sendMessage('*Need a video!*');
        var downloading = await message.client.sendMessage(message.jid,'```🪄 Media editing..```',MessageType.text);
        var location = await message.client.downloadAndSaveMediaMessage({
            key: {
                remoteJid: message.reply_message.jid,
                id: message.reply_message.id
            },
            message: message.reply_message.data.quotedMessage
        });

        ffmpeg(location)
            .outputOptions(["-y", "-vf", "curves=vintage,format=yuv420p"])
            .fps(22)
            .save('output.mp4')
            .on('end', async () => {
                await message.sendMessage(fs.readFileSync('output.mp4'), MessageType.video, {mimetype: Mimetype.mpeg, caption: Build.CAP, quoted: message.data, thumbnail: qathmub });
            });
        return await message.client.deleteMessage(message.jid, {id: downloading.key.id, remoteJid: message.jid, fromMe: LOL})
    }));

    Amdi.operate({pattern: 'mp4reverse', fromMe: LOL, deleteCommand: false,dontAddCommandList: true}, (async (message, match) => {   
 
        if (message.reply_message === false) return await message.sendMessage('*Need a video!*');
        var downloading = await message.client.sendMessage(message.jid,'```🪄 Media editing..```',MessageType.text);
        var location = await message.client.downloadAndSaveMediaMessage({
            key: {
                remoteJid: message.reply_message.jid,
                id: message.reply_message.id
            },
            message: message.reply_message.data.quotedMessage
        });

        ffmpeg(location)
            .outputOptions(["-y", "-vf", "reverse", "-af", "areverse"])
            .format('mp4')
            .fps(22)
            .save('output.mp4')
            .on('end', async () => {
                await message.sendMessage(fs.readFileSync('output.mp4'), MessageType.video, {mimetype: Mimetype.mpeg, caption: Build.CAP, quoted: message.data, thumbnail: qathmub });
            });
        return await message.client.deleteMessage(message.jid, {id: downloading.key.id, remoteJid: message.jid, fromMe: LOL})
    }));

    Amdi.operate({pattern: 'mp4bw', fromMe: LOL, deleteCommand: false,dontAddCommandList: true}, (async (message, match) => {    

        if (message.reply_message === false) return await message.sendMessage('*Need a video!*');
        var downloading = await message.client.sendMessage(message.jid,'```🪄 Media editing..```',MessageType.text);
        var location = await message.client.downloadAndSaveMediaMessage({
            key: {
                remoteJid: message.reply_message.jid,
                id: message.reply_message.id
            },
            message: message.reply_message.data.quotedMessage
        });

        ffmpeg(location)
            .outputOptions(["-y", "-vf", "hue=s=0"])
            .format('mp4')
            .save('output.mp4')
            .on('end', async () => {
                await message.sendMessage(fs.readFileSync('output.mp4'), MessageType.video, {mimetype: Mimetype.mpeg, caption: Build.CAP, quoted: message.data, thumbnail: qathmub });
            });
        return await message.client.deleteMessage(message.jid, {id: downloading.key.id, remoteJid: message.jid, fromMe: LOL})
    }));

    Amdi.operate({pattern: 'bwimage', fromMe: LOL, deleteCommand: false,dontAddCommandList: true}, (async (message, match) => {    

        if (message.reply_message === false) return await message.sendMessage('*Need a photo!!*');
        var downloading = await message.client.sendMessage(message.jid,'```🪄 Media editing..```',MessageType.text);
        var location = await message.client.downloadAndSaveMediaMessage({
            key: {
                remoteJid: message.reply_message.jid,
                id: message.reply_message.id
            },
            message: message.reply_message.data.quotedMessage
        });

        ffmpeg(location)
            .outputOptions(["-y", "-vf", "hue=s=0"])
            .save('output.jpg')
            .on('end', async () => {
                await message.sendMessage(fs.readFileSync('output.jpg'), MessageType.image, {mimetype: Mimetype.jpg, caption: Build.CAP, quoted: message.data, thumbnail: qathmub });
        });
        return await message.client.deleteMessage(message.jid, {id: downloading.key.id, remoteJid: message.jid, fromMe: LOL})
    }));

    Amdi.operate({pattern: 'vintageimage', fromMe: LOL, deleteCommand: false,dontAddCommandList: true}, (async (message, match) => {    

        if (message.reply_message === false) return await message.sendMessage('*Need a photo!!*');
        var downloading = await message.client.sendMessage(message.jid,'```🪄 Media editing..```',MessageType.text);
        var location = await message.client.downloadAndSaveMediaMessage({
            key: {
                remoteJid: message.reply_message.jid,
                id: message.reply_message.id
            },
            message: message.reply_message.data.quotedMessage
        });

        ffmpeg(location)
            .outputOptions(["-y", "-vf", "curves=vintage"])
            .save('output.jpg')
            .on('end', async () => {
                await message.sendMessage(fs.readFileSync('output.jpg'), MessageType.image, {mimetype: Mimetype.jpg, caption: Build.CAP, quoted: message.data, thumbnail: qathmub });
            });
        return await message.client.deleteMessage(message.jid, {id: downloading.key.id, remoteJid: message.jid, fromMe: LOL})
    }));

    Amdi.operate({pattern: 'mp4enhance', fromMe: LOL, deleteCommand: false,dontAddCommandList: true}, (async (message, match) => {    

        if (message.reply_message === false) return await message.sendMessage('*Need a video!*');
        var downloading = await message.client.sendMessage(message.jid,'```🪄 Media editing..```',MessageType.text);
        var location = await message.client.downloadAndSaveMediaMessage({
            key: {
                remoteJid: message.reply_message.jid,
                id: message.reply_message.id
            },
            message: message.reply_message.data.quotedMessage
        });

        ffmpeg(location)
            .outputOptions(["-y", "-vf", "unsharp=3:3:1.5"])
            .format('mp4')
            .save('output.mp4')
            .on('end', async () => {
                await message.sendMessage(fs.readFileSync('output.mp4'), MessageType.video, {mimetype: Mimetype.mpeg, caption: Build.CAP, quoted: message.data, thumbnail: qathmub });
            });
        return await message.client.deleteMessage(message.jid, {id: downloading.key.id, remoteJid: message.jid, fromMe: LOL})
    }));

    Amdi.operate({pattern: 'blurimage', fromMe: LOL, deleteCommand: false,dontAddCommandList: true}, (async (message, match) => {   
 
        if (message.reply_message === false) return await message.sendMessage('*Need a photo!!*');
        var downloading = await message.client.sendMessage(message.jid,'```🪄 Media editing..```',MessageType.text);
        var location = await message.client.downloadAndSaveMediaMessage({
            key: {
                remoteJid: message.reply_message.jid,
                id: message.reply_message.id
            },
            message: message.reply_message.data.quotedMessage
        });

        ffmpeg(location)
            .outputOptions(["-y", "-vf", "split[original][copy];[copy]scale=ih*16/9:-1,crop=h=iw*9/16,gblur=sigma=20[blurred];[blurred][original]overlay=(main_w-overlay_w)/2:(main_h-overlay_h)/2"])
            .save('output.jpg')
            .on('end', async () => {
                await message.sendMessage(fs.readFileSync('output.jpg'), MessageType.image, {mimetype: Mimetype.jpg, caption: Build.CAP, quoted: message.data, thumbnail: qathmub });
            });
        return await message.client.deleteMessage(message.jid, {id: downloading.key.id, remoteJid: message.jid, fromMe: LOL})
    }));

    Amdi.operate({pattern: 'mp4blur', fromMe: LOL, deleteCommand: false,dontAddCommandList: true}, (async (message, match) => {   
 
        if (message.reply_message === false) return await message.sendMessage('*Need a audio file!*');
        var downloading = await message.client.sendMessage(message.jid,'```🪄 Media editing..```',MessageType.text);
        var location = await message.client.downloadAndSaveMediaMessage({
            key: {
                remoteJid: message.reply_message.jid,
                id: message.reply_message.id
            },
            message: message.reply_message.data.quotedMessage
        });
    
        ffmpeg(location)
            .outputOptions(["-y", "-vf", "split[original][copy];[copy]scale=ih*16/9:-1,crop=h=iw*9/16,gblur=sigma=20[blurred];[blurred][original]overlay=(main_w-overlay_w)/2:(main_h-overlay_h)/2"])
            .save('output.mp4')
            .on('end', async () => {
                await message.sendMessage(fs.readFileSync('output.mp4'), MessageType.video, {mimetype: Mimetype.mpeg, caption: Build.CAP, quoted: message.data, thumbnail: qathmub });
            });
        return await message.client.deleteMessage(message.jid, {id: downloading.key.id, remoteJid: message.jid, fromMe: LOL})
    }));

    Amdi.operate({pattern: 'mp3pitch', fromMe: LOL, deleteCommand: false,dontAddCommandList: true}, (async (message, match) => {    

        if (message.reply_message === false) return await message.sendMessage('*Need a audio file!*');
        var downloading = await message.client.sendMessage(message.jid,'```🪄 Media editing..```',MessageType.text);
        var location = await message.client.downloadAndSaveMediaMessage({
            key: {
                remoteJid: message.reply_message.jid,
                id: message.reply_message.id
            },
            message: message.reply_message.data.quotedMessage
        });

        ffmpeg(location)
            .outputOptions(["-y", "-af", "asetrate=44100*1.3"])
            .save('output.mp3')
            .on('end', async () => {
                await message.sendMessage(fs.readFileSync('output.mp3'), MessageType.audio, {mimetype: Mimetype.mp4Audio, ptt: false});
            });
        return await message.client.deleteMessage(message.jid, {id: downloading.key.id, remoteJid: message.jid, fromMe: LOL})
    }));

    Amdi.operate({pattern: 'mp4edge', fromMe: LOL, deleteCommand: false,dontAddCommandList: true}, (async (message, match) => {    

        if (message.reply_message === false) return await message.sendMessage('*Need a video!*');
        var downloading = await message.client.sendMessage(message.jid,'```Edging Video..```',MessageType.text);
        var location = await message.client.downloadAndSaveMediaMessage({
            key: {
                remoteJid: message.reply_message.jid,
                id: message.reply_message.id
            },
            message: message.reply_message.data.quotedMessage
        });

        ffmpeg(location)
            .outputOptions(["-y", "-codec:v", "mpeg4", "-filter:v", "edgedetect=low=0.9:high=0.3"])
            .format('mp4')
            .save('output.mp4')
            .on('end', async () => {
                await message.sendMessage(fs.readFileSync('output.mp4'), MessageType.video, {mimetype: Mimetype.mpeg, caption: Build.CAP, quoted: message.data, thumbnail: qathmub });
            });
        return await message.client.deleteMessage(message.jid, {id: downloading.key.id, remoteJid: message.jid, fromMe: LOL})
    }));

    Amdi.operate({pattern: 'mp3low', fromMe: LOL, deleteCommand: false,dontAddCommandList: true}, (async (message, match) => {    

        if (message.reply_message === false) return await message.sendMessage('*Need a audio file!*');
        var downloading = await message.client.sendMessage(message.jid,'```🪄 Media editing..```',MessageType.text);
        var location = await message.client.downloadAndSaveMediaMessage({
            key: {
                remoteJid: message.reply_message.jid,
                id: message.reply_message.id
            },
            message: message.reply_message.data.quotedMessage
        });

        ffmpeg(location)
            .outputOptions(["-y", "-af", "asetrate=44100*0.9"])
            .save('output.mp3')
            .on('end', async () => {
                await message.sendMessage(fs.readFileSync('output.mp3'), MessageType.audio, {mimetype: Mimetype.mp4Audio, ptt: false});
            });
        return await message.client.deleteMessage(message.jid, {id: downloading.key.id, remoteJid: message.jid, fromMe: LOL})
    }));

    Amdi.operate({pattern: 'x2mp3', fromMe: LOL, deleteCommand: false,dontAddCommandList: true}, (async (message, match) => {    

        if (message.reply_message === false) return await message.sendMessage('*Need a audio file!*');
        var downloading = await message.client.sendMessage(message.jid,'```🪄 Media editing..```',MessageType.text);
        var location = await message.client.downloadAndSaveMediaMessage({
            key: {
                remoteJid: message.reply_message.jid,
                id: message.reply_message.id
            },
            message: message.reply_message.data.quotedMessage
        });

        ffmpeg(location)
            .outputOptions(["-y", "-filter:a", "atempo=2.0", "-vn"])
            .save('output.mp3')
            .on('end', async () => {
                await message.sendMessage(fs.readFileSync('output.mp3'), MessageType.audio, {mimetype: Mimetype.mp4Audio, ptt: false});
            });
        return await message.client.deleteMessage(message.jid, {id: downloading.key.id, remoteJid: message.jid, fromMe: LOL})
    }));

    Amdi.operate({pattern: 'edgeimage', fromMe: LOL, deleteCommand: false,dontAddCommandList: true}, (async (message, match) => {    

        if (message.reply_message === false) return await message.sendMessage('*Need Photo*');
        var downloading = await message.client.sendMessage(message.jid,'```Edging Image..```',MessageType.text);
        var location = await message.client.downloadAndSaveMediaMessage({
            key: {
                remoteJid: message.reply_message.jid,
                id: message.reply_message.id
            },
            message: message.reply_message.data.quotedMessage
        });

        ffmpeg(location)
            .outputOptions(["-y", "-filter:v", "edgedetect=low=0.9:high=0.2"])
            .save('output.jpg')
            .on('end', async () => {
                await message.sendMessage(fs.readFileSync('output.jpg'), MessageType.image, {mimetype: Mimetype.jpg, caption: Build.CAP, quoted: message.data, thumbnail: qathmub });
            });
        return await message.client.deleteMessage(message.jid, {id: downloading.key.id, remoteJid: message.jid, fromMe: LOL})
    }));

    Amdi.operate({pattern: 'enhanceimage', fromMe: LOL, deleteCommand: false,dontAddCommandList: true}, (async (message, match) => {    

        if (message.reply_message === false) return await message.sendMessage('*Need a photo!!*');
        var downloading = await message.client.sendMessage(message.jid,'```🪄 Media editing..```',MessageType.text);
        var location = await message.client.downloadAndSaveMediaMessage({
            key: {
                remoteJid: message.reply_message.jid,
                id: message.reply_message.id
            },
            message: message.reply_message.data.quotedMessage
        });

        ffmpeg(location)
            .outputOptions(["-y", "-vf", "unsharp=3:3:1.5"])
            .save('output.jpg')
            .on('end', async () => {
                await message.sendMessage(fs.readFileSync('output.jpg'), MessageType.image, {mimetype: Mimetype.jpg, caption: Build.CAP, quoted: message.data, thumbnail: qathmub });
            });
        return await message.client.deleteMessage(message.jid, {id: downloading.key.id, remoteJid: message.jid, fromMe: LOL})
    }));

    Amdi.operate({pattern: 'mp3volume', fromMe: LOL, deleteCommand: false,dontAddCommandList: true}, (async (message, match) => { 
   
        if (message.reply_message === false) return await message.sendMessage('*Need a audio file!*');
        var downloading = await message.client.sendMessage(message.jid,'```🪄 Media editing..```',MessageType.text);
        var location = await message.client.downloadAndSaveMediaMessage({
            key: {
                remoteJid: message.reply_message.jid,
                id: message.reply_message.id
            },
            message: message.reply_message.data.quotedMessage
        });

        ffmpeg(location)
            .outputOptions(["-y", "-filter:a", "volume=5.3"])
            .save('output.mp3')
            .on('end', async () => {
                await message.sendMessage(fs.readFileSync('output.mp3'), MessageType.audio, {mimetype: Mimetype.mp4Audio, ptt: false});
            });
        return await message.client.deleteMessage(message.jid, {id: downloading.key.id, remoteJid: message.jid, fromMe: LOL})
    })); 

    Amdi.operate({pattern: 'gif', fromMe: LOL, deleteCommand: false,dontAddCommandList: true}, (async (message, match) => {    

        if (message.reply_message === false) return await message.sendMessage('Need a video!');
        var downloading = await message.client.sendMessage(message.jid,'```🪄 Media editing to Gif..```',MessageType.text);
        var location = await message.client.downloadAndSaveMediaMessage({
            key: {
                remoteJid: message.reply_message.jid,
                id: message.reply_message.id
            },
            message: message.reply_message.data.quotedMessage
        });

        ffmpeg(location)
            .noAudio()
            .fps(13)
            .videoBitrate(500)
            .save('output_gif.mp4')
            .on('end', async () => {
                await message.sendMessage(fs.readFileSync('output_gif.mp4'), MessageType.video, {mimetype: Mimetype.gif, caption: Build.CAP, quoted: message.data, thumbnail: qathmub });
            });
        return await message.client.deleteMessage(message.jid, {id: downloading.key.id, remoteJid: message.jid, fromMe: LOL})
    }));

    Amdi.operate({pattern: 'agif', fromMe: LOL, deleteCommand: false,dontAddCommandList: true}, (async (message, match) => {    

        if (message.reply_message === false) return await message.sendMessage('Need a video!');
        var downloading = await message.client.sendMessage(message.jid,'```🪄 Media editing to Gif..```',MessageType.text);
        var location = await message.client.downloadAndSaveMediaMessage({
            key: {
                remoteJid: message.reply_message.jid,
                id: message.reply_message.id
            },
            message: message.reply_message.data.quotedMessage
        });

        ffmpeg(location)
            .fps(13)
                .videoBitrate(500)
                .save('output_gif.mp4')
                .on('end', async () => {
                    await message.sendMessage(fs.readFileSync('output_gif.mp4'), MessageType.video, {mimetype: Mimetype.gif, caption: Build.CAP, quoted: message.data, thumbnail: qathmub });
                });
            return await message.client.deleteMessage(message.jid, {id: downloading.key.id, remoteJid: message.jid, fromMe: LOL})
    }));

    Amdi.operate({pattern: 'grenimage', fromMe: LOL, deleteCommand: false,dontAddCommandList: true}, (async (message, match) => {   

        if (message.reply_message === false) return await message.sendMessage('Need a photo!!');
        var downloading = await message.client.sendMessage(message.jid,'```Adding Gren..```',MessageType.text);
        var location = await message.client.downloadAndSaveMediaMessage({
            key: {
                remoteJid: message.reply_message.jid,
                id: message.reply_message.id
            },
            message: message.reply_message.data.quotedMessage
        });

        ffmpeg(location)
            .videoFilters('noise=alls=100:allf=t+u')
            .save('output.jpg')
            .on('end', async () => {
                await message.sendMessage(fs.readFileSync('output.jpg'), MessageType.image, {mimetype: Mimetype.jpg, caption: Build.CAP, quoted: message.data, thumbnail: qathmub });
            });
        return await message.client.deleteMessage(message.jid, {id: downloading.key.id, remoteJid: message.jid, fromMe: LOL})
    }));

    Amdi.operate({pattern: 'interp ?(.*)', fromMe: LOL, deleteCommand: false,dontAddCommandList: true}, (async (message, match) => {    

        if (!message.reply_message.video) return await message.sendMessage('*Need Video and FPS Value!*\nEx: ```.interp 100```');
        if (message.reply_message.video && match[1] <= 10) return await message.sendMessage('*Low FPS Value ⚠️*\n*Please, type over 10*');
        if (message.reply_message.video && match[1] >= 500) return await message.sendMessage('*High FPS Value ⚠️*\n*Please, type under 500*')
   
        var downloading = await message.client.sendMessage(message.jid,'```Interpolating..```',MessageType.text);
        var location = await message.client.downloadAndSaveMediaMessage({
            key: {
                remoteJid: message.reply_message.jid,
                id: message.reply_message.id
            },
            message: message.reply_message.data.quotedMessage
        });
        await message.sendMessage('_This process may take a while.._');

        ffmpeg(location)
            .videoFilters(`minterpolate=fps=${match[1]}:mi_mode=mci:me_mode=bidir`)
            .format('mp4')
            .save('output.mp4')
            .on('end', async () => {
                await message.sendMessage(fs.readFileSync('output.mp4'), MessageType.video, {caption: `Copyright © 2021 | Queen Amdi\n_Interpolated to ${match[1]} FPS_`});
            });
        return await message.client.deleteMessage(message.jid, {id: downloading.key.id, remoteJid: message.jid, fromMe: LOL})
    }));

    Amdi.operate({pattern: 'rainbowimage', fromMe: LOL, deleteCommand: false,dontAddCommandList: true}, (async (message, match) => {    

        if (message.reply_message === false) return await message.sendMessage('*Need a photo!!*');
        var downloading = await message.client.sendMessage(message.jid,'```🪄 Media editing..```',MessageType.text);
        var location = await message.client.downloadAndSaveMediaMessage({
            key: {
                remoteJid: message.reply_message.jid,
                id: message.reply_message.id
            },
            message: message.reply_message.data.quotedMessage
        });

        ffmpeg(location)
            .outputOptions(["-y", "-vf", "geq=r='X/W*r(X,Y)':g='(1-X/W)*g(X,Y)':b='(H-Y)/H*b(X,Y)"])
            .videoFilters('eq=brightness=0.5')
            .save('output.jpg')
            .on('end', async () => {
                await message.sendMessage(fs.readFileSync('output.jpg'), MessageType.image, {mimetype: Mimetype.jpg, caption: Build.CAP, quoted: message.data, thumbnail: qathmub });
            });
        return await message.client.deleteMessage(message.jid, {id: downloading.key.id, remoteJid: message.jid, fromMe: LOL})
    }));

    Amdi.operate({pattern: 'mp4rainbow', fromMe: LOL, deleteCommand: false,dontAddCommandList: true}, (async (message, match) => {  
  
        if (message.reply_message === false) return await message.sendMessage('*Need a video!*');
        var downloading = await message.client.sendMessage(message.jid,'```🪄 Media editing..```',MessageType.text);
        var location = await message.client.downloadAndSaveMediaMessage({
            key: {
                remoteJid: message.reply_message.jid,
                id: message.reply_message.id
            },
            message: message.reply_message.data.quotedMessage
        });

        ffmpeg(location)
            .outputOptions(["-y", "-vf", "geq=r='X/W*r(X,Y)':g='(1-X/W)*g(X,Y)':b='(H-Y)/H*b(X,Y)", "-pix_fmt yuv420p"])
            .videoFilters('eq=brightness=0.5')
            .save('output.mp4')
            .on('end', async () => {
                await message.sendMessage(fs.readFileSync('output.mp4'), MessageType.video, {mimetype: Mimetype.mpeg, caption: Build.CAP, quoted: message.data, thumbnail: qathmub });
            });
        return await message.client.deleteMessage(message.jid, {id: downloading.key.id, remoteJid: message.jid, fromMe: LOL})
    }));

    Amdi.operate({pattern: 'negativeimage', fromMe: LOL, deleteCommand: false,dontAddCommandList: true}, (async (message, match) => {  
  
        if (message.reply_message === false) return await message.sendMessage('*Need a photo!!*');
        var downloading = await message.client.sendMessage(message.jid,'```🪄 Media editing..```',MessageType.text);
        var location = await message.client.downloadAndSaveMediaMessage({
            key: {
                remoteJid: message.reply_message.jid,
                id: message.reply_message.id
            },
            message: message.reply_message.data.quotedMessage
        });

        ffmpeg(location)
            .outputOptions(["-y", "-vf", "curves=color_negative"])
            .save('output.jpg')
            .on('end', async () => {
                await message.sendMessage(fs.readFileSync('output.jpg'), MessageType.image, {mimetype: Mimetype.jpg, caption: Build.CAP, quoted: message.data, thumbnail: qathmub });
            });
        return await message.client.deleteMessage(message.jid, {id: downloading.key.id, remoteJid: message.jid, fromMe: LOL})
    }));

    Amdi.operate({pattern: 'mp4negative', fromMe: LOL, deleteCommand: false,dontAddCommandList: true}, (async (message, match) => {   
 
        if (message.reply_message === false) return await message.sendMessage('*Need a video!*');
        var downloading = await message.client.sendMessage(message.jid,'```🪄 Media editing..```',MessageType.text);
        var location = await message.client.downloadAndSaveMediaMessage({
            key: {
                remoteJid: message.reply_message.jid,
                id: message.reply_message.id
            },
            message: message.reply_message.data.quotedMessage
        });

        ffmpeg(location)
            .outputOptions(["-y", "-vf", "curves=color_negative,format=yuv420p"])
            .format('mp4')
            .save('output.mp4')
            .on('end', async () => {
                await message.sendMessage(fs.readFileSync('output.mp4'), MessageType.video, {mimetype: Mimetype.mpeg, caption: Build.CAP, quoted: message.data, thumbnail: qathmub });
            });
        return await message.client.deleteMessage(message.jid, {id: downloading.key.id, remoteJid: message.jid, fromMe: LOL})
    }));

    Amdi.operate({pattern: 'mp4art', fromMe: LOL, deleteCommand: false,dontAddCommandList: true}, (async (message, match) => {    

        if (message.reply_message === false) return await message.sendMessage('*Need a video!*');
        var downloading = await message.client.sendMessage(message.jid,'```🪄 Media editing..```',MessageType.text);
        var location = await message.client.downloadAndSaveMediaMessage({
            key: {
                remoteJid: message.reply_message.jid,
                id: message.reply_message.id
            },
            message: message.reply_message.data.quotedMessage
        });
    
    ffmpeg(location)
            .outputOptions(["-y", "-vf", "convolution=-2 -1 0 -1 1 1 0 1 2:-2 -1 0 -1 1 1 0 1 2:-2 -1 0 -1 1 1 0 1 2:-2 -1 0 -1 1 1 0 1 2,format=yuv420p"])
            .format('mp4')
            .save('output.mp4')
            .on('end', async () => {
                await message.sendMessage(fs.readFileSync('output.mp4'), MessageType.video, {mimetype: Mimetype.mpeg, caption: Build.CAP, quoted: message.data, thumbnail: qathmub });
            });
        return await message.client.deleteMessage(message.jid, {id: downloading.key.id, remoteJid: message.jid, fromMe: LOL})
    }));

    Amdi.operate({pattern: 'artimage', fromMe: LOL, deleteCommand: false,dontAddCommandList: true}, (async (message, match) => {    

        if (message.reply_message === false) return await message.sendMessage('*Need a video!*');
        var downloading = await message.client.sendMessage(message.jid,'```🪄 Media editing..```',MessageType.text);
        var location = await message.client.downloadAndSaveMediaMessage({
            key: {
                remoteJid: message.reply_message.jid,
                id: message.reply_message.id
            },
            message: message.reply_message.data.quotedMessage
        });

        ffmpeg(location)
            .outputOptions(["-y", "-vf", "convolution=-2 -1 0 -1 1 1 0 1 2:-2 -1 0 -1 1 1 0 1 2:-2 -1 0 -1 1 1 0 1 2:-2 -1 0 -1 1 1 0 1 2"])
            .save('output.jpg')
            .on('end', async () => {
                await message.sendMessage(fs.readFileSync('output.jpg'), MessageType.image, {mimetype: Mimetype.jpg, caption: Build.CAP, quoted: message.data, thumbnail: qathmub });
            });
        return await message.client.deleteMessage(message.jid, {id: downloading.key.id, remoteJid: message.jid, fromMe: LOL})
    }));

    Amdi.operate({pattern: 'mp4stab', fromMe: LOL, deleteCommand: false,dontAddCommandList: true}, (async (message, match) => {    

        if (message.reply_message === false) return await message.sendMessage('*Need a video!*');
        var downloading = await message.client.sendMessage(message.jid,'```🪄 Media editing..```',MessageType.text);
        var location = await message.client.downloadAndSaveMediaMessage({
            key: {
                remoteJid: message.reply_message.jid,
                id: message.reply_message.id
            },
            message: message.reply_message.data.quotedMessage
        });

        ffmpeg(location)
            .outputOptions(["-y", "-vf", "deshake,format=yuv420p"])
            .format('mp4')
            .save('output.mp4')
            .on('end', async () => {
                await message.sendMessage(fs.readFileSync('output.mp4'), MessageType.video, {mimetype: Mimetype.mpeg, caption: Build.CAP, quoted: message.data, thumbnail: qathmub });
            });
        return await message.client.deleteMessage(message.jid, {id: downloading.key.id, remoteJid: message.jid, fromMe: LOL})
    }));

    Amdi.operate({pattern: 'mp4color', fromMe: LOL, deleteCommand: false,dontAddCommandList: true}, (async (message, match) => {    

        if (message.reply_message === false) return await message.sendMessage('*Need a video!*');
        var downloading = await message.client.sendMessage(message.jid,'```🪄 Media editing..```',MessageType.text);
        var location = await message.client.downloadAndSaveMediaMessage({
            key: {
                remoteJid: message.reply_message.jid,
                id: message.reply_message.id
            },
            message: message.reply_message.data.quotedMessage
        });

        ffmpeg(location)
            .outputOptions(["-y", "-vf", "eq=contrast=1.3:saturation=1.5:brightness=-0.1,format=yuv420p"])
            .format('mp4')
            .save('output.mp4')
            .on('end', async () => {
                await message.sendMessage(fs.readFileSync('output.mp4'), MessageType.video, {mimetype: Mimetype.mpeg, caption: Build.CAP, quoted: message.data, thumbnail: qathmub });
            });
        return await message.client.deleteMessage(message.jid, {id: downloading.key.id, remoteJid: message.jid, fromMe: LOL})
    }));

    Amdi.operate({pattern: 'colorimage', fromMe: LOL, deleteCommand: false,dontAddCommandList: true}, (async (message, match) => {    

        if (message.reply_message === false) return await message.sendMessage('*Need a photo!!*');
        var downloading = await message.client.sendMessage(message.jid,'```🪄 Media editing..```',MessageType.text);
        var location = await message.client.downloadAndSaveMediaMessage({
            key: {
                remoteJid: message.reply_message.jid,
                id: message.reply_message.id
            },
            message: message.reply_message.data.quotedMessage
        });

        ffmpeg(location)
            .outputOptions(["-y", "-vf", "eq=contrast=1.3:saturation=1.5:brightness=-0.1"])
            .save('output.jpg')
            .on('end', async () => {
                await message.sendMessage(fs.readFileSync('output.jpg'), MessageType.image, {mimetype: Mimetype.jpg, caption: Build.CAP, quoted: message.data, thumbnail: qathmub });
            });
        return await message.client.deleteMessage(message.jid, {id: downloading.key.id, remoteJid: message.jid, fromMe: LOL})
    }));

    Amdi.operate({pattern: 'mp4slowmo', fromMe: LOL, deleteCommand: false,dontAddCommandList: true}, (async (message, match) => {    

        if (!message.reply_message.video) return await message.sendMessage('*Need a video!*');
        var downloading = await message.client.sendMessage(message.jid,'```Motion Render Interpolating..```',MessageType.text);
        var location = await message.client.downloadAndSaveMediaMessage({
            key: {
                remoteJid: message.reply_message.jid,
                id: message.reply_message.id
            },
            message: message.reply_message.data.quotedMessage
        });

        await message.client.sendMessage(message.jid, '_This process may take a while.._', MessageType.text);

        ffmpeg(location)
            .videoFilters('minterpolate=fps=120')
            .videoFilters('setpts=4*PTS')
            .noAudio()
            .format('mp4')
            .save('slowmo.mp4')
            .on('end', async () => {
                await message.sendMessage(fs.readFileSync('slowmo.mp4'), MessageType.video, {caption: 'True Slow-Motion by Queen Amdi'});
            });
        return await message.client.deleteMessage(message.jid, {id: downloading.key.id, remoteJid: message.jid, fromMe: LOL})
    }));


    const qathmub = ""